/*
 * Automatically Generated from Mathematica.
 * Mon 12 Jun 2017 19:30:52 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double _NotUsed;
  NULL;
  p_output1[0]=1;
  p_output1[1]=1;
  p_output1[2]=1;
  p_output1[3]=1;
  p_output1[4]=1;
  p_output1[5]=1;
  p_output1[6]=1;
  p_output1[7]=1;
  p_output1[8]=1;
  p_output1[9]=1;
  p_output1[10]=1;
  p_output1[11]=1;
  p_output1[12]=1;
  p_output1[13]=1;
  p_output1[14]=1;
  p_output1[15]=1;
  p_output1[16]=1;
  p_output1[17]=1;
  p_output1[18]=1;
  p_output1[19]=1;
  p_output1[20]=1;
  p_output1[21]=1;
  p_output1[22]=1;
  p_output1[23]=1;
  p_output1[24]=1;
  p_output1[25]=1;
  p_output1[26]=1;
  p_output1[27]=1;
  p_output1[28]=1;
  p_output1[29]=1;
  p_output1[30]=1;
  p_output1[31]=1;
  p_output1[32]=1;
  p_output1[33]=1;
  p_output1[34]=1;
  p_output1[35]=1;
  p_output1[36]=2;
  p_output1[37]=2;
  p_output1[38]=2;
  p_output1[39]=2;
  p_output1[40]=2;
  p_output1[41]=2;
  p_output1[42]=2;
  p_output1[43]=2;
  p_output1[44]=2;
  p_output1[45]=2;
  p_output1[46]=2;
  p_output1[47]=2;
  p_output1[48]=2;
  p_output1[49]=2;
  p_output1[50]=2;
  p_output1[51]=2;
  p_output1[52]=2;
  p_output1[53]=2;
  p_output1[54]=2;
  p_output1[55]=2;
  p_output1[56]=2;
  p_output1[57]=2;
  p_output1[58]=2;
  p_output1[59]=2;
  p_output1[60]=2;
  p_output1[61]=2;
  p_output1[62]=2;
  p_output1[63]=2;
  p_output1[64]=2;
  p_output1[65]=2;
  p_output1[66]=2;
  p_output1[67]=2;
  p_output1[68]=2;
  p_output1[69]=2;
  p_output1[70]=2;
  p_output1[71]=2;
  p_output1[72]=2;
  p_output1[73]=2;
  p_output1[74]=3;
  p_output1[75]=3;
  p_output1[76]=3;
  p_output1[77]=3;
  p_output1[78]=3;
  p_output1[79]=3;
  p_output1[80]=3;
  p_output1[81]=3;
  p_output1[82]=3;
  p_output1[83]=3;
  p_output1[84]=3;
  p_output1[85]=3;
  p_output1[86]=3;
  p_output1[87]=3;
  p_output1[88]=3;
  p_output1[89]=3;
  p_output1[90]=3;
  p_output1[91]=3;
  p_output1[92]=3;
  p_output1[93]=3;
  p_output1[94]=3;
  p_output1[95]=3;
  p_output1[96]=3;
  p_output1[97]=3;
  p_output1[98]=3;
  p_output1[99]=3;
  p_output1[100]=3;
  p_output1[101]=3;
  p_output1[102]=3;
  p_output1[103]=3;
  p_output1[104]=3;
  p_output1[105]=3;
  p_output1[106]=3;
  p_output1[107]=3;
  p_output1[108]=3;
  p_output1[109]=3;
  p_output1[110]=3;
  p_output1[111]=3;
  p_output1[112]=4;
  p_output1[113]=4;
  p_output1[114]=4;
  p_output1[115]=4;
  p_output1[116]=4;
  p_output1[117]=4;
  p_output1[118]=4;
  p_output1[119]=4;
  p_output1[120]=4;
  p_output1[121]=4;
  p_output1[122]=4;
  p_output1[123]=4;
  p_output1[124]=4;
  p_output1[125]=4;
  p_output1[126]=4;
  p_output1[127]=4;
  p_output1[128]=4;
  p_output1[129]=4;
  p_output1[130]=4;
  p_output1[131]=4;
  p_output1[132]=4;
  p_output1[133]=4;
  p_output1[134]=4;
  p_output1[135]=4;
  p_output1[136]=4;
  p_output1[137]=4;
  p_output1[138]=4;
  p_output1[139]=4;
  p_output1[140]=4;
  p_output1[141]=4;
  p_output1[142]=4;
  p_output1[143]=4;
  p_output1[144]=4;
  p_output1[145]=4;
  p_output1[146]=4;
  p_output1[147]=4;
  p_output1[148]=5;
  p_output1[149]=5;
  p_output1[150]=5;
  p_output1[151]=5;
  p_output1[152]=5;
  p_output1[153]=5;
  p_output1[154]=5;
  p_output1[155]=5;
  p_output1[156]=5;
  p_output1[157]=5;
  p_output1[158]=5;
  p_output1[159]=5;
  p_output1[160]=5;
  p_output1[161]=5;
  p_output1[162]=5;
  p_output1[163]=5;
  p_output1[164]=5;
  p_output1[165]=5;
  p_output1[166]=5;
  p_output1[167]=5;
  p_output1[168]=5;
  p_output1[169]=5;
  p_output1[170]=5;
  p_output1[171]=5;
  p_output1[172]=5;
  p_output1[173]=5;
  p_output1[174]=5;
  p_output1[175]=5;
  p_output1[176]=5;
  p_output1[177]=5;
  p_output1[178]=5;
  p_output1[179]=5;
  p_output1[180]=5;
  p_output1[181]=5;
  p_output1[182]=6;
  p_output1[183]=6;
  p_output1[184]=6;
  p_output1[185]=6;
  p_output1[186]=6;
  p_output1[187]=6;
  p_output1[188]=6;
  p_output1[189]=6;
  p_output1[190]=6;
  p_output1[191]=6;
  p_output1[192]=6;
  p_output1[193]=6;
  p_output1[194]=6;
  p_output1[195]=6;
  p_output1[196]=6;
  p_output1[197]=6;
  p_output1[198]=6;
  p_output1[199]=6;
  p_output1[200]=6;
  p_output1[201]=6;
  p_output1[202]=6;
  p_output1[203]=6;
  p_output1[204]=6;
  p_output1[205]=6;
  p_output1[206]=6;
  p_output1[207]=6;
  p_output1[208]=6;
  p_output1[209]=6;
  p_output1[210]=6;
  p_output1[211]=6;
  p_output1[212]=6;
  p_output1[213]=6;
  p_output1[214]=6;
  p_output1[215]=7;
  p_output1[216]=7;
  p_output1[217]=7;
  p_output1[218]=7;
  p_output1[219]=7;
  p_output1[220]=7;
  p_output1[221]=7;
  p_output1[222]=7;
  p_output1[223]=7;
  p_output1[224]=7;
  p_output1[225]=7;
  p_output1[226]=7;
  p_output1[227]=7;
  p_output1[228]=7;
  p_output1[229]=7;
  p_output1[230]=7;
  p_output1[231]=7;
  p_output1[232]=8;
  p_output1[233]=8;
  p_output1[234]=8;
  p_output1[235]=8;
  p_output1[236]=8;
  p_output1[237]=8;
  p_output1[238]=8;
  p_output1[239]=8;
  p_output1[240]=8;
  p_output1[241]=8;
  p_output1[242]=8;
  p_output1[243]=8;
  p_output1[244]=8;
  p_output1[245]=8;
  p_output1[246]=8;
  p_output1[247]=8;
  p_output1[248]=8;
  p_output1[249]=9;
  p_output1[250]=9;
  p_output1[251]=9;
  p_output1[252]=9;
  p_output1[253]=9;
  p_output1[254]=9;
  p_output1[255]=9;
  p_output1[256]=9;
  p_output1[257]=9;
  p_output1[258]=9;
  p_output1[259]=9;
  p_output1[260]=9;
  p_output1[261]=9;
  p_output1[262]=9;
  p_output1[263]=9;
  p_output1[264]=9;
  p_output1[265]=9;
  p_output1[266]=10;
  p_output1[267]=10;
  p_output1[268]=10;
  p_output1[269]=10;
  p_output1[270]=10;
  p_output1[271]=10;
  p_output1[272]=10;
  p_output1[273]=10;
  p_output1[274]=10;
  p_output1[275]=10;
  p_output1[276]=10;
  p_output1[277]=10;
  p_output1[278]=10;
  p_output1[279]=10;
  p_output1[280]=10;
  p_output1[281]=10;
  p_output1[282]=10;
  p_output1[283]=11;
  p_output1[284]=11;
  p_output1[285]=11;
  p_output1[286]=11;
  p_output1[287]=11;
  p_output1[288]=11;
  p_output1[289]=11;
  p_output1[290]=11;
  p_output1[291]=11;
  p_output1[292]=11;
  p_output1[293]=11;
  p_output1[294]=11;
  p_output1[295]=11;
  p_output1[296]=11;
  p_output1[297]=11;
  p_output1[298]=11;
  p_output1[299]=11;
  p_output1[300]=12;
  p_output1[301]=12;
  p_output1[302]=12;
  p_output1[303]=12;
  p_output1[304]=12;
  p_output1[305]=12;
  p_output1[306]=12;
  p_output1[307]=12;
  p_output1[308]=12;
  p_output1[309]=12;
  p_output1[310]=12;
  p_output1[311]=12;
  p_output1[312]=12;
  p_output1[313]=12;
  p_output1[314]=12;
  p_output1[315]=12;
  p_output1[316]=12;
  p_output1[317]=13;
  p_output1[318]=13;
  p_output1[319]=13;
  p_output1[320]=13;
  p_output1[321]=13;
  p_output1[322]=13;
  p_output1[323]=13;
  p_output1[324]=13;
  p_output1[325]=13;
  p_output1[326]=13;
  p_output1[327]=13;
  p_output1[328]=13;
  p_output1[329]=13;
  p_output1[330]=13;
  p_output1[331]=13;
  p_output1[332]=13;
  p_output1[333]=13;
  p_output1[334]=14;
  p_output1[335]=14;
  p_output1[336]=14;
  p_output1[337]=14;
  p_output1[338]=14;
  p_output1[339]=14;
  p_output1[340]=14;
  p_output1[341]=14;
  p_output1[342]=14;
  p_output1[343]=14;
  p_output1[344]=14;
  p_output1[345]=14;
  p_output1[346]=14;
  p_output1[347]=14;
  p_output1[348]=14;
  p_output1[349]=14;
  p_output1[350]=14;
  p_output1[351]=15;
  p_output1[352]=15;
  p_output1[353]=15;
  p_output1[354]=15;
  p_output1[355]=15;
  p_output1[356]=15;
  p_output1[357]=15;
  p_output1[358]=15;
  p_output1[359]=15;
  p_output1[360]=15;
  p_output1[361]=15;
  p_output1[362]=15;
  p_output1[363]=15;
  p_output1[364]=15;
  p_output1[365]=15;
  p_output1[366]=15;
  p_output1[367]=15;
  p_output1[368]=16;
  p_output1[369]=16;
  p_output1[370]=16;
  p_output1[371]=16;
  p_output1[372]=16;
  p_output1[373]=16;
  p_output1[374]=16;
  p_output1[375]=16;
  p_output1[376]=16;
  p_output1[377]=16;
  p_output1[378]=16;
  p_output1[379]=16;
  p_output1[380]=16;
  p_output1[381]=16;
  p_output1[382]=16;
  p_output1[383]=16;
  p_output1[384]=16;
  p_output1[385]=17;
  p_output1[386]=17;
  p_output1[387]=17;
  p_output1[388]=17;
  p_output1[389]=17;
  p_output1[390]=17;
  p_output1[391]=17;
  p_output1[392]=17;
  p_output1[393]=17;
  p_output1[394]=17;
  p_output1[395]=17;
  p_output1[396]=17;
  p_output1[397]=17;
  p_output1[398]=17;
  p_output1[399]=17;
  p_output1[400]=17;
  p_output1[401]=17;
  p_output1[402]=18;
  p_output1[403]=18;
  p_output1[404]=18;
  p_output1[405]=18;
  p_output1[406]=18;
  p_output1[407]=18;
  p_output1[408]=18;
  p_output1[409]=18;
  p_output1[410]=18;
  p_output1[411]=18;
  p_output1[412]=18;
  p_output1[413]=18;
  p_output1[414]=18;
  p_output1[415]=18;
  p_output1[416]=18;
  p_output1[417]=18;
  p_output1[418]=18;
  p_output1[419]=19;
  p_output1[420]=19;
  p_output1[421]=19;
  p_output1[422]=19;
  p_output1[423]=19;
  p_output1[424]=19;
  p_output1[425]=19;
  p_output1[426]=19;
  p_output1[427]=19;
  p_output1[428]=19;
  p_output1[429]=19;
  p_output1[430]=19;
  p_output1[431]=19;
  p_output1[432]=19;
  p_output1[433]=19;
  p_output1[434]=19;
  p_output1[435]=19;
  p_output1[436]=20;
  p_output1[437]=20;
  p_output1[438]=20;
  p_output1[439]=20;
  p_output1[440]=20;
  p_output1[441]=20;
  p_output1[442]=20;
  p_output1[443]=20;
  p_output1[444]=20;
  p_output1[445]=20;
  p_output1[446]=20;
  p_output1[447]=20;
  p_output1[448]=20;
  p_output1[449]=20;
  p_output1[450]=20;
  p_output1[451]=20;
  p_output1[452]=20;
  p_output1[453]=21;
  p_output1[454]=21;
  p_output1[455]=21;
  p_output1[456]=21;
  p_output1[457]=21;
  p_output1[458]=21;
  p_output1[459]=21;
  p_output1[460]=21;
  p_output1[461]=21;
  p_output1[462]=21;
  p_output1[463]=21;
  p_output1[464]=21;
  p_output1[465]=21;
  p_output1[466]=21;
  p_output1[467]=21;
  p_output1[468]=21;
  p_output1[469]=21;
  p_output1[470]=22;
  p_output1[471]=22;
  p_output1[472]=22;
  p_output1[473]=22;
  p_output1[474]=22;
  p_output1[475]=22;
  p_output1[476]=22;
  p_output1[477]=22;
  p_output1[478]=22;
  p_output1[479]=22;
  p_output1[480]=22;
  p_output1[481]=22;
  p_output1[482]=22;
  p_output1[483]=22;
  p_output1[484]=22;
  p_output1[485]=22;
  p_output1[486]=22;
  p_output1[487]=5;
  p_output1[488]=6;
  p_output1[489]=7;
  p_output1[490]=8;
  p_output1[491]=9;
  p_output1[492]=10;
  p_output1[493]=11;
  p_output1[494]=12;
  p_output1[495]=13;
  p_output1[496]=14;
  p_output1[497]=15;
  p_output1[498]=16;
  p_output1[499]=17;
  p_output1[500]=18;
  p_output1[501]=19;
  p_output1[502]=20;
  p_output1[503]=21;
  p_output1[504]=22;
  p_output1[505]=27;
  p_output1[506]=28;
  p_output1[507]=29;
  p_output1[508]=30;
  p_output1[509]=31;
  p_output1[510]=32;
  p_output1[511]=33;
  p_output1[512]=34;
  p_output1[513]=35;
  p_output1[514]=36;
  p_output1[515]=37;
  p_output1[516]=38;
  p_output1[517]=39;
  p_output1[518]=40;
  p_output1[519]=41;
  p_output1[520]=42;
  p_output1[521]=43;
  p_output1[522]=44;
  p_output1[523]=4;
  p_output1[524]=5;
  p_output1[525]=6;
  p_output1[526]=7;
  p_output1[527]=8;
  p_output1[528]=9;
  p_output1[529]=10;
  p_output1[530]=11;
  p_output1[531]=12;
  p_output1[532]=13;
  p_output1[533]=14;
  p_output1[534]=15;
  p_output1[535]=16;
  p_output1[536]=17;
  p_output1[537]=18;
  p_output1[538]=19;
  p_output1[539]=20;
  p_output1[540]=21;
  p_output1[541]=22;
  p_output1[542]=26;
  p_output1[543]=27;
  p_output1[544]=28;
  p_output1[545]=29;
  p_output1[546]=30;
  p_output1[547]=31;
  p_output1[548]=32;
  p_output1[549]=33;
  p_output1[550]=34;
  p_output1[551]=35;
  p_output1[552]=36;
  p_output1[553]=37;
  p_output1[554]=38;
  p_output1[555]=39;
  p_output1[556]=40;
  p_output1[557]=41;
  p_output1[558]=42;
  p_output1[559]=43;
  p_output1[560]=44;
  p_output1[561]=4;
  p_output1[562]=5;
  p_output1[563]=6;
  p_output1[564]=7;
  p_output1[565]=8;
  p_output1[566]=9;
  p_output1[567]=10;
  p_output1[568]=11;
  p_output1[569]=12;
  p_output1[570]=13;
  p_output1[571]=14;
  p_output1[572]=15;
  p_output1[573]=16;
  p_output1[574]=17;
  p_output1[575]=18;
  p_output1[576]=19;
  p_output1[577]=20;
  p_output1[578]=21;
  p_output1[579]=22;
  p_output1[580]=26;
  p_output1[581]=27;
  p_output1[582]=28;
  p_output1[583]=29;
  p_output1[584]=30;
  p_output1[585]=31;
  p_output1[586]=32;
  p_output1[587]=33;
  p_output1[588]=34;
  p_output1[589]=35;
  p_output1[590]=36;
  p_output1[591]=37;
  p_output1[592]=38;
  p_output1[593]=39;
  p_output1[594]=40;
  p_output1[595]=41;
  p_output1[596]=42;
  p_output1[597]=43;
  p_output1[598]=44;
  p_output1[599]=5;
  p_output1[600]=6;
  p_output1[601]=7;
  p_output1[602]=8;
  p_output1[603]=9;
  p_output1[604]=10;
  p_output1[605]=11;
  p_output1[606]=12;
  p_output1[607]=13;
  p_output1[608]=14;
  p_output1[609]=15;
  p_output1[610]=16;
  p_output1[611]=17;
  p_output1[612]=18;
  p_output1[613]=19;
  p_output1[614]=20;
  p_output1[615]=21;
  p_output1[616]=22;
  p_output1[617]=27;
  p_output1[618]=28;
  p_output1[619]=29;
  p_output1[620]=30;
  p_output1[621]=31;
  p_output1[622]=32;
  p_output1[623]=33;
  p_output1[624]=34;
  p_output1[625]=35;
  p_output1[626]=36;
  p_output1[627]=37;
  p_output1[628]=38;
  p_output1[629]=39;
  p_output1[630]=40;
  p_output1[631]=41;
  p_output1[632]=42;
  p_output1[633]=43;
  p_output1[634]=44;
  p_output1[635]=6;
  p_output1[636]=7;
  p_output1[637]=8;
  p_output1[638]=9;
  p_output1[639]=10;
  p_output1[640]=11;
  p_output1[641]=12;
  p_output1[642]=13;
  p_output1[643]=14;
  p_output1[644]=15;
  p_output1[645]=16;
  p_output1[646]=17;
  p_output1[647]=18;
  p_output1[648]=19;
  p_output1[649]=20;
  p_output1[650]=21;
  p_output1[651]=22;
  p_output1[652]=28;
  p_output1[653]=29;
  p_output1[654]=30;
  p_output1[655]=31;
  p_output1[656]=32;
  p_output1[657]=33;
  p_output1[658]=34;
  p_output1[659]=35;
  p_output1[660]=36;
  p_output1[661]=37;
  p_output1[662]=38;
  p_output1[663]=39;
  p_output1[664]=40;
  p_output1[665]=41;
  p_output1[666]=42;
  p_output1[667]=43;
  p_output1[668]=44;
  p_output1[669]=7;
  p_output1[670]=8;
  p_output1[671]=9;
  p_output1[672]=10;
  p_output1[673]=11;
  p_output1[674]=12;
  p_output1[675]=13;
  p_output1[676]=14;
  p_output1[677]=15;
  p_output1[678]=16;
  p_output1[679]=17;
  p_output1[680]=18;
  p_output1[681]=19;
  p_output1[682]=20;
  p_output1[683]=21;
  p_output1[684]=22;
  p_output1[685]=28;
  p_output1[686]=29;
  p_output1[687]=30;
  p_output1[688]=31;
  p_output1[689]=32;
  p_output1[690]=33;
  p_output1[691]=34;
  p_output1[692]=35;
  p_output1[693]=36;
  p_output1[694]=37;
  p_output1[695]=38;
  p_output1[696]=39;
  p_output1[697]=40;
  p_output1[698]=41;
  p_output1[699]=42;
  p_output1[700]=43;
  p_output1[701]=44;
  p_output1[702]=7;
  p_output1[703]=8;
  p_output1[704]=9;
  p_output1[705]=10;
  p_output1[706]=11;
  p_output1[707]=12;
  p_output1[708]=13;
  p_output1[709]=14;
  p_output1[710]=28;
  p_output1[711]=29;
  p_output1[712]=30;
  p_output1[713]=31;
  p_output1[714]=32;
  p_output1[715]=33;
  p_output1[716]=34;
  p_output1[717]=35;
  p_output1[718]=36;
  p_output1[719]=7;
  p_output1[720]=8;
  p_output1[721]=9;
  p_output1[722]=10;
  p_output1[723]=11;
  p_output1[724]=12;
  p_output1[725]=13;
  p_output1[726]=14;
  p_output1[727]=28;
  p_output1[728]=29;
  p_output1[729]=30;
  p_output1[730]=31;
  p_output1[731]=32;
  p_output1[732]=33;
  p_output1[733]=34;
  p_output1[734]=35;
  p_output1[735]=36;
  p_output1[736]=7;
  p_output1[737]=8;
  p_output1[738]=9;
  p_output1[739]=10;
  p_output1[740]=11;
  p_output1[741]=12;
  p_output1[742]=13;
  p_output1[743]=14;
  p_output1[744]=28;
  p_output1[745]=29;
  p_output1[746]=30;
  p_output1[747]=31;
  p_output1[748]=32;
  p_output1[749]=33;
  p_output1[750]=34;
  p_output1[751]=35;
  p_output1[752]=36;
  p_output1[753]=7;
  p_output1[754]=8;
  p_output1[755]=9;
  p_output1[756]=10;
  p_output1[757]=11;
  p_output1[758]=12;
  p_output1[759]=13;
  p_output1[760]=14;
  p_output1[761]=28;
  p_output1[762]=29;
  p_output1[763]=30;
  p_output1[764]=31;
  p_output1[765]=32;
  p_output1[766]=33;
  p_output1[767]=34;
  p_output1[768]=35;
  p_output1[769]=36;
  p_output1[770]=7;
  p_output1[771]=8;
  p_output1[772]=9;
  p_output1[773]=10;
  p_output1[774]=11;
  p_output1[775]=12;
  p_output1[776]=13;
  p_output1[777]=14;
  p_output1[778]=28;
  p_output1[779]=29;
  p_output1[780]=30;
  p_output1[781]=31;
  p_output1[782]=32;
  p_output1[783]=33;
  p_output1[784]=34;
  p_output1[785]=35;
  p_output1[786]=36;
  p_output1[787]=7;
  p_output1[788]=8;
  p_output1[789]=9;
  p_output1[790]=10;
  p_output1[791]=11;
  p_output1[792]=12;
  p_output1[793]=13;
  p_output1[794]=14;
  p_output1[795]=28;
  p_output1[796]=29;
  p_output1[797]=30;
  p_output1[798]=31;
  p_output1[799]=32;
  p_output1[800]=33;
  p_output1[801]=34;
  p_output1[802]=35;
  p_output1[803]=36;
  p_output1[804]=7;
  p_output1[805]=8;
  p_output1[806]=9;
  p_output1[807]=10;
  p_output1[808]=11;
  p_output1[809]=12;
  p_output1[810]=13;
  p_output1[811]=14;
  p_output1[812]=28;
  p_output1[813]=29;
  p_output1[814]=30;
  p_output1[815]=31;
  p_output1[816]=32;
  p_output1[817]=33;
  p_output1[818]=34;
  p_output1[819]=35;
  p_output1[820]=36;
  p_output1[821]=7;
  p_output1[822]=8;
  p_output1[823]=9;
  p_output1[824]=10;
  p_output1[825]=11;
  p_output1[826]=12;
  p_output1[827]=13;
  p_output1[828]=14;
  p_output1[829]=28;
  p_output1[830]=29;
  p_output1[831]=30;
  p_output1[832]=31;
  p_output1[833]=32;
  p_output1[834]=33;
  p_output1[835]=34;
  p_output1[836]=35;
  p_output1[837]=36;
  p_output1[838]=15;
  p_output1[839]=16;
  p_output1[840]=17;
  p_output1[841]=18;
  p_output1[842]=19;
  p_output1[843]=20;
  p_output1[844]=21;
  p_output1[845]=22;
  p_output1[846]=28;
  p_output1[847]=37;
  p_output1[848]=38;
  p_output1[849]=39;
  p_output1[850]=40;
  p_output1[851]=41;
  p_output1[852]=42;
  p_output1[853]=43;
  p_output1[854]=44;
  p_output1[855]=15;
  p_output1[856]=16;
  p_output1[857]=17;
  p_output1[858]=18;
  p_output1[859]=19;
  p_output1[860]=20;
  p_output1[861]=21;
  p_output1[862]=22;
  p_output1[863]=28;
  p_output1[864]=37;
  p_output1[865]=38;
  p_output1[866]=39;
  p_output1[867]=40;
  p_output1[868]=41;
  p_output1[869]=42;
  p_output1[870]=43;
  p_output1[871]=44;
  p_output1[872]=15;
  p_output1[873]=16;
  p_output1[874]=17;
  p_output1[875]=18;
  p_output1[876]=19;
  p_output1[877]=20;
  p_output1[878]=21;
  p_output1[879]=22;
  p_output1[880]=28;
  p_output1[881]=37;
  p_output1[882]=38;
  p_output1[883]=39;
  p_output1[884]=40;
  p_output1[885]=41;
  p_output1[886]=42;
  p_output1[887]=43;
  p_output1[888]=44;
  p_output1[889]=15;
  p_output1[890]=16;
  p_output1[891]=17;
  p_output1[892]=18;
  p_output1[893]=19;
  p_output1[894]=20;
  p_output1[895]=21;
  p_output1[896]=22;
  p_output1[897]=28;
  p_output1[898]=37;
  p_output1[899]=38;
  p_output1[900]=39;
  p_output1[901]=40;
  p_output1[902]=41;
  p_output1[903]=42;
  p_output1[904]=43;
  p_output1[905]=44;
  p_output1[906]=15;
  p_output1[907]=16;
  p_output1[908]=17;
  p_output1[909]=18;
  p_output1[910]=19;
  p_output1[911]=20;
  p_output1[912]=21;
  p_output1[913]=22;
  p_output1[914]=28;
  p_output1[915]=37;
  p_output1[916]=38;
  p_output1[917]=39;
  p_output1[918]=40;
  p_output1[919]=41;
  p_output1[920]=42;
  p_output1[921]=43;
  p_output1[922]=44;
  p_output1[923]=15;
  p_output1[924]=16;
  p_output1[925]=17;
  p_output1[926]=18;
  p_output1[927]=19;
  p_output1[928]=20;
  p_output1[929]=21;
  p_output1[930]=22;
  p_output1[931]=28;
  p_output1[932]=37;
  p_output1[933]=38;
  p_output1[934]=39;
  p_output1[935]=40;
  p_output1[936]=41;
  p_output1[937]=42;
  p_output1[938]=43;
  p_output1[939]=44;
  p_output1[940]=15;
  p_output1[941]=16;
  p_output1[942]=17;
  p_output1[943]=18;
  p_output1[944]=19;
  p_output1[945]=20;
  p_output1[946]=21;
  p_output1[947]=22;
  p_output1[948]=28;
  p_output1[949]=37;
  p_output1[950]=38;
  p_output1[951]=39;
  p_output1[952]=40;
  p_output1[953]=41;
  p_output1[954]=42;
  p_output1[955]=43;
  p_output1[956]=44;
  p_output1[957]=15;
  p_output1[958]=16;
  p_output1[959]=17;
  p_output1[960]=18;
  p_output1[961]=19;
  p_output1[962]=20;
  p_output1[963]=21;
  p_output1[964]=22;
  p_output1[965]=28;
  p_output1[966]=37;
  p_output1[967]=38;
  p_output1[968]=39;
  p_output1[969]=40;
  p_output1[970]=41;
  p_output1[971]=42;
  p_output1[972]=43;
  p_output1[973]=44;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 1 && ncols == 1) && 
      !(mrows == 1 && ncols == 1))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 487, (mwSize) 2, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Js_Ce1_vec6_cassie.hh"

namespace Times[2, step, Pattern[Cassie, Blank[]]]
{

void Js_Ce1_vec6_cassie_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
