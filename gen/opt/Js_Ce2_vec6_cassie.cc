/*
 * Automatically Generated from Mathematica.
 * Mon 12 Jun 2017 19:59:12 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double _NotUsed;
  NULL;
  p_output1[0]=1;
  p_output1[1]=1;
  p_output1[2]=1;
  p_output1[3]=1;
  p_output1[4]=1;
  p_output1[5]=1;
  p_output1[6]=1;
  p_output1[7]=1;
  p_output1[8]=1;
  p_output1[9]=1;
  p_output1[10]=1;
  p_output1[11]=1;
  p_output1[12]=1;
  p_output1[13]=1;
  p_output1[14]=1;
  p_output1[15]=1;
  p_output1[16]=1;
  p_output1[17]=1;
  p_output1[18]=1;
  p_output1[19]=1;
  p_output1[20]=1;
  p_output1[21]=1;
  p_output1[22]=1;
  p_output1[23]=1;
  p_output1[24]=1;
  p_output1[25]=1;
  p_output1[26]=1;
  p_output1[27]=1;
  p_output1[28]=1;
  p_output1[29]=1;
  p_output1[30]=1;
  p_output1[31]=1;
  p_output1[32]=1;
  p_output1[33]=1;
  p_output1[34]=1;
  p_output1[35]=1;
  p_output1[36]=1;
  p_output1[37]=1;
  p_output1[38]=1;
  p_output1[39]=1;
  p_output1[40]=1;
  p_output1[41]=2;
  p_output1[42]=2;
  p_output1[43]=2;
  p_output1[44]=2;
  p_output1[45]=2;
  p_output1[46]=2;
  p_output1[47]=2;
  p_output1[48]=2;
  p_output1[49]=2;
  p_output1[50]=2;
  p_output1[51]=2;
  p_output1[52]=2;
  p_output1[53]=2;
  p_output1[54]=2;
  p_output1[55]=2;
  p_output1[56]=2;
  p_output1[57]=2;
  p_output1[58]=2;
  p_output1[59]=2;
  p_output1[60]=2;
  p_output1[61]=2;
  p_output1[62]=2;
  p_output1[63]=2;
  p_output1[64]=2;
  p_output1[65]=2;
  p_output1[66]=2;
  p_output1[67]=2;
  p_output1[68]=2;
  p_output1[69]=2;
  p_output1[70]=2;
  p_output1[71]=2;
  p_output1[72]=2;
  p_output1[73]=2;
  p_output1[74]=2;
  p_output1[75]=2;
  p_output1[76]=2;
  p_output1[77]=2;
  p_output1[78]=2;
  p_output1[79]=2;
  p_output1[80]=2;
  p_output1[81]=2;
  p_output1[82]=3;
  p_output1[83]=3;
  p_output1[84]=3;
  p_output1[85]=3;
  p_output1[86]=3;
  p_output1[87]=3;
  p_output1[88]=3;
  p_output1[89]=3;
  p_output1[90]=3;
  p_output1[91]=3;
  p_output1[92]=3;
  p_output1[93]=3;
  p_output1[94]=3;
  p_output1[95]=3;
  p_output1[96]=3;
  p_output1[97]=3;
  p_output1[98]=3;
  p_output1[99]=3;
  p_output1[100]=3;
  p_output1[101]=3;
  p_output1[102]=3;
  p_output1[103]=3;
  p_output1[104]=3;
  p_output1[105]=3;
  p_output1[106]=3;
  p_output1[107]=3;
  p_output1[108]=3;
  p_output1[109]=3;
  p_output1[110]=3;
  p_output1[111]=3;
  p_output1[112]=3;
  p_output1[113]=3;
  p_output1[114]=3;
  p_output1[115]=3;
  p_output1[116]=3;
  p_output1[117]=3;
  p_output1[118]=3;
  p_output1[119]=3;
  p_output1[120]=3;
  p_output1[121]=3;
  p_output1[122]=3;
  p_output1[123]=4;
  p_output1[124]=4;
  p_output1[125]=4;
  p_output1[126]=4;
  p_output1[127]=4;
  p_output1[128]=4;
  p_output1[129]=4;
  p_output1[130]=4;
  p_output1[131]=4;
  p_output1[132]=4;
  p_output1[133]=4;
  p_output1[134]=4;
  p_output1[135]=4;
  p_output1[136]=4;
  p_output1[137]=4;
  p_output1[138]=4;
  p_output1[139]=4;
  p_output1[140]=4;
  p_output1[141]=4;
  p_output1[142]=4;
  p_output1[143]=4;
  p_output1[144]=4;
  p_output1[145]=4;
  p_output1[146]=4;
  p_output1[147]=4;
  p_output1[148]=4;
  p_output1[149]=4;
  p_output1[150]=4;
  p_output1[151]=4;
  p_output1[152]=4;
  p_output1[153]=4;
  p_output1[154]=4;
  p_output1[155]=4;
  p_output1[156]=4;
  p_output1[157]=4;
  p_output1[158]=4;
  p_output1[159]=4;
  p_output1[160]=4;
  p_output1[161]=4;
  p_output1[162]=4;
  p_output1[163]=4;
  p_output1[164]=5;
  p_output1[165]=5;
  p_output1[166]=5;
  p_output1[167]=5;
  p_output1[168]=5;
  p_output1[169]=5;
  p_output1[170]=5;
  p_output1[171]=5;
  p_output1[172]=5;
  p_output1[173]=5;
  p_output1[174]=5;
  p_output1[175]=5;
  p_output1[176]=5;
  p_output1[177]=5;
  p_output1[178]=5;
  p_output1[179]=5;
  p_output1[180]=5;
  p_output1[181]=5;
  p_output1[182]=5;
  p_output1[183]=5;
  p_output1[184]=5;
  p_output1[185]=5;
  p_output1[186]=5;
  p_output1[187]=5;
  p_output1[188]=5;
  p_output1[189]=5;
  p_output1[190]=5;
  p_output1[191]=5;
  p_output1[192]=5;
  p_output1[193]=5;
  p_output1[194]=5;
  p_output1[195]=5;
  p_output1[196]=5;
  p_output1[197]=5;
  p_output1[198]=5;
  p_output1[199]=5;
  p_output1[200]=5;
  p_output1[201]=5;
  p_output1[202]=5;
  p_output1[203]=5;
  p_output1[204]=5;
  p_output1[205]=6;
  p_output1[206]=6;
  p_output1[207]=6;
  p_output1[208]=6;
  p_output1[209]=6;
  p_output1[210]=6;
  p_output1[211]=6;
  p_output1[212]=6;
  p_output1[213]=6;
  p_output1[214]=6;
  p_output1[215]=6;
  p_output1[216]=6;
  p_output1[217]=6;
  p_output1[218]=6;
  p_output1[219]=6;
  p_output1[220]=6;
  p_output1[221]=6;
  p_output1[222]=6;
  p_output1[223]=6;
  p_output1[224]=6;
  p_output1[225]=6;
  p_output1[226]=6;
  p_output1[227]=6;
  p_output1[228]=6;
  p_output1[229]=6;
  p_output1[230]=7;
  p_output1[231]=7;
  p_output1[232]=7;
  p_output1[233]=7;
  p_output1[234]=7;
  p_output1[235]=7;
  p_output1[236]=7;
  p_output1[237]=7;
  p_output1[238]=7;
  p_output1[239]=7;
  p_output1[240]=7;
  p_output1[241]=7;
  p_output1[242]=7;
  p_output1[243]=7;
  p_output1[244]=7;
  p_output1[245]=7;
  p_output1[246]=7;
  p_output1[247]=8;
  p_output1[248]=8;
  p_output1[249]=8;
  p_output1[250]=8;
  p_output1[251]=8;
  p_output1[252]=8;
  p_output1[253]=8;
  p_output1[254]=8;
  p_output1[255]=8;
  p_output1[256]=8;
  p_output1[257]=8;
  p_output1[258]=8;
  p_output1[259]=8;
  p_output1[260]=8;
  p_output1[261]=8;
  p_output1[262]=8;
  p_output1[263]=8;
  p_output1[264]=9;
  p_output1[265]=9;
  p_output1[266]=9;
  p_output1[267]=9;
  p_output1[268]=9;
  p_output1[269]=9;
  p_output1[270]=9;
  p_output1[271]=9;
  p_output1[272]=9;
  p_output1[273]=9;
  p_output1[274]=9;
  p_output1[275]=9;
  p_output1[276]=9;
  p_output1[277]=9;
  p_output1[278]=9;
  p_output1[279]=9;
  p_output1[280]=9;
  p_output1[281]=10;
  p_output1[282]=10;
  p_output1[283]=10;
  p_output1[284]=10;
  p_output1[285]=10;
  p_output1[286]=10;
  p_output1[287]=10;
  p_output1[288]=10;
  p_output1[289]=10;
  p_output1[290]=10;
  p_output1[291]=10;
  p_output1[292]=10;
  p_output1[293]=10;
  p_output1[294]=10;
  p_output1[295]=10;
  p_output1[296]=10;
  p_output1[297]=10;
  p_output1[298]=11;
  p_output1[299]=11;
  p_output1[300]=11;
  p_output1[301]=11;
  p_output1[302]=11;
  p_output1[303]=11;
  p_output1[304]=11;
  p_output1[305]=11;
  p_output1[306]=11;
  p_output1[307]=11;
  p_output1[308]=11;
  p_output1[309]=11;
  p_output1[310]=11;
  p_output1[311]=11;
  p_output1[312]=11;
  p_output1[313]=11;
  p_output1[314]=11;
  p_output1[315]=12;
  p_output1[316]=12;
  p_output1[317]=12;
  p_output1[318]=12;
  p_output1[319]=12;
  p_output1[320]=12;
  p_output1[321]=12;
  p_output1[322]=12;
  p_output1[323]=12;
  p_output1[324]=12;
  p_output1[325]=12;
  p_output1[326]=12;
  p_output1[327]=12;
  p_output1[328]=12;
  p_output1[329]=12;
  p_output1[330]=12;
  p_output1[331]=12;
  p_output1[332]=13;
  p_output1[333]=13;
  p_output1[334]=13;
  p_output1[335]=13;
  p_output1[336]=13;
  p_output1[337]=13;
  p_output1[338]=13;
  p_output1[339]=13;
  p_output1[340]=13;
  p_output1[341]=13;
  p_output1[342]=13;
  p_output1[343]=13;
  p_output1[344]=13;
  p_output1[345]=13;
  p_output1[346]=13;
  p_output1[347]=13;
  p_output1[348]=13;
  p_output1[349]=14;
  p_output1[350]=14;
  p_output1[351]=14;
  p_output1[352]=14;
  p_output1[353]=14;
  p_output1[354]=14;
  p_output1[355]=14;
  p_output1[356]=14;
  p_output1[357]=14;
  p_output1[358]=14;
  p_output1[359]=14;
  p_output1[360]=14;
  p_output1[361]=14;
  p_output1[362]=14;
  p_output1[363]=14;
  p_output1[364]=14;
  p_output1[365]=14;
  p_output1[366]=15;
  p_output1[367]=15;
  p_output1[368]=15;
  p_output1[369]=15;
  p_output1[370]=15;
  p_output1[371]=15;
  p_output1[372]=15;
  p_output1[373]=15;
  p_output1[374]=15;
  p_output1[375]=15;
  p_output1[376]=15;
  p_output1[377]=15;
  p_output1[378]=15;
  p_output1[379]=15;
  p_output1[380]=15;
  p_output1[381]=15;
  p_output1[382]=15;
  p_output1[383]=16;
  p_output1[384]=16;
  p_output1[385]=16;
  p_output1[386]=16;
  p_output1[387]=16;
  p_output1[388]=16;
  p_output1[389]=16;
  p_output1[390]=16;
  p_output1[391]=16;
  p_output1[392]=16;
  p_output1[393]=16;
  p_output1[394]=16;
  p_output1[395]=16;
  p_output1[396]=16;
  p_output1[397]=16;
  p_output1[398]=16;
  p_output1[399]=16;
  p_output1[400]=17;
  p_output1[401]=17;
  p_output1[402]=17;
  p_output1[403]=17;
  p_output1[404]=17;
  p_output1[405]=17;
  p_output1[406]=17;
  p_output1[407]=17;
  p_output1[408]=17;
  p_output1[409]=17;
  p_output1[410]=17;
  p_output1[411]=17;
  p_output1[412]=17;
  p_output1[413]=17;
  p_output1[414]=17;
  p_output1[415]=17;
  p_output1[416]=17;
  p_output1[417]=18;
  p_output1[418]=18;
  p_output1[419]=18;
  p_output1[420]=18;
  p_output1[421]=18;
  p_output1[422]=18;
  p_output1[423]=18;
  p_output1[424]=18;
  p_output1[425]=18;
  p_output1[426]=18;
  p_output1[427]=18;
  p_output1[428]=18;
  p_output1[429]=18;
  p_output1[430]=18;
  p_output1[431]=18;
  p_output1[432]=18;
  p_output1[433]=18;
  p_output1[434]=19;
  p_output1[435]=19;
  p_output1[436]=19;
  p_output1[437]=19;
  p_output1[438]=19;
  p_output1[439]=19;
  p_output1[440]=19;
  p_output1[441]=19;
  p_output1[442]=19;
  p_output1[443]=19;
  p_output1[444]=19;
  p_output1[445]=19;
  p_output1[446]=19;
  p_output1[447]=19;
  p_output1[448]=19;
  p_output1[449]=19;
  p_output1[450]=19;
  p_output1[451]=20;
  p_output1[452]=20;
  p_output1[453]=20;
  p_output1[454]=20;
  p_output1[455]=20;
  p_output1[456]=20;
  p_output1[457]=20;
  p_output1[458]=20;
  p_output1[459]=20;
  p_output1[460]=20;
  p_output1[461]=20;
  p_output1[462]=20;
  p_output1[463]=20;
  p_output1[464]=20;
  p_output1[465]=20;
  p_output1[466]=20;
  p_output1[467]=20;
  p_output1[468]=21;
  p_output1[469]=21;
  p_output1[470]=21;
  p_output1[471]=21;
  p_output1[472]=21;
  p_output1[473]=21;
  p_output1[474]=21;
  p_output1[475]=21;
  p_output1[476]=21;
  p_output1[477]=21;
  p_output1[478]=21;
  p_output1[479]=21;
  p_output1[480]=21;
  p_output1[481]=21;
  p_output1[482]=21;
  p_output1[483]=21;
  p_output1[484]=21;
  p_output1[485]=22;
  p_output1[486]=22;
  p_output1[487]=22;
  p_output1[488]=22;
  p_output1[489]=22;
  p_output1[490]=22;
  p_output1[491]=22;
  p_output1[492]=22;
  p_output1[493]=22;
  p_output1[494]=22;
  p_output1[495]=22;
  p_output1[496]=22;
  p_output1[497]=22;
  p_output1[498]=22;
  p_output1[499]=22;
  p_output1[500]=22;
  p_output1[501]=22;
  p_output1[502]=4;
  p_output1[503]=5;
  p_output1[504]=6;
  p_output1[505]=7;
  p_output1[506]=8;
  p_output1[507]=9;
  p_output1[508]=10;
  p_output1[509]=11;
  p_output1[510]=12;
  p_output1[511]=13;
  p_output1[512]=14;
  p_output1[513]=15;
  p_output1[514]=16;
  p_output1[515]=17;
  p_output1[516]=18;
  p_output1[517]=19;
  p_output1[518]=20;
  p_output1[519]=21;
  p_output1[520]=22;
  p_output1[521]=23;
  p_output1[522]=24;
  p_output1[523]=25;
  p_output1[524]=26;
  p_output1[525]=27;
  p_output1[526]=28;
  p_output1[527]=29;
  p_output1[528]=30;
  p_output1[529]=31;
  p_output1[530]=32;
  p_output1[531]=33;
  p_output1[532]=34;
  p_output1[533]=35;
  p_output1[534]=36;
  p_output1[535]=37;
  p_output1[536]=38;
  p_output1[537]=39;
  p_output1[538]=40;
  p_output1[539]=41;
  p_output1[540]=42;
  p_output1[541]=43;
  p_output1[542]=44;
  p_output1[543]=4;
  p_output1[544]=5;
  p_output1[545]=6;
  p_output1[546]=7;
  p_output1[547]=8;
  p_output1[548]=9;
  p_output1[549]=10;
  p_output1[550]=11;
  p_output1[551]=12;
  p_output1[552]=13;
  p_output1[553]=14;
  p_output1[554]=15;
  p_output1[555]=16;
  p_output1[556]=17;
  p_output1[557]=18;
  p_output1[558]=19;
  p_output1[559]=20;
  p_output1[560]=21;
  p_output1[561]=22;
  p_output1[562]=23;
  p_output1[563]=24;
  p_output1[564]=25;
  p_output1[565]=26;
  p_output1[566]=27;
  p_output1[567]=28;
  p_output1[568]=29;
  p_output1[569]=30;
  p_output1[570]=31;
  p_output1[571]=32;
  p_output1[572]=33;
  p_output1[573]=34;
  p_output1[574]=35;
  p_output1[575]=36;
  p_output1[576]=37;
  p_output1[577]=38;
  p_output1[578]=39;
  p_output1[579]=40;
  p_output1[580]=41;
  p_output1[581]=42;
  p_output1[582]=43;
  p_output1[583]=44;
  p_output1[584]=4;
  p_output1[585]=5;
  p_output1[586]=6;
  p_output1[587]=7;
  p_output1[588]=8;
  p_output1[589]=9;
  p_output1[590]=10;
  p_output1[591]=11;
  p_output1[592]=12;
  p_output1[593]=13;
  p_output1[594]=14;
  p_output1[595]=15;
  p_output1[596]=16;
  p_output1[597]=17;
  p_output1[598]=18;
  p_output1[599]=19;
  p_output1[600]=20;
  p_output1[601]=21;
  p_output1[602]=22;
  p_output1[603]=23;
  p_output1[604]=24;
  p_output1[605]=25;
  p_output1[606]=26;
  p_output1[607]=27;
  p_output1[608]=28;
  p_output1[609]=29;
  p_output1[610]=30;
  p_output1[611]=31;
  p_output1[612]=32;
  p_output1[613]=33;
  p_output1[614]=34;
  p_output1[615]=35;
  p_output1[616]=36;
  p_output1[617]=37;
  p_output1[618]=38;
  p_output1[619]=39;
  p_output1[620]=40;
  p_output1[621]=41;
  p_output1[622]=42;
  p_output1[623]=43;
  p_output1[624]=44;
  p_output1[625]=4;
  p_output1[626]=5;
  p_output1[627]=6;
  p_output1[628]=7;
  p_output1[629]=8;
  p_output1[630]=9;
  p_output1[631]=10;
  p_output1[632]=11;
  p_output1[633]=12;
  p_output1[634]=13;
  p_output1[635]=14;
  p_output1[636]=15;
  p_output1[637]=16;
  p_output1[638]=17;
  p_output1[639]=18;
  p_output1[640]=19;
  p_output1[641]=20;
  p_output1[642]=21;
  p_output1[643]=22;
  p_output1[644]=23;
  p_output1[645]=24;
  p_output1[646]=25;
  p_output1[647]=26;
  p_output1[648]=27;
  p_output1[649]=28;
  p_output1[650]=29;
  p_output1[651]=30;
  p_output1[652]=31;
  p_output1[653]=32;
  p_output1[654]=33;
  p_output1[655]=34;
  p_output1[656]=35;
  p_output1[657]=36;
  p_output1[658]=37;
  p_output1[659]=38;
  p_output1[660]=39;
  p_output1[661]=40;
  p_output1[662]=41;
  p_output1[663]=42;
  p_output1[664]=43;
  p_output1[665]=44;
  p_output1[666]=4;
  p_output1[667]=5;
  p_output1[668]=6;
  p_output1[669]=7;
  p_output1[670]=8;
  p_output1[671]=9;
  p_output1[672]=10;
  p_output1[673]=11;
  p_output1[674]=12;
  p_output1[675]=13;
  p_output1[676]=14;
  p_output1[677]=15;
  p_output1[678]=16;
  p_output1[679]=17;
  p_output1[680]=18;
  p_output1[681]=19;
  p_output1[682]=20;
  p_output1[683]=21;
  p_output1[684]=22;
  p_output1[685]=23;
  p_output1[686]=24;
  p_output1[687]=25;
  p_output1[688]=26;
  p_output1[689]=27;
  p_output1[690]=28;
  p_output1[691]=29;
  p_output1[692]=30;
  p_output1[693]=31;
  p_output1[694]=32;
  p_output1[695]=33;
  p_output1[696]=34;
  p_output1[697]=35;
  p_output1[698]=36;
  p_output1[699]=37;
  p_output1[700]=38;
  p_output1[701]=39;
  p_output1[702]=40;
  p_output1[703]=41;
  p_output1[704]=42;
  p_output1[705]=43;
  p_output1[706]=44;
  p_output1[707]=4;
  p_output1[708]=5;
  p_output1[709]=6;
  p_output1[710]=7;
  p_output1[711]=8;
  p_output1[712]=9;
  p_output1[713]=10;
  p_output1[714]=11;
  p_output1[715]=12;
  p_output1[716]=13;
  p_output1[717]=14;
  p_output1[718]=15;
  p_output1[719]=16;
  p_output1[720]=17;
  p_output1[721]=18;
  p_output1[722]=19;
  p_output1[723]=20;
  p_output1[724]=21;
  p_output1[725]=22;
  p_output1[726]=23;
  p_output1[727]=24;
  p_output1[728]=25;
  p_output1[729]=26;
  p_output1[730]=27;
  p_output1[731]=28;
  p_output1[732]=4;
  p_output1[733]=5;
  p_output1[734]=6;
  p_output1[735]=7;
  p_output1[736]=8;
  p_output1[737]=9;
  p_output1[738]=10;
  p_output1[739]=11;
  p_output1[740]=12;
  p_output1[741]=13;
  p_output1[742]=14;
  p_output1[743]=23;
  p_output1[744]=24;
  p_output1[745]=25;
  p_output1[746]=26;
  p_output1[747]=27;
  p_output1[748]=28;
  p_output1[749]=4;
  p_output1[750]=5;
  p_output1[751]=6;
  p_output1[752]=7;
  p_output1[753]=8;
  p_output1[754]=9;
  p_output1[755]=10;
  p_output1[756]=11;
  p_output1[757]=12;
  p_output1[758]=13;
  p_output1[759]=14;
  p_output1[760]=23;
  p_output1[761]=24;
  p_output1[762]=25;
  p_output1[763]=26;
  p_output1[764]=27;
  p_output1[765]=28;
  p_output1[766]=4;
  p_output1[767]=5;
  p_output1[768]=6;
  p_output1[769]=7;
  p_output1[770]=8;
  p_output1[771]=9;
  p_output1[772]=10;
  p_output1[773]=11;
  p_output1[774]=12;
  p_output1[775]=13;
  p_output1[776]=14;
  p_output1[777]=23;
  p_output1[778]=24;
  p_output1[779]=25;
  p_output1[780]=26;
  p_output1[781]=27;
  p_output1[782]=28;
  p_output1[783]=4;
  p_output1[784]=5;
  p_output1[785]=6;
  p_output1[786]=7;
  p_output1[787]=8;
  p_output1[788]=9;
  p_output1[789]=10;
  p_output1[790]=11;
  p_output1[791]=12;
  p_output1[792]=13;
  p_output1[793]=14;
  p_output1[794]=23;
  p_output1[795]=24;
  p_output1[796]=25;
  p_output1[797]=26;
  p_output1[798]=27;
  p_output1[799]=28;
  p_output1[800]=4;
  p_output1[801]=5;
  p_output1[802]=6;
  p_output1[803]=7;
  p_output1[804]=8;
  p_output1[805]=9;
  p_output1[806]=10;
  p_output1[807]=11;
  p_output1[808]=12;
  p_output1[809]=13;
  p_output1[810]=14;
  p_output1[811]=23;
  p_output1[812]=24;
  p_output1[813]=25;
  p_output1[814]=26;
  p_output1[815]=27;
  p_output1[816]=28;
  p_output1[817]=4;
  p_output1[818]=5;
  p_output1[819]=6;
  p_output1[820]=7;
  p_output1[821]=8;
  p_output1[822]=9;
  p_output1[823]=10;
  p_output1[824]=11;
  p_output1[825]=12;
  p_output1[826]=13;
  p_output1[827]=14;
  p_output1[828]=23;
  p_output1[829]=24;
  p_output1[830]=25;
  p_output1[831]=26;
  p_output1[832]=27;
  p_output1[833]=28;
  p_output1[834]=4;
  p_output1[835]=5;
  p_output1[836]=6;
  p_output1[837]=7;
  p_output1[838]=8;
  p_output1[839]=9;
  p_output1[840]=10;
  p_output1[841]=11;
  p_output1[842]=12;
  p_output1[843]=13;
  p_output1[844]=14;
  p_output1[845]=23;
  p_output1[846]=24;
  p_output1[847]=25;
  p_output1[848]=26;
  p_output1[849]=27;
  p_output1[850]=28;
  p_output1[851]=4;
  p_output1[852]=5;
  p_output1[853]=6;
  p_output1[854]=7;
  p_output1[855]=8;
  p_output1[856]=9;
  p_output1[857]=10;
  p_output1[858]=11;
  p_output1[859]=12;
  p_output1[860]=13;
  p_output1[861]=14;
  p_output1[862]=23;
  p_output1[863]=24;
  p_output1[864]=25;
  p_output1[865]=26;
  p_output1[866]=27;
  p_output1[867]=28;
  p_output1[868]=4;
  p_output1[869]=5;
  p_output1[870]=6;
  p_output1[871]=15;
  p_output1[872]=16;
  p_output1[873]=17;
  p_output1[874]=18;
  p_output1[875]=19;
  p_output1[876]=20;
  p_output1[877]=21;
  p_output1[878]=22;
  p_output1[879]=23;
  p_output1[880]=24;
  p_output1[881]=25;
  p_output1[882]=26;
  p_output1[883]=27;
  p_output1[884]=28;
  p_output1[885]=4;
  p_output1[886]=5;
  p_output1[887]=6;
  p_output1[888]=15;
  p_output1[889]=16;
  p_output1[890]=17;
  p_output1[891]=18;
  p_output1[892]=19;
  p_output1[893]=20;
  p_output1[894]=21;
  p_output1[895]=22;
  p_output1[896]=23;
  p_output1[897]=24;
  p_output1[898]=25;
  p_output1[899]=26;
  p_output1[900]=27;
  p_output1[901]=28;
  p_output1[902]=4;
  p_output1[903]=5;
  p_output1[904]=6;
  p_output1[905]=15;
  p_output1[906]=16;
  p_output1[907]=17;
  p_output1[908]=18;
  p_output1[909]=19;
  p_output1[910]=20;
  p_output1[911]=21;
  p_output1[912]=22;
  p_output1[913]=23;
  p_output1[914]=24;
  p_output1[915]=25;
  p_output1[916]=26;
  p_output1[917]=27;
  p_output1[918]=28;
  p_output1[919]=4;
  p_output1[920]=5;
  p_output1[921]=6;
  p_output1[922]=15;
  p_output1[923]=16;
  p_output1[924]=17;
  p_output1[925]=18;
  p_output1[926]=19;
  p_output1[927]=20;
  p_output1[928]=21;
  p_output1[929]=22;
  p_output1[930]=23;
  p_output1[931]=24;
  p_output1[932]=25;
  p_output1[933]=26;
  p_output1[934]=27;
  p_output1[935]=28;
  p_output1[936]=4;
  p_output1[937]=5;
  p_output1[938]=6;
  p_output1[939]=15;
  p_output1[940]=16;
  p_output1[941]=17;
  p_output1[942]=18;
  p_output1[943]=19;
  p_output1[944]=20;
  p_output1[945]=21;
  p_output1[946]=22;
  p_output1[947]=23;
  p_output1[948]=24;
  p_output1[949]=25;
  p_output1[950]=26;
  p_output1[951]=27;
  p_output1[952]=28;
  p_output1[953]=4;
  p_output1[954]=5;
  p_output1[955]=6;
  p_output1[956]=15;
  p_output1[957]=16;
  p_output1[958]=17;
  p_output1[959]=18;
  p_output1[960]=19;
  p_output1[961]=20;
  p_output1[962]=21;
  p_output1[963]=22;
  p_output1[964]=23;
  p_output1[965]=24;
  p_output1[966]=25;
  p_output1[967]=26;
  p_output1[968]=27;
  p_output1[969]=28;
  p_output1[970]=4;
  p_output1[971]=5;
  p_output1[972]=6;
  p_output1[973]=15;
  p_output1[974]=16;
  p_output1[975]=17;
  p_output1[976]=18;
  p_output1[977]=19;
  p_output1[978]=20;
  p_output1[979]=21;
  p_output1[980]=22;
  p_output1[981]=23;
  p_output1[982]=24;
  p_output1[983]=25;
  p_output1[984]=26;
  p_output1[985]=27;
  p_output1[986]=28;
  p_output1[987]=4;
  p_output1[988]=5;
  p_output1[989]=6;
  p_output1[990]=15;
  p_output1[991]=16;
  p_output1[992]=17;
  p_output1[993]=18;
  p_output1[994]=19;
  p_output1[995]=20;
  p_output1[996]=21;
  p_output1[997]=22;
  p_output1[998]=23;
  p_output1[999]=24;
  p_output1[1000]=25;
  p_output1[1001]=26;
  p_output1[1002]=27;
  p_output1[1003]=28;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 1 && ncols == 1) && 
      !(mrows == 1 && ncols == 1))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 502, (mwSize) 2, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Js_Ce2_vec6_cassie.hh"

namespace Times[2, step, Pattern[Cassie, Blank[]]]
{

void Js_Ce2_vec6_cassie_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
