/*
 * Automatically Generated from Mathematica.
 * Fri 16 Jun 2017 12:29:07 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t2852;
  double t2570;
  double t2694;
  double t2888;
  double t2930;
  double t2971;
  double t2967;
  double t2968;
  double t2969;
  double t2948;
  double t2972;
  double t2973;
  double t2974;
  double t2776;
  double t2801;
  double t2827;
  double t2845;
  double t2743;
  double t3019;
  double t3023;
  double t3027;
  double t2976;
  double t2978;
  double t2983;
  double t2991;
  double t3003;
  double t3004;
  double t3005;
  double t3048;
  double t3049;
  double t3050;
  double t3052;
  double t3053;
  double t3054;
  double t3062;
  double t3074;
  double t3078;
  double t3079;
  double t3090;
  double t3094;
  double t3098;
  double t3106;
  double t3122;
  double t3128;
  double t3129;
  double t3130;
  double t3136;
  double t3137;
  double t3138;
  double t3140;
  double t3141;
  double t3142;
  double t3144;
  double t3147;
  double t3148;
  double t3149;
  double t3154;
  double t3155;
  double t3156;
  double t3158;
  double t3159;
  double t3160;
  double t3162;
  double t3165;
  double t3166;
  double t3167;
  double t3172;
  double t3173;
  double t3174;
  double t2901;
  double t2922;
  double t2959;
  double t2966;
  double t3007;
  double t3011;
  double t3015;
  double t2987;
  double t2995;
  double t2999;
  double t2844;
  double t2848;
  double t2849;
  double t3045;
  double t3046;
  double t3047;
  double t3188;
  double t3189;
  double t3190;
  double t3058;
  double t3066;
  double t3070;
  double t3192;
  double t3193;
  double t3194;
  double t3197;
  double t3198;
  double t3199;
  double t3081;
  double t3082;
  double t3086;
  double t3110;
  double t3114;
  double t3118;
  double t3126;
  double t3127;
  double t3205;
  double t3206;
  double t3207;
  double t3209;
  double t3210;
  double t3211;
  double t3132;
  double t3133;
  double t3134;
  double t3135;
  double t3143;
  double t3145;
  double t3146;
  double t3213;
  double t3214;
  double t3215;
  double t3217;
  double t3218;
  double t3219;
  double t3151;
  double t3152;
  double t3153;
  double t3161;
  double t3163;
  double t3164;
  double t3221;
  double t3222;
  double t3223;
  double t3225;
  double t3226;
  double t3227;
  double t3169;
  double t3170;
  double t3171;
  double t3229;
  double t3230;
  double t3231;
  double t3233;
  double t3234;
  double t3235;
  double t3248;
  double t3249;
  double t3250;
  double t3252;
  double t3253;
  double t3254;
  double t3256;
  double t3257;
  double t3258;
  double t3262;
  double t3263;
  double t3264;
  double t3266;
  double t3267;
  double t3268;
  double t3270;
  double t3271;
  double t3272;
  double t3274;
  double t3275;
  double t3276;
  double t3278;
  double t3279;
  double t3280;
  double t3282;
  double t3283;
  double t3284;
  double t3286;
  double t3287;
  double t3288;
  double t3290;
  double t3291;
  double t3292;
  double t3294;
  double t3295;
  double t3296;
  double t3307;
  double t3308;
  double t3309;
  double t3312;
  double t3313;
  double t3317;
  double t3318;
  double t3320;
  double t3321;
  double t3322;
  double t3324;
  double t3325;
  double t3326;
  double t3328;
  double t3329;
  double t3330;
  double t3332;
  double t3333;
  double t3334;
  double t3336;
  double t3337;
  double t3338;
  double t3340;
  double t3341;
  double t3342;
  double t3344;
  double t3345;
  double t3346;
  double t3348;
  double t3349;
  double t3350;
  double t3367;
  double t3368;
  double t3369;
  double t3371;
  double t3372;
  double t3373;
  double t3381;
  double t3382;
  double t3383;
  double t3385;
  double t3386;
  double t3387;
  double t3389;
  double t3390;
  double t3391;
  double t3393;
  double t3394;
  double t3395;
  double t3397;
  double t3398;
  double t3399;
  double t3401;
  double t3402;
  double t3403;
  double t3377;
  double t3378;
  double t3379;
  double t3421;
  double t3422;
  double t3423;
  double t3425;
  double t3426;
  double t3427;
  double t3429;
  double t3430;
  double t3431;
  double t3433;
  double t3434;
  double t3435;
  double t3437;
  double t3438;
  double t3439;
  double t3441;
  double t3442;
  double t3443;
  double t3445;
  double t3446;
  double t3447;
  double t3449;
  double t3450;
  double t3451;
  double t3465;
  double t3466;
  double t3467;
  double t3472;
  double t3473;
  double t3475;
  double t3476;
  double t3478;
  double t3479;
  double t3480;
  double t3482;
  double t3483;
  double t3484;
  double t3486;
  double t3487;
  double t3488;
  double t3490;
  double t3491;
  double t3492;
  double t3509;
  double t3510;
  double t3511;
  double t3513;
  double t3514;
  double t3516;
  double t3517;
  double t3519;
  double t3520;
  double t3521;
  double t3523;
  double t3524;
  double t3525;
  double t3539;
  double t3540;
  double t3541;
  double t3546;
  double t3547;
  double t3549;
  double t3550;
  double t3552;
  double t3567;
  double t3568;
  double t3569;
  double t3556;
  double t3578;
  double t3581;
  double t3585;
  double t3586;
  double t3587;
  double t3589;
  double t3590;
  double t3591;
  double t3593;
  double t3594;
  double t3595;
  double t3580;
  double t3582;
  double t3583;
  double t3601;
  double t3602;
  double t3603;
  double t3597;
  double t3598;
  double t3599;
  double t3609;
  double t3610;
  double t3611;
  double t3613;
  double t3614;
  double t3615;
  double t3617;
  double t3618;
  double t3619;
  double t3621;
  double t3622;
  double t3623;
  double t3625;
  double t3626;
  double t3627;
  double t3629;
  double t3630;
  double t3631;
  double t3633;
  double t3634;
  double t3635;
  double t3637;
  double t3638;
  double t3639;
  double t3641;
  double t3642;
  double t3643;
  double t3657;
  double t3658;
  double t3659;
  double t3661;
  double t3662;
  double t3663;
  double t3669;
  double t3670;
  double t3671;
  double t3665;
  double t3666;
  double t3667;
  double t3677;
  double t3678;
  double t3679;
  double t3681;
  double t3682;
  double t3683;
  double t3685;
  double t3686;
  double t3687;
  double t3689;
  double t3690;
  double t3691;
  double t3693;
  double t3694;
  double t3695;
  double t3697;
  double t3698;
  double t3699;
  double t3701;
  double t3702;
  double t3703;
  double t3705;
  double t3706;
  double t3707;
  double t3709;
  double t3710;
  double t3711;
  double t3722;
  double t3723;
  double t3724;
  double t3728;
  double t3729;
  double t3730;
  double t3736;
  double t3737;
  double t3738;
  double t3732;
  double t3733;
  double t3734;
  double t3744;
  double t3745;
  double t3746;
  double t3748;
  double t3749;
  double t3750;
  double t3752;
  double t3753;
  double t3754;
  double t3756;
  double t3757;
  double t3758;
  double t3760;
  double t3761;
  double t3762;
  double t3764;
  double t3765;
  double t3766;
  double t3768;
  double t3769;
  double t3770;
  double t3772;
  double t3773;
  double t3774;
  double t3776;
  double t3777;
  double t3778;
  double t3791;
  double t3792;
  double t3793;
  double t3795;
  double t3796;
  double t3797;
  double t3799;
  double t3800;
  double t3801;
  double t3805;
  double t3806;
  double t3807;
  double t3809;
  double t3810;
  double t3811;
  double t3813;
  double t3814;
  double t3815;
  double t3817;
  double t3818;
  double t3819;
  double t3821;
  double t3822;
  double t3823;
  double t3825;
  double t3826;
  double t3827;
  double t3829;
  double t3830;
  double t3831;
  double t3833;
  double t3834;
  double t3835;
  double t3837;
  double t3838;
  double t3839;
  double t3850;
  double t3851;
  double t3852;
  double t3855;
  double t3856;
  double t3860;
  double t3861;
  double t3863;
  double t3864;
  double t3865;
  double t3867;
  double t3868;
  double t3869;
  double t3871;
  double t3872;
  double t3873;
  double t3875;
  double t3876;
  double t3877;
  double t3879;
  double t3880;
  double t3881;
  double t3883;
  double t3884;
  double t3885;
  double t3887;
  double t3888;
  double t3889;
  double t3891;
  double t3892;
  double t3893;
  double t3361;
  double t3362;
  double t3364;
  double t3365;
  double t3366;
  double t3904;
  double t3905;
  double t3906;
  double t3908;
  double t3909;
  double t3910;
  double t3912;
  double t3913;
  double t3914;
  double t3922;
  double t3923;
  double t3924;
  double t3926;
  double t3927;
  double t3928;
  double t3930;
  double t3931;
  double t3932;
  double t3934;
  double t3935;
  double t3936;
  double t3938;
  double t3939;
  double t3940;
  double t3942;
  double t3943;
  double t3944;
  double t3414;
  double t3415;
  double t3417;
  double t3418;
  double t3419;
  double t3918;
  double t3919;
  double t3920;
  double t3957;
  double t3958;
  double t3959;
  double t3961;
  double t3962;
  double t3963;
  double t3965;
  double t3966;
  double t3967;
  double t3969;
  double t3970;
  double t3971;
  double t3973;
  double t3974;
  double t3975;
  double t3977;
  double t3978;
  double t3979;
  double t3981;
  double t3982;
  double t3983;
  double t3985;
  double t3986;
  double t3987;
  double t3462;
  double t3463;
  double t3464;
  double t3469;
  double t3470;
  double t3998;
  double t3999;
  double t4000;
  double t4003;
  double t4004;
  double t4006;
  double t4007;
  double t4009;
  double t4010;
  double t4011;
  double t4013;
  double t4014;
  double t4015;
  double t4017;
  double t4018;
  double t4019;
  double t4021;
  double t4022;
  double t4023;
  double t3503;
  double t3504;
  double t3506;
  double t3507;
  double t3508;
  double t4035;
  double t4036;
  double t4037;
  double t4039;
  double t4040;
  double t4042;
  double t4043;
  double t4045;
  double t4046;
  double t4047;
  double t4049;
  double t4050;
  double t4051;
  double t3536;
  double t3537;
  double t3538;
  double t3543;
  double t3544;
  double t4062;
  double t4063;
  double t4064;
  double t4067;
  double t4068;
  double t4070;
  double t4071;
  double t3561;
  double t3562;
  double t3564;
  double t3565;
  double t3566;
  double t4073;
  double t4083;
  double t4084;
  double t4085;
  double t4077;
  double t4090;
  double t4091;
  double t4123;
  double t4124;
  double t4125;
  double t4127;
  double t4128;
  double t4129;
  double t4135;
  double t4136;
  double t4137;
  double t4131;
  double t4132;
  double t4133;
  double t4143;
  double t4144;
  double t4145;
  double t4147;
  double t4148;
  double t4149;
  double t4151;
  double t4152;
  double t4153;
  double t4155;
  double t4156;
  double t4157;
  double t4159;
  double t4160;
  double t4161;
  double t4163;
  double t4164;
  double t4165;
  double t4167;
  double t4168;
  double t4169;
  double t4171;
  double t4172;
  double t4173;
  double t4175;
  double t4176;
  double t4177;
  double t4191;
  double t4192;
  double t4193;
  double t4199;
  double t4200;
  double t4201;
  double t4195;
  double t4196;
  double t4197;
  double t4207;
  double t4208;
  double t4209;
  double t4211;
  double t4212;
  double t4213;
  double t4215;
  double t4216;
  double t4217;
  double t4219;
  double t4220;
  double t4221;
  double t4223;
  double t4224;
  double t4225;
  double t4227;
  double t4228;
  double t4229;
  double t4231;
  double t4232;
  double t4233;
  double t4235;
  double t4236;
  double t4237;
  double t4239;
  double t4240;
  double t4241;
  double t4254;
  double t4255;
  double t4257;
  double t4258;
  double t4259;
  double t4261;
  double t4262;
  double t4263;
  double t4267;
  double t4268;
  double t4269;
  double t4271;
  double t4272;
  double t4273;
  double t4275;
  double t4276;
  double t4277;
  double t4279;
  double t4280;
  double t4281;
  double t4283;
  double t4284;
  double t4285;
  double t4287;
  double t4288;
  double t4289;
  double t4291;
  double t4292;
  double t4293;
  double t4295;
  double t4296;
  double t4297;
  double t4299;
  double t4300;
  double t4301;
  double t4312;
  double t4313;
  double t4314;
  double t4317;
  double t4318;
  double t4322;
  double t4323;
  double t4325;
  double t4326;
  double t4327;
  double t4329;
  double t4330;
  double t4331;
  double t4333;
  double t4334;
  double t4335;
  double t4337;
  double t4338;
  double t4339;
  double t4341;
  double t4342;
  double t4343;
  double t4345;
  double t4346;
  double t4347;
  double t4349;
  double t4350;
  double t4351;
  double t4353;
  double t4354;
  double t4355;
  double t4366;
  double t4367;
  double t4368;
  double t4370;
  double t4371;
  double t4372;
  double t4374;
  double t4375;
  double t4376;
  double t4384;
  double t4385;
  double t4386;
  double t4388;
  double t4389;
  double t4390;
  double t4392;
  double t4393;
  double t4394;
  double t4396;
  double t4397;
  double t4398;
  double t4400;
  double t4401;
  double t4402;
  double t4404;
  double t4405;
  double t4406;
  double t4380;
  double t4381;
  double t4382;
  double t4419;
  double t4420;
  double t4421;
  double t4423;
  double t4424;
  double t4425;
  double t4427;
  double t4428;
  double t4429;
  double t4431;
  double t4432;
  double t4433;
  double t4435;
  double t4436;
  double t4437;
  double t4439;
  double t4440;
  double t4441;
  double t4443;
  double t4444;
  double t4445;
  double t4447;
  double t4448;
  double t4449;
  double t4460;
  double t4461;
  double t4462;
  double t4465;
  double t4466;
  double t4468;
  double t4469;
  double t4471;
  double t4472;
  double t4473;
  double t4475;
  double t4476;
  double t4477;
  double t4479;
  double t4480;
  double t4481;
  double t4483;
  double t4484;
  double t4485;
  double t4497;
  double t4498;
  double t4499;
  double t4501;
  double t4502;
  double t4504;
  double t4505;
  double t4507;
  double t4508;
  double t4509;
  double t4511;
  double t4512;
  double t4513;
  double t4524;
  double t4525;
  double t4526;
  double t4529;
  double t4530;
  double t4532;
  double t4533;
  double t4535;
  double t4545;
  double t4546;
  double t4547;
  double t4539;
  double t4552;
  double t4553;
  double t4114;
  double t4115;
  double t4116;
  double t4556;
  double t4557;
  double t4558;
  double t4565;
  double t4566;
  double t4567;
  double t4568;
  double t4569;
  double t4570;
  double t4571;
  double t4572;
  double t4573;
  double t4574;
  double t4179;
  double t4180;
  double t4181;
  double t4183;
  double t4184;
  double t4185;
  double t4559;
  double t4560;
  double t4561;
  double t4243;
  double t4244;
  double t4245;
  double t4247;
  double t4248;
  double t4249;
  double t4303;
  double t4304;
  double t4305;
  double t4307;
  double t4308;
  double t4309;
  double t4357;
  double t4358;
  double t4359;
  double t4361;
  double t4362;
  double t4363;
  double t4408;
  double t4409;
  double t4410;
  double t4412;
  double t4413;
  double t4414;
  double t4451;
  double t4452;
  double t4453;
  double t4455;
  double t4456;
  double t4457;
  double t4487;
  double t4488;
  double t4489;
  double t4491;
  double t4492;
  double t4493;
  double t4515;
  double t4516;
  double t4517;
  double t4519;
  double t4520;
  double t4521;
  double t4536;
  double t4537;
  double t4540;
  double t4541;
  double t4549;
  double t4550;
  double t4672;
  double t4673;
  double t4674;
  double t4675;
  double t4101;
  double t4102;
  double t4103;
  t2852 = Sin(var1[4]);
  t2570 = Cos(var1[4]);
  t2694 = Sin(var1[14]);
  t2888 = Cos(var1[14]);
  t2930 = Sin(var1[5]);
  t2971 = Sin(var1[15]);
  t2967 = t2570*t2694;
  t2968 = t2888*t2852*t2930;
  t2969 = t2967 + t2968;
  t2948 = Cos(var1[15]);
  t2972 = t2888*t2570;
  t2973 = -1.*t2694*t2852*t2930;
  t2974 = t2972 + t2973;
  t2776 = Cos(var1[16]);
  t2801 = -1.*t2776;
  t2827 = 1. + t2801;
  t2845 = Sin(var1[16]);
  t2743 = Cos(var1[5]);
  t3019 = t2948*t2969;
  t3023 = t2971*t2974;
  t3027 = t3019 + t3023;
  t2976 = Cos(var1[17]);
  t2978 = -1.*t2976;
  t2983 = 1. + t2978;
  t2991 = Sin(var1[17]);
  t3003 = -1.*t2971*t2969;
  t3004 = t2948*t2974;
  t3005 = t3003 + t3004;
  t3048 = -1.*t2776*t2743*t2852;
  t3049 = -1.*t2845*t3027;
  t3050 = t3048 + t3049;
  t3052 = Cos(var1[18]);
  t3053 = -1.*t3052;
  t3054 = 1. + t3053;
  t3062 = Sin(var1[18]);
  t3074 = t2991*t3005;
  t3078 = t2976*t3050;
  t3079 = t3074 + t3078;
  t3090 = t2976*t3005;
  t3094 = -1.*t2991*t3050;
  t3098 = t3090 + t3094;
  t3106 = Cos(var1[19]);
  t3122 = Sin(var1[19]);
  t3128 = -1.*t3062*t3079;
  t3129 = t3052*t3098;
  t3130 = t3128 + t3129;
  t3136 = t3052*t3079;
  t3137 = t3062*t3098;
  t3138 = t3136 + t3137;
  t3140 = Cos(var1[20]);
  t3141 = -1.*t3140;
  t3142 = 1. + t3141;
  t3144 = Sin(var1[20]);
  t3147 = t3122*t3130;
  t3148 = t3106*t3138;
  t3149 = t3147 + t3148;
  t3154 = t3106*t3130;
  t3155 = -1.*t3122*t3138;
  t3156 = t3154 + t3155;
  t3158 = Cos(var1[21]);
  t3159 = -1.*t3158;
  t3160 = 1. + t3159;
  t3162 = Sin(var1[21]);
  t3165 = -1.*t3144*t3149;
  t3166 = t3140*t3156;
  t3167 = t3165 + t3166;
  t3172 = t3140*t3149;
  t3173 = t3144*t3156;
  t3174 = t3172 + t3173;
  t2901 = -1.*t2888;
  t2922 = 1. + t2901;
  t2959 = -1.*t2948;
  t2966 = 1. + t2959;
  t3007 = -0.135*t2827;
  t3011 = -0.049*t2845;
  t3015 = t3007 + t3011;
  t2987 = -0.09*t2983;
  t2995 = 0.049*t2991;
  t2999 = t2987 + t2995;
  t2844 = -0.049*t2827;
  t2848 = 0.135*t2845;
  t2849 = t2844 + t2848;
  t3045 = -0.049*t2983;
  t3046 = -0.09*t2991;
  t3047 = t3045 + t3046;
  t3188 = -1.*t2888*t2948*t2570*t2743;
  t3189 = t2570*t2743*t2694*t2971;
  t3190 = t3188 + t3189;
  t3058 = -0.049*t3054;
  t3066 = -0.21*t3062;
  t3070 = t3058 + t3066;
  t3192 = t2948*t2570*t2743*t2694;
  t3193 = t2888*t2570*t2743*t2971;
  t3194 = t3192 + t3193;
  t3197 = -1.*t3190*t2845;
  t3198 = -1.*t2776*t2570*t2930;
  t3199 = t3197 + t3198;
  t3081 = -0.21*t3054;
  t3082 = 0.049*t3062;
  t3086 = t3081 + t3082;
  t3110 = -1.*t3106;
  t3114 = 1. + t3110;
  t3118 = -0.2707*t3114;
  t3126 = 0.0016*t3122;
  t3127 = t3118 + t3126;
  t3205 = t3194*t2991;
  t3206 = t2976*t3199;
  t3207 = t3205 + t3206;
  t3209 = t2976*t3194;
  t3210 = -1.*t2991*t3199;
  t3211 = t3209 + t3210;
  t3132 = -1. + t3106;
  t3133 = 0.0016*t3132;
  t3134 = -0.2707*t3122;
  t3135 = t3133 + t3134;
  t3143 = 0.0184*t3142;
  t3145 = -0.7055*t3144;
  t3146 = t3143 + t3145;
  t3213 = -1.*t3062*t3207;
  t3214 = t3052*t3211;
  t3215 = t3213 + t3214;
  t3217 = t3052*t3207;
  t3218 = t3062*t3211;
  t3219 = t3217 + t3218;
  t3151 = -0.7055*t3142;
  t3152 = -0.0184*t3144;
  t3153 = t3151 + t3152;
  t3161 = -1.1135*t3160;
  t3163 = 0.0216*t3162;
  t3164 = t3161 + t3163;
  t3221 = t3122*t3215;
  t3222 = t3106*t3219;
  t3223 = t3221 + t3222;
  t3225 = t3106*t3215;
  t3226 = -1.*t3122*t3219;
  t3227 = t3225 + t3226;
  t3169 = -0.0216*t3160;
  t3170 = -1.1135*t3162;
  t3171 = t3169 + t3170;
  t3229 = -1.*t3144*t3223;
  t3230 = t3140*t3227;
  t3231 = t3229 + t3230;
  t3233 = t3140*t3223;
  t3234 = t3144*t3227;
  t3235 = t3233 + t3234;
  t3248 = -1.*t2694*t2852;
  t3249 = t2888*t2570*t2930;
  t3250 = t3248 + t3249;
  t3252 = t2888*t2852;
  t3253 = t2570*t2694*t2930;
  t3254 = t3252 + t3253;
  t3256 = t2971*t3250;
  t3257 = t2948*t3254;
  t3258 = t3256 + t3257;
  t3262 = t2948*t3250;
  t3263 = -1.*t2971*t3254;
  t3264 = t3262 + t3263;
  t3266 = t2845*t2991*t3258;
  t3267 = t2976*t3264;
  t3268 = t3266 + t3267;
  t3270 = -1.*t2976*t2845*t3258;
  t3271 = t2991*t3264;
  t3272 = t3270 + t3271;
  t3274 = t3062*t3268;
  t3275 = t3052*t3272;
  t3276 = t3274 + t3275;
  t3278 = t3052*t3268;
  t3279 = -1.*t3062*t3272;
  t3280 = t3278 + t3279;
  t3282 = -1.*t3122*t3276;
  t3283 = t3106*t3280;
  t3284 = t3282 + t3283;
  t3286 = t3106*t3276;
  t3287 = t3122*t3280;
  t3288 = t3286 + t3287;
  t3290 = t3144*t3284;
  t3291 = t3140*t3288;
  t3292 = t3290 + t3291;
  t3294 = t3140*t3284;
  t3295 = -1.*t3144*t3288;
  t3296 = t3294 + t3295;
  t3307 = t2694*t2852;
  t3308 = -1.*t2888*t2570*t2930;
  t3309 = t3307 + t3308;
  t3312 = -1.*t2971*t3309;
  t3313 = t3312 + t3257;
  t3317 = -1.*t2948*t3309;
  t3318 = t3317 + t3263;
  t3320 = t2845*t2991*t3313;
  t3321 = t2976*t3318;
  t3322 = t3320 + t3321;
  t3324 = -1.*t2976*t2845*t3313;
  t3325 = t2991*t3318;
  t3326 = t3324 + t3325;
  t3328 = t3062*t3322;
  t3329 = t3052*t3326;
  t3330 = t3328 + t3329;
  t3332 = t3052*t3322;
  t3333 = -1.*t3062*t3326;
  t3334 = t3332 + t3333;
  t3336 = -1.*t3122*t3330;
  t3337 = t3106*t3334;
  t3338 = t3336 + t3337;
  t3340 = t3106*t3330;
  t3341 = t3122*t3334;
  t3342 = t3340 + t3341;
  t3344 = t3144*t3338;
  t3345 = t3140*t3342;
  t3346 = t3344 + t3345;
  t3348 = t3140*t3338;
  t3349 = -1.*t3144*t3342;
  t3350 = t3348 + t3349;
  t3367 = t2948*t3309;
  t3368 = t2971*t3254;
  t3369 = t3367 + t3368;
  t3371 = -1.*t2570*t2743*t2845;
  t3372 = -1.*t2776*t3369;
  t3373 = t3371 + t3372;
  t3381 = -1.*t3052*t2991*t3373;
  t3382 = -1.*t2976*t3062*t3373;
  t3383 = t3381 + t3382;
  t3385 = t2976*t3052*t3373;
  t3386 = -1.*t2991*t3062*t3373;
  t3387 = t3385 + t3386;
  t3389 = t3122*t3383;
  t3390 = t3106*t3387;
  t3391 = t3389 + t3390;
  t3393 = t3106*t3383;
  t3394 = -1.*t3122*t3387;
  t3395 = t3393 + t3394;
  t3397 = -1.*t3144*t3391;
  t3398 = t3140*t3395;
  t3399 = t3397 + t3398;
  t3401 = t3140*t3391;
  t3402 = t3144*t3395;
  t3403 = t3401 + t3402;
  t3377 = t2776*t2570*t2743;
  t3378 = -1.*t2845*t3369;
  t3379 = t3377 + t3378;
  t3421 = -1.*t2991*t3313;
  t3422 = -1.*t2976*t3379;
  t3423 = t3421 + t3422;
  t3425 = t2976*t3313;
  t3426 = -1.*t2991*t3379;
  t3427 = t3425 + t3426;
  t3429 = t3062*t3423;
  t3430 = t3052*t3427;
  t3431 = t3429 + t3430;
  t3433 = t3052*t3423;
  t3434 = -1.*t3062*t3427;
  t3435 = t3433 + t3434;
  t3437 = -1.*t3122*t3431;
  t3438 = t3106*t3435;
  t3439 = t3437 + t3438;
  t3441 = t3106*t3431;
  t3442 = t3122*t3435;
  t3443 = t3441 + t3442;
  t3445 = t3144*t3439;
  t3446 = t3140*t3443;
  t3447 = t3445 + t3446;
  t3449 = t3140*t3439;
  t3450 = -1.*t3144*t3443;
  t3451 = t3449 + t3450;
  t3465 = t2991*t3313;
  t3466 = t2976*t3379;
  t3467 = t3465 + t3466;
  t3472 = -1.*t3062*t3467;
  t3473 = t3472 + t3430;
  t3475 = -1.*t3052*t3467;
  t3476 = t3475 + t3434;
  t3478 = -1.*t3122*t3473;
  t3479 = t3106*t3476;
  t3480 = t3478 + t3479;
  t3482 = t3106*t3473;
  t3483 = t3122*t3476;
  t3484 = t3482 + t3483;
  t3486 = t3144*t3480;
  t3487 = t3140*t3484;
  t3488 = t3486 + t3487;
  t3490 = t3140*t3480;
  t3491 = -1.*t3144*t3484;
  t3492 = t3490 + t3491;
  t3509 = t3052*t3467;
  t3510 = t3062*t3427;
  t3511 = t3509 + t3510;
  t3513 = -1.*t3106*t3511;
  t3514 = t3478 + t3513;
  t3516 = -1.*t3122*t3511;
  t3517 = t3482 + t3516;
  t3519 = t3144*t3514;
  t3520 = t3140*t3517;
  t3521 = t3519 + t3520;
  t3523 = t3140*t3514;
  t3524 = -1.*t3144*t3517;
  t3525 = t3523 + t3524;
  t3539 = t3122*t3473;
  t3540 = t3106*t3511;
  t3541 = t3539 + t3540;
  t3546 = -1.*t3144*t3541;
  t3547 = t3546 + t3520;
  t3549 = -1.*t3140*t3541;
  t3550 = t3549 + t3524;
  t3552 = -1.*t3162*t3547;
  t3567 = t3140*t3541;
  t3568 = t3144*t3517;
  t3569 = t3567 + t3568;
  t3556 = t3158*t3547;
  t3578 = Cos(var1[3]);
  t3581 = Sin(var1[3]);
  t3585 = -1.*t2743*t3581;
  t3586 = -1.*t3578*t2852*t2930;
  t3587 = t3585 + t3586;
  t3589 = -1.*t3578*t2570*t2694;
  t3590 = t2888*t3587;
  t3591 = t3589 + t3590;
  t3593 = -1.*t2888*t3578*t2570;
  t3594 = -1.*t2694*t3587;
  t3595 = t3593 + t3594;
  t3580 = t3578*t2743*t2852;
  t3582 = -1.*t3581*t2930;
  t3583 = t3580 + t3582;
  t3601 = t2948*t3591;
  t3602 = t2971*t3595;
  t3603 = t3601 + t3602;
  t3597 = -1.*t2971*t3591;
  t3598 = t2948*t3595;
  t3599 = t3597 + t3598;
  t3609 = t2776*t3583;
  t3610 = -1.*t2845*t3603;
  t3611 = t3609 + t3610;
  t3613 = t2991*t3599;
  t3614 = t2976*t3611;
  t3615 = t3613 + t3614;
  t3617 = t2976*t3599;
  t3618 = -1.*t2991*t3611;
  t3619 = t3617 + t3618;
  t3621 = -1.*t3062*t3615;
  t3622 = t3052*t3619;
  t3623 = t3621 + t3622;
  t3625 = t3052*t3615;
  t3626 = t3062*t3619;
  t3627 = t3625 + t3626;
  t3629 = t3122*t3623;
  t3630 = t3106*t3627;
  t3631 = t3629 + t3630;
  t3633 = t3106*t3623;
  t3634 = -1.*t3122*t3627;
  t3635 = t3633 + t3634;
  t3637 = -1.*t3144*t3631;
  t3638 = t3140*t3635;
  t3639 = t3637 + t3638;
  t3641 = t3140*t3631;
  t3642 = t3144*t3635;
  t3643 = t3641 + t3642;
  t3657 = t2694*t3581*t2852;
  t3658 = -1.*t2888*t2570*t3581*t2930;
  t3659 = t3657 + t3658;
  t3661 = t2888*t3581*t2852;
  t3662 = t2570*t2694*t3581*t2930;
  t3663 = t3661 + t3662;
  t3669 = t2948*t3659;
  t3670 = t2971*t3663;
  t3671 = t3669 + t3670;
  t3665 = -1.*t2971*t3659;
  t3666 = t2948*t3663;
  t3667 = t3665 + t3666;
  t3677 = t2776*t2570*t2743*t3581;
  t3678 = -1.*t2845*t3671;
  t3679 = t3677 + t3678;
  t3681 = t2991*t3667;
  t3682 = t2976*t3679;
  t3683 = t3681 + t3682;
  t3685 = t2976*t3667;
  t3686 = -1.*t2991*t3679;
  t3687 = t3685 + t3686;
  t3689 = -1.*t3062*t3683;
  t3690 = t3052*t3687;
  t3691 = t3689 + t3690;
  t3693 = t3052*t3683;
  t3694 = t3062*t3687;
  t3695 = t3693 + t3694;
  t3697 = t3122*t3691;
  t3698 = t3106*t3695;
  t3699 = t3697 + t3698;
  t3701 = t3106*t3691;
  t3702 = -1.*t3122*t3695;
  t3703 = t3701 + t3702;
  t3705 = -1.*t3144*t3699;
  t3706 = t3140*t3703;
  t3707 = t3705 + t3706;
  t3709 = t3140*t3699;
  t3710 = t3144*t3703;
  t3711 = t3709 + t3710;
  t3722 = -1.*t2743*t3581*t2852;
  t3723 = -1.*t3578*t2930;
  t3724 = t3722 + t3723;
  t3728 = t3578*t2743;
  t3729 = -1.*t3581*t2852*t2930;
  t3730 = t3728 + t3729;
  t3736 = t2888*t2948*t3724;
  t3737 = -1.*t2694*t2971*t3724;
  t3738 = t3736 + t3737;
  t3732 = -1.*t2948*t2694*t3724;
  t3733 = -1.*t2888*t2971*t3724;
  t3734 = t3732 + t3733;
  t3744 = t2776*t3730;
  t3745 = -1.*t2845*t3738;
  t3746 = t3744 + t3745;
  t3748 = t2991*t3734;
  t3749 = t2976*t3746;
  t3750 = t3748 + t3749;
  t3752 = t2976*t3734;
  t3753 = -1.*t2991*t3746;
  t3754 = t3752 + t3753;
  t3756 = -1.*t3062*t3750;
  t3757 = t3052*t3754;
  t3758 = t3756 + t3757;
  t3760 = t3052*t3750;
  t3761 = t3062*t3754;
  t3762 = t3760 + t3761;
  t3764 = t3122*t3758;
  t3765 = t3106*t3762;
  t3766 = t3764 + t3765;
  t3768 = t3106*t3758;
  t3769 = -1.*t3122*t3762;
  t3770 = t3768 + t3769;
  t3772 = -1.*t3144*t3766;
  t3773 = t3140*t3770;
  t3774 = t3772 + t3773;
  t3776 = t3140*t3766;
  t3777 = t3144*t3770;
  t3778 = t3776 + t3777;
  t3791 = t2570*t2694*t3581;
  t3792 = -1.*t2888*t3730;
  t3793 = t3791 + t3792;
  t3795 = -1.*t2888*t2570*t3581;
  t3796 = -1.*t2694*t3730;
  t3797 = t3795 + t3796;
  t3799 = t2971*t3793;
  t3800 = t2948*t3797;
  t3801 = t3799 + t3800;
  t3805 = t2948*t3793;
  t3806 = -1.*t2971*t3797;
  t3807 = t3805 + t3806;
  t3809 = t2845*t2991*t3801;
  t3810 = t2976*t3807;
  t3811 = t3809 + t3810;
  t3813 = -1.*t2976*t2845*t3801;
  t3814 = t2991*t3807;
  t3815 = t3813 + t3814;
  t3817 = t3062*t3811;
  t3818 = t3052*t3815;
  t3819 = t3817 + t3818;
  t3821 = t3052*t3811;
  t3822 = -1.*t3062*t3815;
  t3823 = t3821 + t3822;
  t3825 = -1.*t3122*t3819;
  t3826 = t3106*t3823;
  t3827 = t3825 + t3826;
  t3829 = t3106*t3819;
  t3830 = t3122*t3823;
  t3831 = t3829 + t3830;
  t3833 = t3144*t3827;
  t3834 = t3140*t3831;
  t3835 = t3833 + t3834;
  t3837 = t3140*t3827;
  t3838 = -1.*t3144*t3831;
  t3839 = t3837 + t3838;
  t3850 = -1.*t2570*t2694*t3581;
  t3851 = t2888*t3730;
  t3852 = t3850 + t3851;
  t3855 = -1.*t2971*t3852;
  t3856 = t3855 + t3800;
  t3860 = -1.*t2948*t3852;
  t3861 = t3860 + t3806;
  t3863 = t2845*t2991*t3856;
  t3864 = t2976*t3861;
  t3865 = t3863 + t3864;
  t3867 = -1.*t2976*t2845*t3856;
  t3868 = t2991*t3861;
  t3869 = t3867 + t3868;
  t3871 = t3062*t3865;
  t3872 = t3052*t3869;
  t3873 = t3871 + t3872;
  t3875 = t3052*t3865;
  t3876 = -1.*t3062*t3869;
  t3877 = t3875 + t3876;
  t3879 = -1.*t3122*t3873;
  t3880 = t3106*t3877;
  t3881 = t3879 + t3880;
  t3883 = t3106*t3873;
  t3884 = t3122*t3877;
  t3885 = t3883 + t3884;
  t3887 = t3144*t3881;
  t3888 = t3140*t3885;
  t3889 = t3887 + t3888;
  t3891 = t3140*t3881;
  t3892 = -1.*t3144*t3885;
  t3893 = t3891 + t3892;
  t3361 = 0.135*t2776;
  t3362 = t3361 + t3011;
  t3364 = -0.049*t2776;
  t3365 = -0.135*t2845;
  t3366 = t3364 + t3365;
  t3904 = t2743*t3581*t2852;
  t3905 = t3578*t2930;
  t3906 = t3904 + t3905;
  t3908 = t2948*t3852;
  t3909 = t2971*t3797;
  t3910 = t3908 + t3909;
  t3912 = -1.*t2845*t3906;
  t3913 = -1.*t2776*t3910;
  t3914 = t3912 + t3913;
  t3922 = -1.*t3052*t2991*t3914;
  t3923 = -1.*t2976*t3062*t3914;
  t3924 = t3922 + t3923;
  t3926 = t2976*t3052*t3914;
  t3927 = -1.*t2991*t3062*t3914;
  t3928 = t3926 + t3927;
  t3930 = t3122*t3924;
  t3931 = t3106*t3928;
  t3932 = t3930 + t3931;
  t3934 = t3106*t3924;
  t3935 = -1.*t3122*t3928;
  t3936 = t3934 + t3935;
  t3938 = -1.*t3144*t3932;
  t3939 = t3140*t3936;
  t3940 = t3938 + t3939;
  t3942 = t3140*t3932;
  t3943 = t3144*t3936;
  t3944 = t3942 + t3943;
  t3414 = 0.049*t2976;
  t3415 = t3414 + t3046;
  t3417 = -0.09*t2976;
  t3418 = -0.049*t2991;
  t3419 = t3417 + t3418;
  t3918 = t2776*t3906;
  t3919 = -1.*t2845*t3910;
  t3920 = t3918 + t3919;
  t3957 = -1.*t2991*t3856;
  t3958 = -1.*t2976*t3920;
  t3959 = t3957 + t3958;
  t3961 = t2976*t3856;
  t3962 = -1.*t2991*t3920;
  t3963 = t3961 + t3962;
  t3965 = t3062*t3959;
  t3966 = t3052*t3963;
  t3967 = t3965 + t3966;
  t3969 = t3052*t3959;
  t3970 = -1.*t3062*t3963;
  t3971 = t3969 + t3970;
  t3973 = -1.*t3122*t3967;
  t3974 = t3106*t3971;
  t3975 = t3973 + t3974;
  t3977 = t3106*t3967;
  t3978 = t3122*t3971;
  t3979 = t3977 + t3978;
  t3981 = t3144*t3975;
  t3982 = t3140*t3979;
  t3983 = t3981 + t3982;
  t3985 = t3140*t3975;
  t3986 = -1.*t3144*t3979;
  t3987 = t3985 + t3986;
  t3462 = -0.21*t3052;
  t3463 = -0.049*t3062;
  t3464 = t3462 + t3463;
  t3469 = 0.049*t3052;
  t3470 = t3469 + t3066;
  t3998 = t2991*t3856;
  t3999 = t2976*t3920;
  t4000 = t3998 + t3999;
  t4003 = -1.*t3062*t4000;
  t4004 = t4003 + t3966;
  t4006 = -1.*t3052*t4000;
  t4007 = t4006 + t3970;
  t4009 = -1.*t3122*t4004;
  t4010 = t3106*t4007;
  t4011 = t4009 + t4010;
  t4013 = t3106*t4004;
  t4014 = t3122*t4007;
  t4015 = t4013 + t4014;
  t4017 = t3144*t4011;
  t4018 = t3140*t4015;
  t4019 = t4017 + t4018;
  t4021 = t3140*t4011;
  t4022 = -1.*t3144*t4015;
  t4023 = t4021 + t4022;
  t3503 = 0.0016*t3106;
  t3504 = t3503 + t3134;
  t3506 = -0.2707*t3106;
  t3507 = -0.0016*t3122;
  t3508 = t3506 + t3507;
  t4035 = t3052*t4000;
  t4036 = t3062*t3963;
  t4037 = t4035 + t4036;
  t4039 = -1.*t3106*t4037;
  t4040 = t4009 + t4039;
  t4042 = -1.*t3122*t4037;
  t4043 = t4013 + t4042;
  t4045 = t3144*t4040;
  t4046 = t3140*t4043;
  t4047 = t4045 + t4046;
  t4049 = t3140*t4040;
  t4050 = -1.*t3144*t4043;
  t4051 = t4049 + t4050;
  t3536 = -0.7055*t3140;
  t3537 = 0.0184*t3144;
  t3538 = t3536 + t3537;
  t3543 = -0.0184*t3140;
  t3544 = t3543 + t3145;
  t4062 = t3122*t4004;
  t4063 = t3106*t4037;
  t4064 = t4062 + t4063;
  t4067 = -1.*t3144*t4064;
  t4068 = t4067 + t4046;
  t4070 = -1.*t3140*t4064;
  t4071 = t4070 + t4050;
  t3561 = 0.0216*t3158;
  t3562 = t3561 + t3170;
  t3564 = -1.1135*t3158;
  t3565 = -0.0216*t3162;
  t3566 = t3564 + t3565;
  t4073 = -1.*t3162*t4068;
  t4083 = t3140*t4064;
  t4084 = t3144*t4043;
  t4085 = t4083 + t4084;
  t4077 = t3158*t4068;
  t4090 = -1.*t3162*t4085;
  t4091 = t4077 + t4090;
  t4123 = -1.*t3578*t2694*t2852;
  t4124 = t2888*t3578*t2570*t2930;
  t4125 = t4123 + t4124;
  t4127 = -1.*t2888*t3578*t2852;
  t4128 = -1.*t3578*t2570*t2694*t2930;
  t4129 = t4127 + t4128;
  t4135 = t2948*t4125;
  t4136 = t2971*t4129;
  t4137 = t4135 + t4136;
  t4131 = -1.*t2971*t4125;
  t4132 = t2948*t4129;
  t4133 = t4131 + t4132;
  t4143 = -1.*t2776*t3578*t2570*t2743;
  t4144 = -1.*t2845*t4137;
  t4145 = t4143 + t4144;
  t4147 = t2991*t4133;
  t4148 = t2976*t4145;
  t4149 = t4147 + t4148;
  t4151 = t2976*t4133;
  t4152 = -1.*t2991*t4145;
  t4153 = t4151 + t4152;
  t4155 = -1.*t3062*t4149;
  t4156 = t3052*t4153;
  t4157 = t4155 + t4156;
  t4159 = t3052*t4149;
  t4160 = t3062*t4153;
  t4161 = t4159 + t4160;
  t4163 = t3122*t4157;
  t4164 = t3106*t4161;
  t4165 = t4163 + t4164;
  t4167 = t3106*t4157;
  t4168 = -1.*t3122*t4161;
  t4169 = t4167 + t4168;
  t4171 = -1.*t3144*t4165;
  t4172 = t3140*t4169;
  t4173 = t4171 + t4172;
  t4175 = t3140*t4165;
  t4176 = t3144*t4169;
  t4177 = t4175 + t4176;
  t4191 = t2743*t3581;
  t4192 = t3578*t2852*t2930;
  t4193 = t4191 + t4192;
  t4199 = t2888*t2948*t3583;
  t4200 = -1.*t2694*t2971*t3583;
  t4201 = t4199 + t4200;
  t4195 = -1.*t2948*t2694*t3583;
  t4196 = -1.*t2888*t2971*t3583;
  t4197 = t4195 + t4196;
  t4207 = t2776*t4193;
  t4208 = -1.*t2845*t4201;
  t4209 = t4207 + t4208;
  t4211 = t2991*t4197;
  t4212 = t2976*t4209;
  t4213 = t4211 + t4212;
  t4215 = t2976*t4197;
  t4216 = -1.*t2991*t4209;
  t4217 = t4215 + t4216;
  t4219 = -1.*t3062*t4213;
  t4220 = t3052*t4217;
  t4221 = t4219 + t4220;
  t4223 = t3052*t4213;
  t4224 = t3062*t4217;
  t4225 = t4223 + t4224;
  t4227 = t3122*t4221;
  t4228 = t3106*t4225;
  t4229 = t4227 + t4228;
  t4231 = t3106*t4221;
  t4232 = -1.*t3122*t4225;
  t4233 = t4231 + t4232;
  t4235 = -1.*t3144*t4229;
  t4236 = t3140*t4233;
  t4237 = t4235 + t4236;
  t4239 = t3140*t4229;
  t4240 = t3144*t4233;
  t4241 = t4239 + t4240;
  t4254 = -1.*t2888*t4193;
  t4255 = t3589 + t4254;
  t4257 = t2888*t3578*t2570;
  t4258 = -1.*t2694*t4193;
  t4259 = t4257 + t4258;
  t4261 = t2971*t4255;
  t4262 = t2948*t4259;
  t4263 = t4261 + t4262;
  t4267 = t2948*t4255;
  t4268 = -1.*t2971*t4259;
  t4269 = t4267 + t4268;
  t4271 = t2845*t2991*t4263;
  t4272 = t2976*t4269;
  t4273 = t4271 + t4272;
  t4275 = -1.*t2976*t2845*t4263;
  t4276 = t2991*t4269;
  t4277 = t4275 + t4276;
  t4279 = t3062*t4273;
  t4280 = t3052*t4277;
  t4281 = t4279 + t4280;
  t4283 = t3052*t4273;
  t4284 = -1.*t3062*t4277;
  t4285 = t4283 + t4284;
  t4287 = -1.*t3122*t4281;
  t4288 = t3106*t4285;
  t4289 = t4287 + t4288;
  t4291 = t3106*t4281;
  t4292 = t3122*t4285;
  t4293 = t4291 + t4292;
  t4295 = t3144*t4289;
  t4296 = t3140*t4293;
  t4297 = t4295 + t4296;
  t4299 = t3140*t4289;
  t4300 = -1.*t3144*t4293;
  t4301 = t4299 + t4300;
  t4312 = t3578*t2570*t2694;
  t4313 = t2888*t4193;
  t4314 = t4312 + t4313;
  t4317 = -1.*t2971*t4314;
  t4318 = t4317 + t4262;
  t4322 = -1.*t2948*t4314;
  t4323 = t4322 + t4268;
  t4325 = t2845*t2991*t4318;
  t4326 = t2976*t4323;
  t4327 = t4325 + t4326;
  t4329 = -1.*t2976*t2845*t4318;
  t4330 = t2991*t4323;
  t4331 = t4329 + t4330;
  t4333 = t3062*t4327;
  t4334 = t3052*t4331;
  t4335 = t4333 + t4334;
  t4337 = t3052*t4327;
  t4338 = -1.*t3062*t4331;
  t4339 = t4337 + t4338;
  t4341 = -1.*t3122*t4335;
  t4342 = t3106*t4339;
  t4343 = t4341 + t4342;
  t4345 = t3106*t4335;
  t4346 = t3122*t4339;
  t4347 = t4345 + t4346;
  t4349 = t3144*t4343;
  t4350 = t3140*t4347;
  t4351 = t4349 + t4350;
  t4353 = t3140*t4343;
  t4354 = -1.*t3144*t4347;
  t4355 = t4353 + t4354;
  t4366 = -1.*t3578*t2743*t2852;
  t4367 = t3581*t2930;
  t4368 = t4366 + t4367;
  t4370 = t2948*t4314;
  t4371 = t2971*t4259;
  t4372 = t4370 + t4371;
  t4374 = -1.*t2845*t4368;
  t4375 = -1.*t2776*t4372;
  t4376 = t4374 + t4375;
  t4384 = -1.*t3052*t2991*t4376;
  t4385 = -1.*t2976*t3062*t4376;
  t4386 = t4384 + t4385;
  t4388 = t2976*t3052*t4376;
  t4389 = -1.*t2991*t3062*t4376;
  t4390 = t4388 + t4389;
  t4392 = t3122*t4386;
  t4393 = t3106*t4390;
  t4394 = t4392 + t4393;
  t4396 = t3106*t4386;
  t4397 = -1.*t3122*t4390;
  t4398 = t4396 + t4397;
  t4400 = -1.*t3144*t4394;
  t4401 = t3140*t4398;
  t4402 = t4400 + t4401;
  t4404 = t3140*t4394;
  t4405 = t3144*t4398;
  t4406 = t4404 + t4405;
  t4380 = t2776*t4368;
  t4381 = -1.*t2845*t4372;
  t4382 = t4380 + t4381;
  t4419 = -1.*t2991*t4318;
  t4420 = -1.*t2976*t4382;
  t4421 = t4419 + t4420;
  t4423 = t2976*t4318;
  t4424 = -1.*t2991*t4382;
  t4425 = t4423 + t4424;
  t4427 = t3062*t4421;
  t4428 = t3052*t4425;
  t4429 = t4427 + t4428;
  t4431 = t3052*t4421;
  t4432 = -1.*t3062*t4425;
  t4433 = t4431 + t4432;
  t4435 = -1.*t3122*t4429;
  t4436 = t3106*t4433;
  t4437 = t4435 + t4436;
  t4439 = t3106*t4429;
  t4440 = t3122*t4433;
  t4441 = t4439 + t4440;
  t4443 = t3144*t4437;
  t4444 = t3140*t4441;
  t4445 = t4443 + t4444;
  t4447 = t3140*t4437;
  t4448 = -1.*t3144*t4441;
  t4449 = t4447 + t4448;
  t4460 = t2991*t4318;
  t4461 = t2976*t4382;
  t4462 = t4460 + t4461;
  t4465 = -1.*t3062*t4462;
  t4466 = t4465 + t4428;
  t4468 = -1.*t3052*t4462;
  t4469 = t4468 + t4432;
  t4471 = -1.*t3122*t4466;
  t4472 = t3106*t4469;
  t4473 = t4471 + t4472;
  t4475 = t3106*t4466;
  t4476 = t3122*t4469;
  t4477 = t4475 + t4476;
  t4479 = t3144*t4473;
  t4480 = t3140*t4477;
  t4481 = t4479 + t4480;
  t4483 = t3140*t4473;
  t4484 = -1.*t3144*t4477;
  t4485 = t4483 + t4484;
  t4497 = t3052*t4462;
  t4498 = t3062*t4425;
  t4499 = t4497 + t4498;
  t4501 = -1.*t3106*t4499;
  t4502 = t4471 + t4501;
  t4504 = -1.*t3122*t4499;
  t4505 = t4475 + t4504;
  t4507 = t3144*t4502;
  t4508 = t3140*t4505;
  t4509 = t4507 + t4508;
  t4511 = t3140*t4502;
  t4512 = -1.*t3144*t4505;
  t4513 = t4511 + t4512;
  t4524 = t3122*t4466;
  t4525 = t3106*t4499;
  t4526 = t4524 + t4525;
  t4529 = -1.*t3144*t4526;
  t4530 = t4529 + t4508;
  t4532 = -1.*t3140*t4526;
  t4533 = t4532 + t4512;
  t4535 = -1.*t3162*t4530;
  t4545 = t3140*t4526;
  t4546 = t3144*t4505;
  t4547 = t4545 + t4546;
  t4539 = t3158*t4530;
  t4552 = -1.*t3162*t4547;
  t4553 = t4539 + t4552;
  t4114 = t3162*t4068;
  t4115 = t3158*t4085;
  t4116 = t4114 + t4115;
  t4556 = t3162*t4530;
  t4557 = t3158*t4547;
  t4558 = t4556 + t4557;
  t4565 = -0.766044*t4558;
  t4566 = 0.642788*t4553;
  t4567 = t4565 + t4566;
  t4568 = Power(t4567,2);
  t4569 = 0.642788*t4558;
  t4570 = 0.766044*t4553;
  t4571 = t4569 + t4570;
  t4572 = Power(t4571,2);
  t4573 = t4568 + t4572;
  t4574 = 1/t4573;
  t4179 = t3162*t4173;
  t4180 = t3158*t4177;
  t4181 = t4179 + t4180;
  t4183 = t3158*t4173;
  t4184 = -1.*t3162*t4177;
  t4185 = t4183 + t4184;
  t4559 = -0.642788*t4558;
  t4560 = -0.766044*t4553;
  t4561 = t4559 + t4560;
  t4243 = t3162*t4237;
  t4244 = t3158*t4241;
  t4245 = t4243 + t4244;
  t4247 = t3158*t4237;
  t4248 = -1.*t3162*t4241;
  t4249 = t4247 + t4248;
  t4303 = -1.*t3162*t4297;
  t4304 = t3158*t4301;
  t4305 = t4303 + t4304;
  t4307 = t3158*t4297;
  t4308 = t3162*t4301;
  t4309 = t4307 + t4308;
  t4357 = -1.*t3162*t4351;
  t4358 = t3158*t4355;
  t4359 = t4357 + t4358;
  t4361 = t3158*t4351;
  t4362 = t3162*t4355;
  t4363 = t4361 + t4362;
  t4408 = t3162*t4402;
  t4409 = t3158*t4406;
  t4410 = t4408 + t4409;
  t4412 = t3158*t4402;
  t4413 = -1.*t3162*t4406;
  t4414 = t4412 + t4413;
  t4451 = -1.*t3162*t4445;
  t4452 = t3158*t4449;
  t4453 = t4451 + t4452;
  t4455 = t3158*t4445;
  t4456 = t3162*t4449;
  t4457 = t4455 + t4456;
  t4487 = -1.*t3162*t4481;
  t4488 = t3158*t4485;
  t4489 = t4487 + t4488;
  t4491 = t3158*t4481;
  t4492 = t3162*t4485;
  t4493 = t4491 + t4492;
  t4515 = -1.*t3162*t4509;
  t4516 = t3158*t4513;
  t4517 = t4515 + t4516;
  t4519 = t3158*t4509;
  t4520 = t3162*t4513;
  t4521 = t4519 + t4520;
  t4536 = t3158*t4533;
  t4537 = t4535 + t4536;
  t4540 = t3162*t4533;
  t4541 = t4539 + t4540;
  t4549 = -1.*t3158*t4547;
  t4550 = t4535 + t4549;
  t4672 = Power(t3373,2);
  t4673 = Power(t3914,2);
  t4674 = t4672 + t4673;
  t4675 = 1/t4674;
  t4101 = t2845*t3906;
  t4102 = t2776*t3910;
  t4103 = t4101 + t4102;
  p_output1[0]=1.;
  p_output1[1]=0.135*t2570*t2694 - 1.*t2743*t2849*t2852 - 0.135*t2852*t2922*t2930 - 0.135*t2966*t2969 + 0.135*t2971*t2974 + t2999*t3005 + t3015*t3027 - 0.1305*(-1.*t2743*t2845*t2852 + t2776*t3027) + t3047*t3050 + t3070*t3079 + t3086*t3098 + t3127*t3130 + t3135*t3138 + t3146*t3149 + t3153*t3156 + t3164*t3167 + t3171*t3174 + 0.0306*(t3162*t3167 + t3158*t3174) - 1.1312*(t3158*t3167 - 1.*t3162*t3174);
  p_output1[2]=0.135*t2570*t2743*t2922 - 1.*t2570*t2849*t2930 + 0.135*t2570*t2743*t2888*t2966 + 0.135*t2570*t2694*t2743*t2971 + t3015*t3190 - 0.1305*(-1.*t2570*t2845*t2930 + t2776*t3190) + t2999*t3194 + t3047*t3199 + t3070*t3207 + t3086*t3211 + t3127*t3215 + t3135*t3219 + t3146*t3223 + t3153*t3227 + t3164*t3231 + t3171*t3235 + 0.0306*(t3162*t3231 + t3158*t3235) - 1.1312*(t3158*t3231 - 1.*t3162*t3235);
  p_output1[3]=0.135*t2852*t2888 + 0.135*t2570*t2694*t2930 + 0.135*t2971*t3250 - 0.135*t2966*t3254 - 0.1305*t2776*t3258 + t3015*t3258 - 1.*t2845*t3047*t3258 + t2999*t3264 + t3086*t3268 + t3070*t3272 + t3135*t3276 + t3127*t3280 + t3153*t3284 + t3146*t3288 + t3171*t3292 + t3164*t3296 - 1.1312*(-1.*t3162*t3292 + t3158*t3296) + 0.0306*(t3158*t3292 + t3162*t3296);
  p_output1[4]=0.135*t2948*t3254 - 0.135*t2971*t3309 - 0.1305*t2776*t3313 + t3015*t3313 - 1.*t2845*t3047*t3313 + t2999*t3318 + t3086*t3322 + t3070*t3326 + t3135*t3330 + t3127*t3334 + t3153*t3338 + t3146*t3342 + t3171*t3346 + t3164*t3350 - 1.1312*(-1.*t3162*t3346 + t3158*t3350) + 0.0306*(t3158*t3346 + t3162*t3350);
  p_output1[5]=t2570*t2743*t3362 + t3366*t3369 + t3047*t3373 + t2976*t3070*t3373 - 1.*t2991*t3086*t3373 - 0.1305*t3379 + t3127*t3383 + t3135*t3387 + t3146*t3391 + t3153*t3395 + t3164*t3399 + t3171*t3403 + 0.0306*(t3162*t3399 + t3158*t3403) - 1.1312*(t3158*t3399 - 1.*t3162*t3403);
  p_output1[6]=t3313*t3415 + t3379*t3419 + t3086*t3423 + t3070*t3427 + t3135*t3431 + t3127*t3435 + t3153*t3439 + t3146*t3443 + t3171*t3447 + t3164*t3451 - 1.1312*(-1.*t3162*t3447 + t3158*t3451) + 0.0306*(t3158*t3447 + t3162*t3451);
  p_output1[7]=t3464*t3467 + t3427*t3470 + t3135*t3473 + t3127*t3476 + t3153*t3480 + t3146*t3484 + t3171*t3488 + t3164*t3492 - 1.1312*(-1.*t3162*t3488 + t3158*t3492) + 0.0306*(t3158*t3488 + t3162*t3492);
  p_output1[8]=t3473*t3504 + t3508*t3511 + t3153*t3514 + t3146*t3517 + t3171*t3521 + t3164*t3525 - 1.1312*(-1.*t3162*t3521 + t3158*t3525) + 0.0306*(t3158*t3521 + t3162*t3525);
  p_output1[9]=t3538*t3541 + t3517*t3544 + t3171*t3547 + t3164*t3550 - 1.1312*(t3158*t3550 + t3552) + 0.0306*(t3162*t3550 + t3556);
  p_output1[10]=t3547*t3562 + t3566*t3569 - 1.1312*(t3552 - 1.*t3158*t3569) + 0.0306*(t3556 - 1.*t3162*t3569);
  p_output1[11]=-1.;
  p_output1[12]=1.;
  p_output1[13]=-0.135*t2570*t2694*t3578 + t2849*t3583 - 0.135*t2922*t3587 - 0.135*t2966*t3591 + 0.135*t2971*t3595 + t2999*t3599 + t3015*t3603 - 0.1305*(t2845*t3583 + t2776*t3603) + t3047*t3611 + t3070*t3615 + t3086*t3619 + t3127*t3623 + t3135*t3627 + t3146*t3631 + t3153*t3635 + t3164*t3639 + t3171*t3643 + 0.0306*(t3162*t3639 + t3158*t3643) - 1.1312*(t3158*t3639 - 1.*t3162*t3643);
  p_output1[14]=t2570*t2743*t2849*t3581 + 0.135*t2694*t2852*t3581 + 0.135*t2570*t2922*t2930*t3581 - 0.135*t2966*t3659 + 0.135*t2971*t3663 + t2999*t3667 + t3015*t3671 - 0.1305*(t2570*t2743*t2845*t3581 + t2776*t3671) + t3047*t3679 + t3070*t3683 + t3086*t3687 + t3127*t3691 + t3135*t3695 + t3146*t3699 + t3153*t3703 + t3164*t3707 + t3171*t3711 + 0.0306*(t3162*t3707 + t3158*t3711) - 1.1312*(t3158*t3707 - 1.*t3162*t3711);
  p_output1[15]=-0.135*t2922*t3724 - 0.135*t2888*t2966*t3724 - 0.135*t2694*t2971*t3724 + t2849*t3730 + t2999*t3734 + t3015*t3738 - 0.1305*(t2845*t3730 + t2776*t3738) + t3047*t3746 + t3070*t3750 + t3086*t3754 + t3127*t3758 + t3135*t3762 + t3146*t3766 + t3153*t3770 + t3164*t3774 + t3171*t3778 + 0.0306*(t3162*t3774 + t3158*t3778) - 1.1312*(t3158*t3774 - 1.*t3162*t3778);
  p_output1[16]=-0.135*t2570*t2888*t3581 - 0.135*t2694*t3730 + 0.135*t2971*t3793 - 0.135*t2966*t3797 - 0.1305*t2776*t3801 + t3015*t3801 - 1.*t2845*t3047*t3801 + t2999*t3807 + t3086*t3811 + t3070*t3815 + t3135*t3819 + t3127*t3823 + t3153*t3827 + t3146*t3831 + t3171*t3835 + t3164*t3839 - 1.1312*(-1.*t3162*t3835 + t3158*t3839) + 0.0306*(t3158*t3835 + t3162*t3839);
  p_output1[17]=0.135*t2948*t3797 - 0.135*t2971*t3852 - 0.1305*t2776*t3856 + t3015*t3856 - 1.*t2845*t3047*t3856 + t2999*t3861 + t3086*t3865 + t3070*t3869 + t3135*t3873 + t3127*t3877 + t3153*t3881 + t3146*t3885 + t3171*t3889 + t3164*t3893 - 1.1312*(-1.*t3162*t3889 + t3158*t3893) + 0.0306*(t3158*t3889 + t3162*t3893);
  p_output1[18]=t3362*t3906 + t3366*t3910 + t3047*t3914 + t2976*t3070*t3914 - 1.*t2991*t3086*t3914 - 0.1305*t3920 + t3127*t3924 + t3135*t3928 + t3146*t3932 + t3153*t3936 + t3164*t3940 + t3171*t3944 + 0.0306*(t3162*t3940 + t3158*t3944) - 1.1312*(t3158*t3940 - 1.*t3162*t3944);
  p_output1[19]=t3415*t3856 + t3419*t3920 + t3086*t3959 + t3070*t3963 + t3135*t3967 + t3127*t3971 + t3153*t3975 + t3146*t3979 + t3171*t3983 + t3164*t3987 - 1.1312*(-1.*t3162*t3983 + t3158*t3987) + 0.0306*(t3158*t3983 + t3162*t3987);
  p_output1[20]=t3470*t3963 + t3464*t4000 + t3135*t4004 + t3127*t4007 + t3153*t4011 + t3146*t4015 + t3171*t4019 + t3164*t4023 - 1.1312*(-1.*t3162*t4019 + t3158*t4023) + 0.0306*(t3158*t4019 + t3162*t4023);
  p_output1[21]=t3504*t4004 + t3508*t4037 + t3153*t4040 + t3146*t4043 + t3171*t4047 + t3164*t4051 - 1.1312*(-1.*t3162*t4047 + t3158*t4051) + 0.0306*(t3158*t4047 + t3162*t4051);
  p_output1[22]=t3544*t4043 + t3538*t4064 + t3171*t4068 + t3164*t4071 - 1.1312*(t3158*t4071 + t4073) + 0.0306*(t3162*t4071 + t4077);
  p_output1[23]=t3562*t4068 + t3566*t4085 - 1.1312*(t4073 - 1.*t3158*t4085) + 0.0306*t4091;
  p_output1[24]=-1.;
  p_output1[25]=1.;
  p_output1[26]=-0.135*t2570*t2694*t3581 - 0.135*t2922*t3730 + 0.135*t2971*t3797 - 0.135*t2966*t3852 + t2999*t3856 + t2849*t3906 + t3015*t3910 + t3047*t3920 + t3086*t3963 + t3070*t4000 + t3127*t4004 + t3135*t4037 + t3153*t4043 + t3146*t4064 + t3164*t4068 + t3171*t4085 - 1.1312*t4091 - 0.1305*t4103 + 0.0306*t4116;
  p_output1[27]=-1.*t2570*t2743*t2849*t3578 - 0.135*t2694*t2852*t3578 - 0.135*t2570*t2922*t2930*t3578 - 0.135*t2966*t4125 + 0.135*t2971*t4129 + t2999*t4133 + t3015*t4137 - 0.1305*(-1.*t2570*t2743*t2845*t3578 + t2776*t4137) + t3047*t4145 + t3070*t4149 + t3086*t4153 + t3127*t4157 + t3135*t4161 + t3146*t4165 + t3153*t4169 + t3164*t4173 + t3171*t4177 + 0.0306*t4181 - 1.1312*t4185;
  p_output1[28]=-0.135*t2922*t3583 - 0.135*t2888*t2966*t3583 - 0.135*t2694*t2971*t3583 + t2849*t4193 + t2999*t4197 + t3015*t4201 - 0.1305*(t2845*t4193 + t2776*t4201) + t3047*t4209 + t3070*t4213 + t3086*t4217 + t3127*t4221 + t3135*t4225 + t3146*t4229 + t3153*t4233 + t3164*t4237 + t3171*t4241 + 0.0306*t4245 - 1.1312*t4249;
  p_output1[29]=0.135*t2570*t2888*t3578 - 0.135*t2694*t4193 + 0.135*t2971*t4255 - 0.135*t2966*t4259 - 0.1305*t2776*t4263 + t3015*t4263 - 1.*t2845*t3047*t4263 + t2999*t4269 + t3086*t4273 + t3070*t4277 + t3135*t4281 + t3127*t4285 + t3153*t4289 + t3146*t4293 + t3171*t4297 + t3164*t4301 - 1.1312*t4305 + 0.0306*t4309;
  p_output1[30]=0.135*t2948*t4259 - 0.135*t2971*t4314 - 0.1305*t2776*t4318 + t3015*t4318 - 1.*t2845*t3047*t4318 + t2999*t4323 + t3086*t4327 + t3070*t4331 + t3135*t4335 + t3127*t4339 + t3153*t4343 + t3146*t4347 + t3171*t4351 + t3164*t4355 - 1.1312*t4359 + 0.0306*t4363;
  p_output1[31]=t3362*t4368 + t3366*t4372 + t3047*t4376 + t2976*t3070*t4376 - 1.*t2991*t3086*t4376 - 0.1305*t4382 + t3127*t4386 + t3135*t4390 + t3146*t4394 + t3153*t4398 + t3164*t4402 + t3171*t4406 + 0.0306*t4410 - 1.1312*t4414;
  p_output1[32]=t3415*t4318 + t3419*t4382 + t3086*t4421 + t3070*t4425 + t3135*t4429 + t3127*t4433 + t3153*t4437 + t3146*t4441 + t3171*t4445 + t3164*t4449 - 1.1312*t4453 + 0.0306*t4457;
  p_output1[33]=t3470*t4425 + t3464*t4462 + t3135*t4466 + t3127*t4469 + t3153*t4473 + t3146*t4477 + t3171*t4481 + t3164*t4485 - 1.1312*t4489 + 0.0306*t4493;
  p_output1[34]=t3504*t4466 + t3508*t4499 + t3153*t4502 + t3146*t4505 + t3171*t4509 + t3164*t4513 - 1.1312*t4517 + 0.0306*t4521;
  p_output1[35]=t3544*t4505 + t3538*t4526 + t3171*t4530 + t3164*t4533 - 1.1312*t4537 + 0.0306*t4541;
  p_output1[36]=t3562*t4530 + t3566*t4547 - 1.1312*t4550 + 0.0306*t4553;
  p_output1[37]=-1.;
  p_output1[38]=(0.642788*t4091 - 0.766044*t4116)*t4561*t4574 + (0.766044*t4091 + 0.642788*t4116)*t4567*t4574;
  p_output1[39]=(-0.766044*t4181 + 0.642788*t4185)*t4561*t4574 + (0.642788*t4181 + 0.766044*t4185)*t4567*t4574;
  p_output1[40]=(-0.766044*t4245 + 0.642788*t4249)*t4561*t4574 + (0.642788*t4245 + 0.766044*t4249)*t4567*t4574;
  p_output1[41]=(0.642788*t4305 - 0.766044*t4309)*t4561*t4574 + (0.766044*t4305 + 0.642788*t4309)*t4567*t4574;
  p_output1[42]=(0.642788*t4359 - 0.766044*t4363)*t4561*t4574 + (0.766044*t4359 + 0.642788*t4363)*t4567*t4574;
  p_output1[43]=(-0.766044*t4410 + 0.642788*t4414)*t4561*t4574 + (0.642788*t4410 + 0.766044*t4414)*t4567*t4574;
  p_output1[44]=(0.642788*t4453 - 0.766044*t4457)*t4561*t4574 + (0.766044*t4453 + 0.642788*t4457)*t4567*t4574;
  p_output1[45]=(0.642788*t4489 - 0.766044*t4493)*t4561*t4574 + (0.766044*t4489 + 0.642788*t4493)*t4567*t4574;
  p_output1[46]=(0.642788*t4517 - 0.766044*t4521)*t4561*t4574 + (0.766044*t4517 + 0.642788*t4521)*t4567*t4574;
  p_output1[47]=(0.642788*t4537 - 0.766044*t4541)*t4561*t4574 + (0.766044*t4537 + 0.642788*t4541)*t4567*t4574;
  p_output1[48]=(0.642788*t4550 + t4560)*t4561*t4574 + (0.766044*t4550 + t4566)*t4567*t4574;
  p_output1[49]=-1.;
  p_output1[50]=t3373*(-1.*t2845*t3583 - 1.*t2776*t3603)*t4675;
  p_output1[51]=t3373*(-1.*t2570*t2743*t2845*t3581 - 1.*t2776*t3671)*t4675 + (t2743*t2845*t2852 - 1.*t2776*t3027)*t4103*t4675;
  p_output1[52]=t3373*(-1.*t2845*t3730 - 1.*t2776*t3738)*t4675 + (t2570*t2845*t2930 - 1.*t2776*t3190)*t4103*t4675;
  p_output1[53]=-1.*t2776*t3373*t3801*t4675 - 1.*t2776*t3258*t4103*t4675;
  p_output1[54]=-1.*t2776*t3373*t3856*t4675 - 1.*t2776*t3313*t4103*t4675;
  p_output1[55]=t3373*(-1.*t2776*t3906 + t2845*t3910)*t4675 + (-1.*t2570*t2743*t2776 + t2845*t3369)*t4103*t4675;
  p_output1[56]=-1.;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 5 && ncols == 1) && 
      !(mrows == 1 && ncols == 5))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 57, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_h_RightToeBottom_RightStance.hh"

namespace Pattern[Cassie, Blank[oneStep]]
{

void J_h_RightToeBottom_RightStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
