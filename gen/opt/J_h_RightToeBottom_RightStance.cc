/*
 * Automatically Generated from Mathematica.
 * Fri 4 Aug 2017 15:37:19 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1386;
  double t28;
  double t48;
  double t1559;
  double t2327;
  double t5232;
  double t4747;
  double t4900;
  double t5184;
  double t2450;
  double t5245;
  double t5264;
  double t5270;
  double t1003;
  double t1009;
  double t1015;
  double t1193;
  double t875;
  double t7759;
  double t7792;
  double t7809;
  double t5751;
  double t5823;
  double t5961;
  double t7262;
  double t7462;
  double t7534;
  double t7609;
  double t8128;
  double t8142;
  double t8154;
  double t8166;
  double t8167;
  double t8177;
  double t8237;
  double t8295;
  double t8302;
  double t8306;
  double t8313;
  double t8325;
  double t8332;
  double t8361;
  double t8395;
  double t8401;
  double t8402;
  double t8404;
  double t8415;
  double t8422;
  double t8428;
  double t8461;
  double t8467;
  double t8478;
  double t8489;
  double t8493;
  double t8500;
  double t8507;
  double t8542;
  double t8561;
  double t8578;
  double t8608;
  double t8614;
  double t8615;
  double t8621;
  double t8629;
  double t8631;
  double t8636;
  double t8647;
  double t8654;
  double t8657;
  double t1716;
  double t2093;
  double t3151;
  double t4032;
  double t7621;
  double t7640;
  double t7653;
  double t6433;
  double t7349;
  double t7441;
  double t1095;
  double t1203;
  double t1214;
  double t8092;
  double t8110;
  double t8111;
  double t8701;
  double t8702;
  double t8705;
  double t8214;
  double t8250;
  double t8264;
  double t8709;
  double t8712;
  double t8718;
  double t8724;
  double t8725;
  double t8726;
  double t8308;
  double t8309;
  double t8312;
  double t8372;
  double t8378;
  double t8388;
  double t8399;
  double t8400;
  double t8744;
  double t8745;
  double t8748;
  double t8751;
  double t8753;
  double t8754;
  double t8408;
  double t8409;
  double t8410;
  double t8412;
  double t8487;
  double t8491;
  double t8492;
  double t8758;
  double t8760;
  double t8762;
  double t8764;
  double t8765;
  double t8769;
  double t8521;
  double t8529;
  double t8536;
  double t8616;
  double t8624;
  double t8625;
  double t8771;
  double t8773;
  double t8774;
  double t8779;
  double t8780;
  double t8781;
  double t8639;
  double t8640;
  double t8641;
  double t8783;
  double t8784;
  double t8786;
  double t8789;
  double t8791;
  double t8794;
  double t8829;
  double t8830;
  double t8832;
  double t8834;
  double t8835;
  double t8836;
  double t8839;
  double t8841;
  double t8843;
  double t8850;
  double t8851;
  double t8852;
  double t8855;
  double t8860;
  double t8862;
  double t8869;
  double t8870;
  double t8879;
  double t8888;
  double t8889;
  double t8890;
  double t8896;
  double t8897;
  double t8899;
  double t8902;
  double t8904;
  double t8909;
  double t8914;
  double t8916;
  double t8920;
  double t8922;
  double t8925;
  double t8928;
  double t8931;
  double t8932;
  double t8933;
  double t8958;
  double t8960;
  double t8962;
  double t8974;
  double t8976;
  double t8982;
  double t8985;
  double t8990;
  double t8991;
  double t8993;
  double t8996;
  double t8997;
  double t9000;
  double t9003;
  double t9008;
  double t9009;
  double t9015;
  double t9016;
  double t9017;
  double t9024;
  double t9025;
  double t9027;
  double t9032;
  double t9033;
  double t9036;
  double t9042;
  double t9043;
  double t9044;
  double t9046;
  double t9050;
  double t9052;
  double t9084;
  double t9086;
  double t9088;
  double t9091;
  double t9092;
  double t9093;
  double t9111;
  double t9112;
  double t9113;
  double t9116;
  double t9117;
  double t9122;
  double t9132;
  double t9136;
  double t9138;
  double t9144;
  double t9145;
  double t9146;
  double t9148;
  double t9150;
  double t9151;
  double t9155;
  double t9156;
  double t9157;
  double t9187;
  double t9189;
  double t9191;
  double t9194;
  double t9197;
  double t9200;
  double t9209;
  double t9211;
  double t9212;
  double t9215;
  double t9218;
  double t9219;
  double t9222;
  double t9223;
  double t9228;
  double t9246;
  double t9247;
  double t9251;
  double t9256;
  double t9259;
  double t9263;
  double t9275;
  double t9280;
  double t9287;
  double t9291;
  double t9292;
  double t9293;
  double t9327;
  double t9328;
  double t9330;
  double t9348;
  double t9362;
  double t9370;
  double t9373;
  double t9375;
  double t9377;
  double t9378;
  double t9383;
  double t9384;
  double t9387;
  double t9392;
  double t9394;
  double t9398;
  double t9400;
  double t9402;
  double t9403;
  double t9429;
  double t9431;
  double t9432;
  double t9435;
  double t9438;
  double t9444;
  double t9446;
  double t9452;
  double t9454;
  double t9455;
  double t9461;
  double t9465;
  double t9471;
  double t9493;
  double t9496;
  double t9498;
  double t9507;
  double t9508;
  double t9515;
  double t9516;
  double t9518;
  double t9544;
  double t9546;
  double t9548;
  double t9525;
  double t9559;
  double t9564;
  double t9572;
  double t9573;
  double t9574;
  double t9576;
  double t9577;
  double t9579;
  double t9583;
  double t9585;
  double t9589;
  double t9563;
  double t9565;
  double t9566;
  double t9599;
  double t9600;
  double t9601;
  double t9593;
  double t9595;
  double t9597;
  double t9611;
  double t9612;
  double t9614;
  double t9625;
  double t9626;
  double t9630;
  double t9632;
  double t9633;
  double t9634;
  double t9636;
  double t9637;
  double t9638;
  double t9641;
  double t9643;
  double t9644;
  double t9646;
  double t9647;
  double t9650;
  double t9652;
  double t9653;
  double t9655;
  double t9657;
  double t9658;
  double t9659;
  double t9663;
  double t9664;
  double t9665;
  double t9690;
  double t9692;
  double t9694;
  double t9697;
  double t9699;
  double t9700;
  double t9710;
  double t9711;
  double t9713;
  double t9703;
  double t9704;
  double t9707;
  double t9720;
  double t9721;
  double t9722;
  double t9725;
  double t9729;
  double t9731;
  double t9735;
  double t9736;
  double t9739;
  double t9744;
  double t9747;
  double t9749;
  double t9751;
  double t9755;
  double t9756;
  double t9758;
  double t9760;
  double t9762;
  double t9764;
  double t9765;
  double t9766;
  double t9771;
  double t9772;
  double t9774;
  double t9777;
  double t9780;
  double t9781;
  double t9797;
  double t9799;
  double t9801;
  double t9812;
  double t9813;
  double t9815;
  double t9826;
  double t9827;
  double t9829;
  double t9817;
  double t9818;
  double t9821;
  double t9839;
  double t9840;
  double t9842;
  double t9844;
  double t9848;
  double t9849;
  double t9851;
  double t9852;
  double t9853;
  double t9856;
  double t9857;
  double t9860;
  double t9864;
  double t9866;
  double t9870;
  double t9872;
  double t9874;
  double t9875;
  double t9880;
  double t9882;
  double t9885;
  double t9887;
  double t9888;
  double t9889;
  double t9893;
  double t9894;
  double t9895;
  double t9910;
  double t9911;
  double t9912;
  double t9915;
  double t9917;
  double t9918;
  double t9920;
  double t9923;
  double t9926;
  double t9932;
  double t9937;
  double t9939;
  double t9943;
  double t9944;
  double t9945;
  double t9948;
  double t9955;
  double t9956;
  double t9963;
  double t9965;
  double t9966;
  double t9968;
  double t9969;
  double t9971;
  double t9974;
  double t9975;
  double t9978;
  double t9983;
  double t9985;
  double t9986;
  double t9990;
  double t9993;
  double t9994;
  double t9997;
  double t9999;
  double t10000;
  double t10016;
  double t10019;
  double t10020;
  double t10025;
  double t10026;
  double t10033;
  double t10034;
  double t10037;
  double t10038;
  double t10039;
  double t10043;
  double t10044;
  double t10046;
  double t10051;
  double t10055;
  double t10056;
  double t10058;
  double t10059;
  double t10060;
  double t10063;
  double t10064;
  double t10065;
  double t10067;
  double t10068;
  double t10072;
  double t10075;
  double t10077;
  double t10078;
  double t10081;
  double t10083;
  double t10085;
  double t9072;
  double t9073;
  double t9077;
  double t9080;
  double t9083;
  double t10098;
  double t10099;
  double t10100;
  double t10103;
  double t10104;
  double t10105;
  double t10109;
  double t10111;
  double t10114;
  double t10122;
  double t10123;
  double t10124;
  double t10128;
  double t10130;
  double t10131;
  double t10135;
  double t10136;
  double t10137;
  double t10139;
  double t10141;
  double t10142;
  double t10145;
  double t10146;
  double t10148;
  double t10150;
  double t10151;
  double t10152;
  double t9173;
  double t9176;
  double t9180;
  double t9183;
  double t9185;
  double t10169;
  double t10170;
  double t10171;
  double t10175;
  double t10177;
  double t10178;
  double t10180;
  double t10181;
  double t10182;
  double t10184;
  double t10186;
  double t10187;
  double t10189;
  double t10192;
  double t10197;
  double t10199;
  double t10200;
  double t10201;
  double t10203;
  double t10204;
  double t10206;
  double t10209;
  double t10210;
  double t10214;
  double t10216;
  double t10217;
  double t10221;
  double t9320;
  double t9324;
  double t9326;
  double t9335;
  double t9337;
  double t10239;
  double t10240;
  double t10241;
  double t10244;
  double t10245;
  double t10247;
  double t10248;
  double t10251;
  double t10253;
  double t10254;
  double t10258;
  double t10259;
  double t10260;
  double t10262;
  double t10263;
  double t10264;
  double t10268;
  double t10269;
  double t10270;
  double t9421;
  double t9423;
  double t9426;
  double t9427;
  double t9428;
  double t10291;
  double t10292;
  double t10295;
  double t10297;
  double t10298;
  double t10300;
  double t10301;
  double t10303;
  double t10304;
  double t10305;
  double t10308;
  double t10309;
  double t10311;
  double t9489;
  double t9490;
  double t9492;
  double t9501;
  double t9503;
  double t10331;
  double t10332;
  double t10333;
  double t10336;
  double t10337;
  double t10340;
  double t10343;
  double t9536;
  double t9537;
  double t9540;
  double t9541;
  double t9542;
  double t10345;
  double t10358;
  double t10359;
  double t10361;
  double t10349;
  double t10367;
  double t10369;
  double t10421;
  double t10422;
  double t10423;
  double t10425;
  double t10426;
  double t10428;
  double t10437;
  double t10441;
  double t10442;
  double t10432;
  double t10433;
  double t10434;
  double t10452;
  double t10453;
  double t10454;
  double t10458;
  double t10459;
  double t10460;
  double t10464;
  double t10466;
  double t10467;
  double t10469;
  double t10471;
  double t10474;
  double t10476;
  double t10477;
  double t10478;
  double t10480;
  double t10481;
  double t10483;
  double t10487;
  double t10488;
  double t10491;
  double t10497;
  double t10498;
  double t10500;
  double t10504;
  double t10507;
  double t10509;
  double t10533;
  double t10534;
  double t10535;
  double t10542;
  double t10544;
  double t10545;
  double t10538;
  double t10539;
  double t10540;
  double t10552;
  double t10553;
  double t10554;
  double t10556;
  double t10557;
  double t10560;
  double t10564;
  double t10565;
  double t10566;
  double t10570;
  double t10571;
  double t10572;
  double t10574;
  double t10575;
  double t10576;
  double t10579;
  double t10582;
  double t10583;
  double t10585;
  double t10587;
  double t10588;
  double t10591;
  double t10593;
  double t10594;
  double t10598;
  double t10601;
  double t10604;
  double t10629;
  double t10632;
  double t10634;
  double t10635;
  double t10637;
  double t10640;
  double t10642;
  double t10643;
  double t10648;
  double t10649;
  double t10654;
  double t10656;
  double t10659;
  double t10660;
  double t10663;
  double t10664;
  double t10667;
  double t10670;
  double t10671;
  double t10672;
  double t10675;
  double t10676;
  double t10677;
  double t10683;
  double t10684;
  double t10685;
  double t10688;
  double t10690;
  double t10692;
  double t10698;
  double t10701;
  double t10702;
  double t10706;
  double t10708;
  double t10709;
  double t10730;
  double t10732;
  double t10733;
  double t10738;
  double t10739;
  double t10744;
  double t10745;
  double t10748;
  double t10749;
  double t10751;
  double t10755;
  double t10757;
  double t10758;
  double t10760;
  double t10762;
  double t10764;
  double t10766;
  double t10768;
  double t10770;
  double t10773;
  double t10776;
  double t10777;
  double t10783;
  double t10784;
  double t10785;
  double t10789;
  double t10790;
  double t10791;
  double t10795;
  double t10796;
  double t10797;
  double t10810;
  double t10813;
  double t10814;
  double t10821;
  double t10822;
  double t10823;
  double t10826;
  double t10827;
  double t10828;
  double t10841;
  double t10842;
  double t10844;
  double t10847;
  double t10849;
  double t10850;
  double t10853;
  double t10854;
  double t10858;
  double t10861;
  double t10863;
  double t10865;
  double t10867;
  double t10868;
  double t10870;
  double t10874;
  double t10876;
  double t10877;
  double t10890;
  double t10891;
  double t10892;
  double t10894;
  double t10896;
  double t10897;
  double t10900;
  double t10901;
  double t10902;
  double t10908;
  double t10909;
  double t10910;
  double t10915;
  double t10917;
  double t10918;
  double t10920;
  double t10924;
  double t10925;
  double t10927;
  double t10929;
  double t10930;
  double t10932;
  double t10933;
  double t10934;
  double t10937;
  double t10938;
  double t10940;
  double t10957;
  double t10958;
  double t10959;
  double t10963;
  double t10964;
  double t10967;
  double t10968;
  double t10971;
  double t10974;
  double t10976;
  double t10980;
  double t10983;
  double t10985;
  double t10987;
  double t10988;
  double t10989;
  double t10992;
  double t10993;
  double t10994;
  double t11015;
  double t11016;
  double t11017;
  double t11026;
  double t11027;
  double t11030;
  double t11032;
  double t11035;
  double t11036;
  double t11038;
  double t11040;
  double t11041;
  double t11042;
  double t11059;
  double t11060;
  double t11061;
  double t11070;
  double t11071;
  double t11074;
  double t11076;
  double t11080;
  double t11093;
  double t11094;
  double t11100;
  double t11086;
  double t11107;
  double t11108;
  double t10404;
  double t10408;
  double t10410;
  double t11111;
  double t11114;
  double t11115;
  double t11123;
  double t11125;
  double t11127;
  double t11129;
  double t11130;
  double t11131;
  double t11132;
  double t11133;
  double t11134;
  double t11136;
  double t10513;
  double t10515;
  double t10516;
  double t10518;
  double t10520;
  double t10521;
  double t11116;
  double t11117;
  double t11118;
  double t10609;
  double t10612;
  double t10614;
  double t10619;
  double t10620;
  double t10621;
  double t10711;
  double t10713;
  double t10715;
  double t10718;
  double t10719;
  double t10723;
  double t10799;
  double t10801;
  double t10802;
  double t10804;
  double t10805;
  double t10806;
  double t10879;
  double t10880;
  double t10881;
  double t10883;
  double t10884;
  double t10886;
  double t10944;
  double t10945;
  double t10946;
  double t10949;
  double t10950;
  double t10953;
  double t10999;
  double t11001;
  double t11003;
  double t11008;
  double t11009;
  double t11010;
  double t11048;
  double t11050;
  double t11051;
  double t11053;
  double t11054;
  double t11055;
  double t11082;
  double t11084;
  double t11087;
  double t11088;
  double t11103;
  double t11105;
  double t11274;
  double t11275;
  double t11276;
  double t11282;
  double t11283;
  double t11284;
  double t11286;
  double t11287;
  double t11288;
  double t11289;
  t1386 = Sin(var1[4]);
  t28 = Cos(var1[4]);
  t48 = Sin(var1[14]);
  t1559 = Cos(var1[14]);
  t2327 = Sin(var1[5]);
  t5232 = Sin(var1[15]);
  t4747 = t28*t48;
  t4900 = t1559*t1386*t2327;
  t5184 = t4747 + t4900;
  t2450 = Cos(var1[15]);
  t5245 = t1559*t28;
  t5264 = -1.*t48*t1386*t2327;
  t5270 = t5245 + t5264;
  t1003 = Cos(var1[16]);
  t1009 = -1.*t1003;
  t1015 = 1. + t1009;
  t1193 = Sin(var1[16]);
  t875 = Cos(var1[5]);
  t7759 = t2450*t5184;
  t7792 = t5232*t5270;
  t7809 = t7759 + t7792;
  t5751 = Cos(var1[17]);
  t5823 = -1.*t5751;
  t5961 = 1. + t5823;
  t7262 = Sin(var1[17]);
  t7462 = -1.*t5232*t5184;
  t7534 = t2450*t5270;
  t7609 = t7462 + t7534;
  t8128 = -1.*t1003*t875*t1386;
  t8142 = t1193*t7809;
  t8154 = t8128 + t8142;
  t8166 = Cos(var1[18]);
  t8167 = -1.*t8166;
  t8177 = 1. + t8167;
  t8237 = Sin(var1[18]);
  t8295 = t7262*t7609;
  t8302 = t5751*t8154;
  t8306 = t8295 + t8302;
  t8313 = t5751*t7609;
  t8325 = -1.*t7262*t8154;
  t8332 = t8313 + t8325;
  t8361 = Cos(var1[19]);
  t8395 = Sin(var1[19]);
  t8401 = -1.*t8237*t8306;
  t8402 = t8166*t8332;
  t8404 = t8401 + t8402;
  t8415 = t8166*t8306;
  t8422 = t8237*t8332;
  t8428 = t8415 + t8422;
  t8461 = Cos(var1[20]);
  t8467 = -1.*t8461;
  t8478 = 1. + t8467;
  t8489 = Sin(var1[20]);
  t8493 = t8395*t8404;
  t8500 = t8361*t8428;
  t8507 = t8493 + t8500;
  t8542 = t8361*t8404;
  t8561 = -1.*t8395*t8428;
  t8578 = t8542 + t8561;
  t8608 = Cos(var1[21]);
  t8614 = -1.*t8608;
  t8615 = 1. + t8614;
  t8621 = Sin(var1[21]);
  t8629 = -1.*t8489*t8507;
  t8631 = t8461*t8578;
  t8636 = t8629 + t8631;
  t8647 = t8461*t8507;
  t8654 = t8489*t8578;
  t8657 = t8647 + t8654;
  t1716 = -1.*t1559;
  t2093 = 1. + t1716;
  t3151 = -1.*t2450;
  t4032 = 1. + t3151;
  t7621 = -0.135*t1015;
  t7640 = 0.049*t1193;
  t7653 = t7621 + t7640;
  t6433 = -0.09*t5961;
  t7349 = 0.049*t7262;
  t7441 = t6433 + t7349;
  t1095 = -0.049*t1015;
  t1203 = -0.135*t1193;
  t1214 = t1095 + t1203;
  t8092 = -0.049*t5961;
  t8110 = -0.09*t7262;
  t8111 = t8092 + t8110;
  t8701 = -1.*t1559*t2450*t28*t875;
  t8702 = t28*t875*t48*t5232;
  t8705 = t8701 + t8702;
  t8214 = -0.049*t8177;
  t8250 = -0.21*t8237;
  t8264 = t8214 + t8250;
  t8709 = t2450*t28*t875*t48;
  t8712 = t1559*t28*t875*t5232;
  t8718 = t8709 + t8712;
  t8724 = t8705*t1193;
  t8725 = -1.*t1003*t28*t2327;
  t8726 = t8724 + t8725;
  t8308 = -0.21*t8177;
  t8309 = 0.049*t8237;
  t8312 = t8308 + t8309;
  t8372 = -1.*t8361;
  t8378 = 1. + t8372;
  t8388 = -0.2707*t8378;
  t8399 = 0.0016*t8395;
  t8400 = t8388 + t8399;
  t8744 = t8718*t7262;
  t8745 = t5751*t8726;
  t8748 = t8744 + t8745;
  t8751 = t5751*t8718;
  t8753 = -1.*t7262*t8726;
  t8754 = t8751 + t8753;
  t8408 = -1. + t8361;
  t8409 = 0.0016*t8408;
  t8410 = -0.2707*t8395;
  t8412 = t8409 + t8410;
  t8487 = 0.0184*t8478;
  t8491 = -0.7055*t8489;
  t8492 = t8487 + t8491;
  t8758 = -1.*t8237*t8748;
  t8760 = t8166*t8754;
  t8762 = t8758 + t8760;
  t8764 = t8166*t8748;
  t8765 = t8237*t8754;
  t8769 = t8764 + t8765;
  t8521 = -0.7055*t8478;
  t8529 = -0.0184*t8489;
  t8536 = t8521 + t8529;
  t8616 = -1.1135*t8615;
  t8624 = 0.0216*t8621;
  t8625 = t8616 + t8624;
  t8771 = t8395*t8762;
  t8773 = t8361*t8769;
  t8774 = t8771 + t8773;
  t8779 = t8361*t8762;
  t8780 = -1.*t8395*t8769;
  t8781 = t8779 + t8780;
  t8639 = -0.0216*t8615;
  t8640 = -1.1135*t8621;
  t8641 = t8639 + t8640;
  t8783 = -1.*t8489*t8774;
  t8784 = t8461*t8781;
  t8786 = t8783 + t8784;
  t8789 = t8461*t8774;
  t8791 = t8489*t8781;
  t8794 = t8789 + t8791;
  t8829 = -1.*t48*t1386;
  t8830 = t1559*t28*t2327;
  t8832 = t8829 + t8830;
  t8834 = t1559*t1386;
  t8835 = t28*t48*t2327;
  t8836 = t8834 + t8835;
  t8839 = t5232*t8832;
  t8841 = t2450*t8836;
  t8843 = t8839 + t8841;
  t8850 = t2450*t8832;
  t8851 = -1.*t5232*t8836;
  t8852 = t8850 + t8851;
  t8855 = -1.*t1193*t7262*t8843;
  t8860 = t5751*t8852;
  t8862 = t8855 + t8860;
  t8869 = t5751*t1193*t8843;
  t8870 = t7262*t8852;
  t8879 = t8869 + t8870;
  t8888 = t8237*t8862;
  t8889 = t8166*t8879;
  t8890 = t8888 + t8889;
  t8896 = t8166*t8862;
  t8897 = -1.*t8237*t8879;
  t8899 = t8896 + t8897;
  t8902 = -1.*t8395*t8890;
  t8904 = t8361*t8899;
  t8909 = t8902 + t8904;
  t8914 = t8361*t8890;
  t8916 = t8395*t8899;
  t8920 = t8914 + t8916;
  t8922 = t8489*t8909;
  t8925 = t8461*t8920;
  t8928 = t8922 + t8925;
  t8931 = t8461*t8909;
  t8932 = -1.*t8489*t8920;
  t8933 = t8931 + t8932;
  t8958 = t48*t1386;
  t8960 = -1.*t1559*t28*t2327;
  t8962 = t8958 + t8960;
  t8974 = -1.*t5232*t8962;
  t8976 = t8974 + t8841;
  t8982 = -1.*t2450*t8962;
  t8985 = t8982 + t8851;
  t8990 = -1.*t1193*t7262*t8976;
  t8991 = t5751*t8985;
  t8993 = t8990 + t8991;
  t8996 = t5751*t1193*t8976;
  t8997 = t7262*t8985;
  t9000 = t8996 + t8997;
  t9003 = t8237*t8993;
  t9008 = t8166*t9000;
  t9009 = t9003 + t9008;
  t9015 = t8166*t8993;
  t9016 = -1.*t8237*t9000;
  t9017 = t9015 + t9016;
  t9024 = -1.*t8395*t9009;
  t9025 = t8361*t9017;
  t9027 = t9024 + t9025;
  t9032 = t8361*t9009;
  t9033 = t8395*t9017;
  t9036 = t9032 + t9033;
  t9042 = t8489*t9027;
  t9043 = t8461*t9036;
  t9044 = t9042 + t9043;
  t9046 = t8461*t9027;
  t9050 = -1.*t8489*t9036;
  t9052 = t9046 + t9050;
  t9084 = t2450*t8962;
  t9086 = t5232*t8836;
  t9088 = t9084 + t9086;
  t9091 = -1.*t28*t875*t1193;
  t9092 = t1003*t9088;
  t9093 = t9091 + t9092;
  t9111 = -1.*t8166*t7262*t9093;
  t9112 = -1.*t5751*t8237*t9093;
  t9113 = t9111 + t9112;
  t9116 = t5751*t8166*t9093;
  t9117 = -1.*t7262*t8237*t9093;
  t9122 = t9116 + t9117;
  t9132 = t8395*t9113;
  t9136 = t8361*t9122;
  t9138 = t9132 + t9136;
  t9144 = t8361*t9113;
  t9145 = -1.*t8395*t9122;
  t9146 = t9144 + t9145;
  t9148 = -1.*t8489*t9138;
  t9150 = t8461*t9146;
  t9151 = t9148 + t9150;
  t9155 = t8461*t9138;
  t9156 = t8489*t9146;
  t9157 = t9155 + t9156;
  t9187 = t1003*t28*t875;
  t9189 = t1193*t9088;
  t9191 = t9187 + t9189;
  t9194 = -1.*t7262*t8976;
  t9197 = -1.*t5751*t9191;
  t9200 = t9194 + t9197;
  t9209 = t5751*t8976;
  t9211 = -1.*t7262*t9191;
  t9212 = t9209 + t9211;
  t9215 = t8237*t9200;
  t9218 = t8166*t9212;
  t9219 = t9215 + t9218;
  t9222 = t8166*t9200;
  t9223 = -1.*t8237*t9212;
  t9228 = t9222 + t9223;
  t9246 = -1.*t8395*t9219;
  t9247 = t8361*t9228;
  t9251 = t9246 + t9247;
  t9256 = t8361*t9219;
  t9259 = t8395*t9228;
  t9263 = t9256 + t9259;
  t9275 = t8489*t9251;
  t9280 = t8461*t9263;
  t9287 = t9275 + t9280;
  t9291 = t8461*t9251;
  t9292 = -1.*t8489*t9263;
  t9293 = t9291 + t9292;
  t9327 = t7262*t8976;
  t9328 = t5751*t9191;
  t9330 = t9327 + t9328;
  t9348 = -1.*t8237*t9330;
  t9362 = t9348 + t9218;
  t9370 = -1.*t8166*t9330;
  t9373 = t9370 + t9223;
  t9375 = -1.*t8395*t9362;
  t9377 = t8361*t9373;
  t9378 = t9375 + t9377;
  t9383 = t8361*t9362;
  t9384 = t8395*t9373;
  t9387 = t9383 + t9384;
  t9392 = t8489*t9378;
  t9394 = t8461*t9387;
  t9398 = t9392 + t9394;
  t9400 = t8461*t9378;
  t9402 = -1.*t8489*t9387;
  t9403 = t9400 + t9402;
  t9429 = t8166*t9330;
  t9431 = t8237*t9212;
  t9432 = t9429 + t9431;
  t9435 = -1.*t8361*t9432;
  t9438 = t9375 + t9435;
  t9444 = -1.*t8395*t9432;
  t9446 = t9383 + t9444;
  t9452 = t8489*t9438;
  t9454 = t8461*t9446;
  t9455 = t9452 + t9454;
  t9461 = t8461*t9438;
  t9465 = -1.*t8489*t9446;
  t9471 = t9461 + t9465;
  t9493 = t8395*t9362;
  t9496 = t8361*t9432;
  t9498 = t9493 + t9496;
  t9507 = -1.*t8489*t9498;
  t9508 = t9507 + t9454;
  t9515 = -1.*t8461*t9498;
  t9516 = t9515 + t9465;
  t9518 = -1.*t8621*t9508;
  t9544 = t8461*t9498;
  t9546 = t8489*t9446;
  t9548 = t9544 + t9546;
  t9525 = t8608*t9508;
  t9559 = Cos(var1[3]);
  t9564 = Sin(var1[3]);
  t9572 = -1.*t875*t9564;
  t9573 = -1.*t9559*t1386*t2327;
  t9574 = t9572 + t9573;
  t9576 = -1.*t9559*t28*t48;
  t9577 = t1559*t9574;
  t9579 = t9576 + t9577;
  t9583 = -1.*t1559*t9559*t28;
  t9585 = -1.*t48*t9574;
  t9589 = t9583 + t9585;
  t9563 = t9559*t875*t1386;
  t9565 = -1.*t9564*t2327;
  t9566 = t9563 + t9565;
  t9599 = t2450*t9579;
  t9600 = t5232*t9589;
  t9601 = t9599 + t9600;
  t9593 = -1.*t5232*t9579;
  t9595 = t2450*t9589;
  t9597 = t9593 + t9595;
  t9611 = t1003*t9566;
  t9612 = t1193*t9601;
  t9614 = t9611 + t9612;
  t9625 = t7262*t9597;
  t9626 = t5751*t9614;
  t9630 = t9625 + t9626;
  t9632 = t5751*t9597;
  t9633 = -1.*t7262*t9614;
  t9634 = t9632 + t9633;
  t9636 = -1.*t8237*t9630;
  t9637 = t8166*t9634;
  t9638 = t9636 + t9637;
  t9641 = t8166*t9630;
  t9643 = t8237*t9634;
  t9644 = t9641 + t9643;
  t9646 = t8395*t9638;
  t9647 = t8361*t9644;
  t9650 = t9646 + t9647;
  t9652 = t8361*t9638;
  t9653 = -1.*t8395*t9644;
  t9655 = t9652 + t9653;
  t9657 = -1.*t8489*t9650;
  t9658 = t8461*t9655;
  t9659 = t9657 + t9658;
  t9663 = t8461*t9650;
  t9664 = t8489*t9655;
  t9665 = t9663 + t9664;
  t9690 = t48*t9564*t1386;
  t9692 = -1.*t1559*t28*t9564*t2327;
  t9694 = t9690 + t9692;
  t9697 = t1559*t9564*t1386;
  t9699 = t28*t48*t9564*t2327;
  t9700 = t9697 + t9699;
  t9710 = t2450*t9694;
  t9711 = t5232*t9700;
  t9713 = t9710 + t9711;
  t9703 = -1.*t5232*t9694;
  t9704 = t2450*t9700;
  t9707 = t9703 + t9704;
  t9720 = t1003*t28*t875*t9564;
  t9721 = t1193*t9713;
  t9722 = t9720 + t9721;
  t9725 = t7262*t9707;
  t9729 = t5751*t9722;
  t9731 = t9725 + t9729;
  t9735 = t5751*t9707;
  t9736 = -1.*t7262*t9722;
  t9739 = t9735 + t9736;
  t9744 = -1.*t8237*t9731;
  t9747 = t8166*t9739;
  t9749 = t9744 + t9747;
  t9751 = t8166*t9731;
  t9755 = t8237*t9739;
  t9756 = t9751 + t9755;
  t9758 = t8395*t9749;
  t9760 = t8361*t9756;
  t9762 = t9758 + t9760;
  t9764 = t8361*t9749;
  t9765 = -1.*t8395*t9756;
  t9766 = t9764 + t9765;
  t9771 = -1.*t8489*t9762;
  t9772 = t8461*t9766;
  t9774 = t9771 + t9772;
  t9777 = t8461*t9762;
  t9780 = t8489*t9766;
  t9781 = t9777 + t9780;
  t9797 = -1.*t875*t9564*t1386;
  t9799 = -1.*t9559*t2327;
  t9801 = t9797 + t9799;
  t9812 = t9559*t875;
  t9813 = -1.*t9564*t1386*t2327;
  t9815 = t9812 + t9813;
  t9826 = t1559*t2450*t9801;
  t9827 = -1.*t48*t5232*t9801;
  t9829 = t9826 + t9827;
  t9817 = -1.*t2450*t48*t9801;
  t9818 = -1.*t1559*t5232*t9801;
  t9821 = t9817 + t9818;
  t9839 = t1003*t9815;
  t9840 = t1193*t9829;
  t9842 = t9839 + t9840;
  t9844 = t7262*t9821;
  t9848 = t5751*t9842;
  t9849 = t9844 + t9848;
  t9851 = t5751*t9821;
  t9852 = -1.*t7262*t9842;
  t9853 = t9851 + t9852;
  t9856 = -1.*t8237*t9849;
  t9857 = t8166*t9853;
  t9860 = t9856 + t9857;
  t9864 = t8166*t9849;
  t9866 = t8237*t9853;
  t9870 = t9864 + t9866;
  t9872 = t8395*t9860;
  t9874 = t8361*t9870;
  t9875 = t9872 + t9874;
  t9880 = t8361*t9860;
  t9882 = -1.*t8395*t9870;
  t9885 = t9880 + t9882;
  t9887 = -1.*t8489*t9875;
  t9888 = t8461*t9885;
  t9889 = t9887 + t9888;
  t9893 = t8461*t9875;
  t9894 = t8489*t9885;
  t9895 = t9893 + t9894;
  t9910 = t28*t48*t9564;
  t9911 = -1.*t1559*t9815;
  t9912 = t9910 + t9911;
  t9915 = -1.*t1559*t28*t9564;
  t9917 = -1.*t48*t9815;
  t9918 = t9915 + t9917;
  t9920 = t5232*t9912;
  t9923 = t2450*t9918;
  t9926 = t9920 + t9923;
  t9932 = t2450*t9912;
  t9937 = -1.*t5232*t9918;
  t9939 = t9932 + t9937;
  t9943 = -1.*t1193*t7262*t9926;
  t9944 = t5751*t9939;
  t9945 = t9943 + t9944;
  t9948 = t5751*t1193*t9926;
  t9955 = t7262*t9939;
  t9956 = t9948 + t9955;
  t9963 = t8237*t9945;
  t9965 = t8166*t9956;
  t9966 = t9963 + t9965;
  t9968 = t8166*t9945;
  t9969 = -1.*t8237*t9956;
  t9971 = t9968 + t9969;
  t9974 = -1.*t8395*t9966;
  t9975 = t8361*t9971;
  t9978 = t9974 + t9975;
  t9983 = t8361*t9966;
  t9985 = t8395*t9971;
  t9986 = t9983 + t9985;
  t9990 = t8489*t9978;
  t9993 = t8461*t9986;
  t9994 = t9990 + t9993;
  t9997 = t8461*t9978;
  t9999 = -1.*t8489*t9986;
  t10000 = t9997 + t9999;
  t10016 = -1.*t28*t48*t9564;
  t10019 = t1559*t9815;
  t10020 = t10016 + t10019;
  t10025 = -1.*t5232*t10020;
  t10026 = t10025 + t9923;
  t10033 = -1.*t2450*t10020;
  t10034 = t10033 + t9937;
  t10037 = -1.*t1193*t7262*t10026;
  t10038 = t5751*t10034;
  t10039 = t10037 + t10038;
  t10043 = t5751*t1193*t10026;
  t10044 = t7262*t10034;
  t10046 = t10043 + t10044;
  t10051 = t8237*t10039;
  t10055 = t8166*t10046;
  t10056 = t10051 + t10055;
  t10058 = t8166*t10039;
  t10059 = -1.*t8237*t10046;
  t10060 = t10058 + t10059;
  t10063 = -1.*t8395*t10056;
  t10064 = t8361*t10060;
  t10065 = t10063 + t10064;
  t10067 = t8361*t10056;
  t10068 = t8395*t10060;
  t10072 = t10067 + t10068;
  t10075 = t8489*t10065;
  t10077 = t8461*t10072;
  t10078 = t10075 + t10077;
  t10081 = t8461*t10065;
  t10083 = -1.*t8489*t10072;
  t10085 = t10081 + t10083;
  t9072 = -0.135*t1003;
  t9073 = -0.049*t1193;
  t9077 = t9072 + t9073;
  t9080 = 0.049*t1003;
  t9083 = t9080 + t1203;
  t10098 = t875*t9564*t1386;
  t10099 = t9559*t2327;
  t10100 = t10098 + t10099;
  t10103 = t2450*t10020;
  t10104 = t5232*t9918;
  t10105 = t10103 + t10104;
  t10109 = -1.*t1193*t10100;
  t10111 = t1003*t10105;
  t10114 = t10109 + t10111;
  t10122 = -1.*t8166*t7262*t10114;
  t10123 = -1.*t5751*t8237*t10114;
  t10124 = t10122 + t10123;
  t10128 = t5751*t8166*t10114;
  t10130 = -1.*t7262*t8237*t10114;
  t10131 = t10128 + t10130;
  t10135 = t8395*t10124;
  t10136 = t8361*t10131;
  t10137 = t10135 + t10136;
  t10139 = t8361*t10124;
  t10141 = -1.*t8395*t10131;
  t10142 = t10139 + t10141;
  t10145 = -1.*t8489*t10137;
  t10146 = t8461*t10142;
  t10148 = t10145 + t10146;
  t10150 = t8461*t10137;
  t10151 = t8489*t10142;
  t10152 = t10150 + t10151;
  t9173 = 0.049*t5751;
  t9176 = t9173 + t8110;
  t9180 = -0.09*t5751;
  t9183 = -0.049*t7262;
  t9185 = t9180 + t9183;
  t10169 = t1003*t10100;
  t10170 = t1193*t10105;
  t10171 = t10169 + t10170;
  t10175 = -1.*t7262*t10026;
  t10177 = -1.*t5751*t10171;
  t10178 = t10175 + t10177;
  t10180 = t5751*t10026;
  t10181 = -1.*t7262*t10171;
  t10182 = t10180 + t10181;
  t10184 = t8237*t10178;
  t10186 = t8166*t10182;
  t10187 = t10184 + t10186;
  t10189 = t8166*t10178;
  t10192 = -1.*t8237*t10182;
  t10197 = t10189 + t10192;
  t10199 = -1.*t8395*t10187;
  t10200 = t8361*t10197;
  t10201 = t10199 + t10200;
  t10203 = t8361*t10187;
  t10204 = t8395*t10197;
  t10206 = t10203 + t10204;
  t10209 = t8489*t10201;
  t10210 = t8461*t10206;
  t10214 = t10209 + t10210;
  t10216 = t8461*t10201;
  t10217 = -1.*t8489*t10206;
  t10221 = t10216 + t10217;
  t9320 = -0.21*t8166;
  t9324 = -0.049*t8237;
  t9326 = t9320 + t9324;
  t9335 = 0.049*t8166;
  t9337 = t9335 + t8250;
  t10239 = t7262*t10026;
  t10240 = t5751*t10171;
  t10241 = t10239 + t10240;
  t10244 = -1.*t8237*t10241;
  t10245 = t10244 + t10186;
  t10247 = -1.*t8166*t10241;
  t10248 = t10247 + t10192;
  t10251 = -1.*t8395*t10245;
  t10253 = t8361*t10248;
  t10254 = t10251 + t10253;
  t10258 = t8361*t10245;
  t10259 = t8395*t10248;
  t10260 = t10258 + t10259;
  t10262 = t8489*t10254;
  t10263 = t8461*t10260;
  t10264 = t10262 + t10263;
  t10268 = t8461*t10254;
  t10269 = -1.*t8489*t10260;
  t10270 = t10268 + t10269;
  t9421 = 0.0016*t8361;
  t9423 = t9421 + t8410;
  t9426 = -0.2707*t8361;
  t9427 = -0.0016*t8395;
  t9428 = t9426 + t9427;
  t10291 = t8166*t10241;
  t10292 = t8237*t10182;
  t10295 = t10291 + t10292;
  t10297 = -1.*t8361*t10295;
  t10298 = t10251 + t10297;
  t10300 = -1.*t8395*t10295;
  t10301 = t10258 + t10300;
  t10303 = t8489*t10298;
  t10304 = t8461*t10301;
  t10305 = t10303 + t10304;
  t10308 = t8461*t10298;
  t10309 = -1.*t8489*t10301;
  t10311 = t10308 + t10309;
  t9489 = -0.7055*t8461;
  t9490 = 0.0184*t8489;
  t9492 = t9489 + t9490;
  t9501 = -0.0184*t8461;
  t9503 = t9501 + t8491;
  t10331 = t8395*t10245;
  t10332 = t8361*t10295;
  t10333 = t10331 + t10332;
  t10336 = -1.*t8489*t10333;
  t10337 = t10336 + t10304;
  t10340 = -1.*t8461*t10333;
  t10343 = t10340 + t10309;
  t9536 = 0.0216*t8608;
  t9537 = t9536 + t8640;
  t9540 = -1.1135*t8608;
  t9541 = -0.0216*t8621;
  t9542 = t9540 + t9541;
  t10345 = -1.*t8621*t10337;
  t10358 = t8461*t10333;
  t10359 = t8489*t10301;
  t10361 = t10358 + t10359;
  t10349 = t8608*t10337;
  t10367 = -1.*t8621*t10361;
  t10369 = t10349 + t10367;
  t10421 = -1.*t9559*t48*t1386;
  t10422 = t1559*t9559*t28*t2327;
  t10423 = t10421 + t10422;
  t10425 = -1.*t1559*t9559*t1386;
  t10426 = -1.*t9559*t28*t48*t2327;
  t10428 = t10425 + t10426;
  t10437 = t2450*t10423;
  t10441 = t5232*t10428;
  t10442 = t10437 + t10441;
  t10432 = -1.*t5232*t10423;
  t10433 = t2450*t10428;
  t10434 = t10432 + t10433;
  t10452 = -1.*t1003*t9559*t28*t875;
  t10453 = t1193*t10442;
  t10454 = t10452 + t10453;
  t10458 = t7262*t10434;
  t10459 = t5751*t10454;
  t10460 = t10458 + t10459;
  t10464 = t5751*t10434;
  t10466 = -1.*t7262*t10454;
  t10467 = t10464 + t10466;
  t10469 = -1.*t8237*t10460;
  t10471 = t8166*t10467;
  t10474 = t10469 + t10471;
  t10476 = t8166*t10460;
  t10477 = t8237*t10467;
  t10478 = t10476 + t10477;
  t10480 = t8395*t10474;
  t10481 = t8361*t10478;
  t10483 = t10480 + t10481;
  t10487 = t8361*t10474;
  t10488 = -1.*t8395*t10478;
  t10491 = t10487 + t10488;
  t10497 = -1.*t8489*t10483;
  t10498 = t8461*t10491;
  t10500 = t10497 + t10498;
  t10504 = t8461*t10483;
  t10507 = t8489*t10491;
  t10509 = t10504 + t10507;
  t10533 = t875*t9564;
  t10534 = t9559*t1386*t2327;
  t10535 = t10533 + t10534;
  t10542 = t1559*t2450*t9566;
  t10544 = -1.*t48*t5232*t9566;
  t10545 = t10542 + t10544;
  t10538 = -1.*t2450*t48*t9566;
  t10539 = -1.*t1559*t5232*t9566;
  t10540 = t10538 + t10539;
  t10552 = t1003*t10535;
  t10553 = t1193*t10545;
  t10554 = t10552 + t10553;
  t10556 = t7262*t10540;
  t10557 = t5751*t10554;
  t10560 = t10556 + t10557;
  t10564 = t5751*t10540;
  t10565 = -1.*t7262*t10554;
  t10566 = t10564 + t10565;
  t10570 = -1.*t8237*t10560;
  t10571 = t8166*t10566;
  t10572 = t10570 + t10571;
  t10574 = t8166*t10560;
  t10575 = t8237*t10566;
  t10576 = t10574 + t10575;
  t10579 = t8395*t10572;
  t10582 = t8361*t10576;
  t10583 = t10579 + t10582;
  t10585 = t8361*t10572;
  t10587 = -1.*t8395*t10576;
  t10588 = t10585 + t10587;
  t10591 = -1.*t8489*t10583;
  t10593 = t8461*t10588;
  t10594 = t10591 + t10593;
  t10598 = t8461*t10583;
  t10601 = t8489*t10588;
  t10604 = t10598 + t10601;
  t10629 = -1.*t1559*t10535;
  t10632 = t9576 + t10629;
  t10634 = t1559*t9559*t28;
  t10635 = -1.*t48*t10535;
  t10637 = t10634 + t10635;
  t10640 = t5232*t10632;
  t10642 = t2450*t10637;
  t10643 = t10640 + t10642;
  t10648 = t2450*t10632;
  t10649 = -1.*t5232*t10637;
  t10654 = t10648 + t10649;
  t10656 = -1.*t1193*t7262*t10643;
  t10659 = t5751*t10654;
  t10660 = t10656 + t10659;
  t10663 = t5751*t1193*t10643;
  t10664 = t7262*t10654;
  t10667 = t10663 + t10664;
  t10670 = t8237*t10660;
  t10671 = t8166*t10667;
  t10672 = t10670 + t10671;
  t10675 = t8166*t10660;
  t10676 = -1.*t8237*t10667;
  t10677 = t10675 + t10676;
  t10683 = -1.*t8395*t10672;
  t10684 = t8361*t10677;
  t10685 = t10683 + t10684;
  t10688 = t8361*t10672;
  t10690 = t8395*t10677;
  t10692 = t10688 + t10690;
  t10698 = t8489*t10685;
  t10701 = t8461*t10692;
  t10702 = t10698 + t10701;
  t10706 = t8461*t10685;
  t10708 = -1.*t8489*t10692;
  t10709 = t10706 + t10708;
  t10730 = t9559*t28*t48;
  t10732 = t1559*t10535;
  t10733 = t10730 + t10732;
  t10738 = -1.*t5232*t10733;
  t10739 = t10738 + t10642;
  t10744 = -1.*t2450*t10733;
  t10745 = t10744 + t10649;
  t10748 = -1.*t1193*t7262*t10739;
  t10749 = t5751*t10745;
  t10751 = t10748 + t10749;
  t10755 = t5751*t1193*t10739;
  t10757 = t7262*t10745;
  t10758 = t10755 + t10757;
  t10760 = t8237*t10751;
  t10762 = t8166*t10758;
  t10764 = t10760 + t10762;
  t10766 = t8166*t10751;
  t10768 = -1.*t8237*t10758;
  t10770 = t10766 + t10768;
  t10773 = -1.*t8395*t10764;
  t10776 = t8361*t10770;
  t10777 = t10773 + t10776;
  t10783 = t8361*t10764;
  t10784 = t8395*t10770;
  t10785 = t10783 + t10784;
  t10789 = t8489*t10777;
  t10790 = t8461*t10785;
  t10791 = t10789 + t10790;
  t10795 = t8461*t10777;
  t10796 = -1.*t8489*t10785;
  t10797 = t10795 + t10796;
  t10810 = -1.*t9559*t875*t1386;
  t10813 = t9564*t2327;
  t10814 = t10810 + t10813;
  t10821 = t2450*t10733;
  t10822 = t5232*t10637;
  t10823 = t10821 + t10822;
  t10826 = -1.*t1193*t10814;
  t10827 = t1003*t10823;
  t10828 = t10826 + t10827;
  t10841 = -1.*t8166*t7262*t10828;
  t10842 = -1.*t5751*t8237*t10828;
  t10844 = t10841 + t10842;
  t10847 = t5751*t8166*t10828;
  t10849 = -1.*t7262*t8237*t10828;
  t10850 = t10847 + t10849;
  t10853 = t8395*t10844;
  t10854 = t8361*t10850;
  t10858 = t10853 + t10854;
  t10861 = t8361*t10844;
  t10863 = -1.*t8395*t10850;
  t10865 = t10861 + t10863;
  t10867 = -1.*t8489*t10858;
  t10868 = t8461*t10865;
  t10870 = t10867 + t10868;
  t10874 = t8461*t10858;
  t10876 = t8489*t10865;
  t10877 = t10874 + t10876;
  t10890 = t1003*t10814;
  t10891 = t1193*t10823;
  t10892 = t10890 + t10891;
  t10894 = -1.*t7262*t10739;
  t10896 = -1.*t5751*t10892;
  t10897 = t10894 + t10896;
  t10900 = t5751*t10739;
  t10901 = -1.*t7262*t10892;
  t10902 = t10900 + t10901;
  t10908 = t8237*t10897;
  t10909 = t8166*t10902;
  t10910 = t10908 + t10909;
  t10915 = t8166*t10897;
  t10917 = -1.*t8237*t10902;
  t10918 = t10915 + t10917;
  t10920 = -1.*t8395*t10910;
  t10924 = t8361*t10918;
  t10925 = t10920 + t10924;
  t10927 = t8361*t10910;
  t10929 = t8395*t10918;
  t10930 = t10927 + t10929;
  t10932 = t8489*t10925;
  t10933 = t8461*t10930;
  t10934 = t10932 + t10933;
  t10937 = t8461*t10925;
  t10938 = -1.*t8489*t10930;
  t10940 = t10937 + t10938;
  t10957 = t7262*t10739;
  t10958 = t5751*t10892;
  t10959 = t10957 + t10958;
  t10963 = -1.*t8237*t10959;
  t10964 = t10963 + t10909;
  t10967 = -1.*t8166*t10959;
  t10968 = t10967 + t10917;
  t10971 = -1.*t8395*t10964;
  t10974 = t8361*t10968;
  t10976 = t10971 + t10974;
  t10980 = t8361*t10964;
  t10983 = t8395*t10968;
  t10985 = t10980 + t10983;
  t10987 = t8489*t10976;
  t10988 = t8461*t10985;
  t10989 = t10987 + t10988;
  t10992 = t8461*t10976;
  t10993 = -1.*t8489*t10985;
  t10994 = t10992 + t10993;
  t11015 = t8166*t10959;
  t11016 = t8237*t10902;
  t11017 = t11015 + t11016;
  t11026 = -1.*t8361*t11017;
  t11027 = t10971 + t11026;
  t11030 = -1.*t8395*t11017;
  t11032 = t10980 + t11030;
  t11035 = t8489*t11027;
  t11036 = t8461*t11032;
  t11038 = t11035 + t11036;
  t11040 = t8461*t11027;
  t11041 = -1.*t8489*t11032;
  t11042 = t11040 + t11041;
  t11059 = t8395*t10964;
  t11060 = t8361*t11017;
  t11061 = t11059 + t11060;
  t11070 = -1.*t8489*t11061;
  t11071 = t11070 + t11036;
  t11074 = -1.*t8461*t11061;
  t11076 = t11074 + t11041;
  t11080 = -1.*t8621*t11071;
  t11093 = t8461*t11061;
  t11094 = t8489*t11032;
  t11100 = t11093 + t11094;
  t11086 = t8608*t11071;
  t11107 = -1.*t8621*t11100;
  t11108 = t11086 + t11107;
  t10404 = t8621*t10337;
  t10408 = t8608*t10361;
  t10410 = t10404 + t10408;
  t11111 = t8621*t11071;
  t11114 = t8608*t11100;
  t11115 = t11111 + t11114;
  t11123 = -0.766044*t11115;
  t11125 = 0.642788*t11108;
  t11127 = t11123 + t11125;
  t11129 = Power(t11127,2);
  t11130 = 0.642788*t11115;
  t11131 = 0.766044*t11108;
  t11132 = t11130 + t11131;
  t11133 = Power(t11132,2);
  t11134 = t11129 + t11133;
  t11136 = 1/t11134;
  t10513 = t8621*t10500;
  t10515 = t8608*t10509;
  t10516 = t10513 + t10515;
  t10518 = t8608*t10500;
  t10520 = -1.*t8621*t10509;
  t10521 = t10518 + t10520;
  t11116 = -0.642788*t11115;
  t11117 = -0.766044*t11108;
  t11118 = t11116 + t11117;
  t10609 = t8621*t10594;
  t10612 = t8608*t10604;
  t10614 = t10609 + t10612;
  t10619 = t8608*t10594;
  t10620 = -1.*t8621*t10604;
  t10621 = t10619 + t10620;
  t10711 = -1.*t8621*t10702;
  t10713 = t8608*t10709;
  t10715 = t10711 + t10713;
  t10718 = t8608*t10702;
  t10719 = t8621*t10709;
  t10723 = t10718 + t10719;
  t10799 = -1.*t8621*t10791;
  t10801 = t8608*t10797;
  t10802 = t10799 + t10801;
  t10804 = t8608*t10791;
  t10805 = t8621*t10797;
  t10806 = t10804 + t10805;
  t10879 = t8621*t10870;
  t10880 = t8608*t10877;
  t10881 = t10879 + t10880;
  t10883 = t8608*t10870;
  t10884 = -1.*t8621*t10877;
  t10886 = t10883 + t10884;
  t10944 = -1.*t8621*t10934;
  t10945 = t8608*t10940;
  t10946 = t10944 + t10945;
  t10949 = t8608*t10934;
  t10950 = t8621*t10940;
  t10953 = t10949 + t10950;
  t10999 = -1.*t8621*t10989;
  t11001 = t8608*t10994;
  t11003 = t10999 + t11001;
  t11008 = t8608*t10989;
  t11009 = t8621*t10994;
  t11010 = t11008 + t11009;
  t11048 = -1.*t8621*t11038;
  t11050 = t8608*t11042;
  t11051 = t11048 + t11050;
  t11053 = t8608*t11038;
  t11054 = t8621*t11042;
  t11055 = t11053 + t11054;
  t11082 = t8608*t11076;
  t11084 = t11080 + t11082;
  t11087 = t8621*t11076;
  t11088 = t11086 + t11087;
  t11103 = -1.*t8608*t11100;
  t11105 = t11080 + t11103;
  t11274 = t28*t875*t1193;
  t11275 = -1.*t1003*t9088;
  t11276 = t11274 + t11275;
  t11282 = Power(t11276,2);
  t11283 = t1193*t10100;
  t11284 = -1.*t1003*t10105;
  t11286 = t11283 + t11284;
  t11287 = Power(t11286,2);
  t11288 = t11282 + t11287;
  t11289 = 1/t11288;
  p_output1[0]=1.;
  p_output1[1]=-0.135*t1386*t2093*t2327 + 0.135*t28*t48 - 0.135*t4032*t5184 + 0.135*t5232*t5270 + t7441*t7609 + t7653*t7809 + t8111*t8154 + t8264*t8306 + t8312*t8332 + t8400*t8404 + t8412*t8428 + t8492*t8507 + t8536*t8578 + t8625*t8636 + t8641*t8657 + 0.0306*(t8621*t8636 + t8608*t8657) - 1.1312*(t8608*t8636 - 1.*t8621*t8657) - 1.*t1214*t1386*t875 - 0.1305*(t1003*t7809 + t1193*t1386*t875);
  p_output1[2]=-1.*t1214*t2327*t28 + t7653*t8705 - 0.1305*(t1193*t2327*t28 + t1003*t8705) + t7441*t8718 + t8111*t8726 + t8264*t8748 + 0.135*t2093*t28*t875 + 0.135*t1559*t28*t4032*t875 + 0.135*t28*t48*t5232*t875 + t8312*t8754 + t8400*t8762 + t8412*t8769 + t8492*t8774 + t8536*t8781 + t8625*t8786 + t8641*t8794 + 0.0306*(t8621*t8786 + t8608*t8794) - 1.1312*(t8608*t8786 - 1.*t8621*t8794);
  p_output1[3]=0.135*t1386*t1559 + 0.135*t2327*t28*t48 + 0.135*t5232*t8832 - 0.135*t4032*t8836 - 0.1305*t1003*t8843 + t7653*t8843 + t1193*t8111*t8843 + t7441*t8852 + t8312*t8862 + t8264*t8879 + t8412*t8890 + t8400*t8899 + t8536*t8909 + t8492*t8920 + t8641*t8928 + t8625*t8933 - 1.1312*(-1.*t8621*t8928 + t8608*t8933) + 0.0306*(t8608*t8928 + t8621*t8933);
  p_output1[4]=0.135*t2450*t8836 - 0.135*t5232*t8962 - 0.1305*t1003*t8976 + t7653*t8976 + t1193*t8111*t8976 + t7441*t8985 + t8312*t8993 + t8264*t9000 + t8412*t9009 + t8400*t9017 + t8536*t9027 + t8492*t9036 + t8641*t9044 + t8625*t9052 - 1.1312*(-1.*t8621*t9044 + t8608*t9052) + 0.0306*(t8608*t9044 + t8621*t9052);
  p_output1[5]=t28*t875*t9077 + t9083*t9088 - 0.1305*(-1.*t1003*t28*t875 - 1.*t1193*t9088) + t8111*t9093 + t5751*t8264*t9093 - 1.*t7262*t8312*t9093 + t8400*t9113 + t8412*t9122 + t8492*t9138 + t8536*t9146 + t8625*t9151 + t8641*t9157 + 0.0306*(t8621*t9151 + t8608*t9157) - 1.1312*(t8608*t9151 - 1.*t8621*t9157);
  p_output1[6]=t8976*t9176 + t9185*t9191 + t8312*t9200 + t8264*t9212 + t8412*t9219 + t8400*t9228 + t8536*t9251 + t8492*t9263 + t8641*t9287 + t8625*t9293 - 1.1312*(-1.*t8621*t9287 + t8608*t9293) + 0.0306*(t8608*t9287 + t8621*t9293);
  p_output1[7]=t9326*t9330 + t9212*t9337 + t8412*t9362 + t8400*t9373 + t8536*t9378 + t8492*t9387 + t8641*t9398 + t8625*t9403 - 1.1312*(-1.*t8621*t9398 + t8608*t9403) + 0.0306*(t8608*t9398 + t8621*t9403);
  p_output1[8]=t9362*t9423 + t9428*t9432 + t8536*t9438 + t8492*t9446 + t8641*t9455 + t8625*t9471 - 1.1312*(-1.*t8621*t9455 + t8608*t9471) + 0.0306*(t8608*t9455 + t8621*t9471);
  p_output1[9]=t9492*t9498 + t9446*t9503 + t8641*t9508 + t8625*t9516 - 1.1312*(t8608*t9516 + t9518) + 0.0306*(t8621*t9516 + t9525);
  p_output1[10]=t9508*t9537 + t9542*t9548 - 1.1312*(t9518 - 1.*t8608*t9548) + 0.0306*(t9525 - 1.*t8621*t9548);
  p_output1[11]=-1.;
  p_output1[12]=1.;
  p_output1[13]=-0.135*t28*t48*t9559 + t1214*t9566 - 0.135*t2093*t9574 - 0.135*t4032*t9579 + 0.135*t5232*t9589 + t7441*t9597 + t7653*t9601 - 0.1305*(-1.*t1193*t9566 + t1003*t9601) + t8111*t9614 + t8264*t9630 + t8312*t9634 + t8400*t9638 + t8412*t9644 + t8492*t9650 + t8536*t9655 + t8625*t9659 + t8641*t9665 + 0.0306*(t8621*t9659 + t8608*t9665) - 1.1312*(t8608*t9659 - 1.*t8621*t9665);
  p_output1[14]=0.135*t2093*t2327*t28*t9564 + 0.135*t1386*t48*t9564 + t1214*t28*t875*t9564 - 0.135*t4032*t9694 + 0.135*t5232*t9700 + t7441*t9707 + t7653*t9713 - 0.1305*(-1.*t1193*t28*t875*t9564 + t1003*t9713) + t8111*t9722 + t8264*t9731 + t8312*t9739 + t8400*t9749 + t8412*t9756 + t8492*t9762 + t8536*t9766 + t8625*t9774 + t8641*t9781 + 0.0306*(t8621*t9774 + t8608*t9781) - 1.1312*(t8608*t9774 - 1.*t8621*t9781);
  p_output1[15]=-0.135*t2093*t9801 - 0.135*t1559*t4032*t9801 - 0.135*t48*t5232*t9801 + t1214*t9815 + t7441*t9821 + t7653*t9829 - 0.1305*(-1.*t1193*t9815 + t1003*t9829) + t8111*t9842 + t8264*t9849 + t8312*t9853 + t8400*t9860 + t8412*t9870 + t8492*t9875 + t8536*t9885 + t8625*t9889 + t8641*t9895 + 0.0306*(t8621*t9889 + t8608*t9895) - 1.1312*(t8608*t9889 - 1.*t8621*t9895);
  p_output1[16]=t10000*t8625 - 0.135*t1559*t28*t9564 - 0.135*t48*t9815 + 0.135*t5232*t9912 - 0.135*t4032*t9918 - 0.1305*t1003*t9926 + t7653*t9926 + t1193*t8111*t9926 + t7441*t9939 + t8312*t9945 + t8264*t9956 + t8412*t9966 + t8400*t9971 + t8536*t9978 + t8492*t9986 + t8641*t9994 + 0.0306*(t10000*t8621 + t8608*t9994) - 1.1312*(t10000*t8608 - 1.*t8621*t9994);
  p_output1[17]=-0.1305*t10026*t1003 - 0.135*t10020*t5232 + t10034*t7441 + t10026*t7653 + t10026*t1193*t8111 + t10046*t8264 + t10039*t8312 + t10060*t8400 + t10056*t8412 + t10072*t8492 + t10065*t8536 - 1.1312*(t10085*t8608 - 1.*t10078*t8621) + 0.0306*(t10078*t8608 + t10085*t8621) + t10085*t8625 + t10078*t8641 + 0.135*t2450*t9918;
  p_output1[18]=-0.1305*(-1.*t1003*t10100 - 1.*t10105*t1193) + t10114*t8111 + t10114*t5751*t8264 - 1.*t10114*t7262*t8312 + t10124*t8400 + t10131*t8412 + t10137*t8492 + t10142*t8536 + 0.0306*(t10152*t8608 + t10148*t8621) - 1.1312*(t10148*t8608 - 1.*t10152*t8621) + t10148*t8625 + t10152*t8641 + t10100*t9077 + t10105*t9083;
  p_output1[19]=t10182*t8264 + t10178*t8312 + t10197*t8400 + t10187*t8412 + t10206*t8492 + t10201*t8536 - 1.1312*(t10221*t8608 - 1.*t10214*t8621) + 0.0306*(t10214*t8608 + t10221*t8621) + t10221*t8625 + t10214*t8641 + t10026*t9176 + t10171*t9185;
  p_output1[20]=t10248*t8400 + t10245*t8412 + t10260*t8492 + t10254*t8536 - 1.1312*(t10270*t8608 - 1.*t10264*t8621) + 0.0306*(t10264*t8608 + t10270*t8621) + t10270*t8625 + t10264*t8641 + t10241*t9326 + t10182*t9337;
  p_output1[21]=t10301*t8492 + t10298*t8536 - 1.1312*(t10311*t8608 - 1.*t10305*t8621) + 0.0306*(t10305*t8608 + t10311*t8621) + t10311*t8625 + t10305*t8641 + t10245*t9423 + t10295*t9428;
  p_output1[22]=-1.1312*(t10345 + t10343*t8608) + 0.0306*(t10349 + t10343*t8621) + t10343*t8625 + t10337*t8641 + t10333*t9492 + t10301*t9503;
  p_output1[23]=0.0306*t10369 - 1.1312*(t10345 - 1.*t10361*t8608) + t10337*t9537 + t10361*t9542;
  p_output1[24]=-1.;
  p_output1[25]=1.;
  p_output1[26]=-0.1305*t10114 - 1.1312*t10369 + 0.0306*t10410 + t10100*t1214 - 0.135*t10020*t4032 + t10026*t7441 + t10105*t7653 + t10171*t8111 + t10241*t8264 + t10182*t8312 + t10245*t8400 + t10295*t8412 + t10333*t8492 + t10301*t8536 + t10337*t8625 + t10361*t8641 - 0.135*t28*t48*t9564 - 0.135*t2093*t9815 + 0.135*t5232*t9918;
  p_output1[27]=0.0306*t10516 - 1.1312*t10521 - 0.135*t10423*t4032 + 0.135*t10428*t5232 + t10434*t7441 + t10442*t7653 + t10454*t8111 + t10460*t8264 + t10467*t8312 + t10474*t8400 + t10478*t8412 + t10483*t8492 + t10491*t8536 + t10500*t8625 + t10509*t8641 - 0.135*t2093*t2327*t28*t9559 - 0.135*t1386*t48*t9559 - 1.*t1214*t28*t875*t9559 - 0.1305*(t1003*t10442 + t1193*t28*t875*t9559);
  p_output1[28]=0.0306*t10614 - 1.1312*t10621 - 0.1305*(t1003*t10545 - 1.*t10535*t1193) + t10535*t1214 + t10540*t7441 + t10545*t7653 + t10554*t8111 + t10560*t8264 + t10566*t8312 + t10572*t8400 + t10576*t8412 + t10583*t8492 + t10588*t8536 + t10594*t8625 + t10604*t8641 - 0.135*t2093*t9566 - 0.135*t1559*t4032*t9566 - 0.135*t48*t5232*t9566;
  p_output1[29]=-0.1305*t1003*t10643 - 1.1312*t10715 + 0.0306*t10723 - 0.135*t10637*t4032 - 0.135*t10535*t48 + 0.135*t10632*t5232 + t10654*t7441 + t10643*t7653 + t10643*t1193*t8111 + t10667*t8264 + t10660*t8312 + t10677*t8400 + t10672*t8412 + t10692*t8492 + t10685*t8536 + t10709*t8625 + t10702*t8641 + 0.135*t1559*t28*t9559;
  p_output1[30]=-0.1305*t1003*t10739 - 1.1312*t10802 + 0.0306*t10806 + 0.135*t10637*t2450 - 0.135*t10733*t5232 + t10745*t7441 + t10739*t7653 + t10739*t1193*t8111 + t10758*t8264 + t10751*t8312 + t10770*t8400 + t10764*t8412 + t10785*t8492 + t10777*t8536 + t10797*t8625 + t10791*t8641;
  p_output1[31]=0.0306*t10881 - 1.1312*t10886 - 0.1305*(-1.*t1003*t10814 - 1.*t10823*t1193) + t10828*t8111 + t10828*t5751*t8264 - 1.*t10828*t7262*t8312 + t10844*t8400 + t10850*t8412 + t10858*t8492 + t10865*t8536 + t10870*t8625 + t10877*t8641 + t10814*t9077 + t10823*t9083;
  p_output1[32]=-1.1312*t10946 + 0.0306*t10953 + t10902*t8264 + t10897*t8312 + t10918*t8400 + t10910*t8412 + t10930*t8492 + t10925*t8536 + t10940*t8625 + t10934*t8641 + t10739*t9176 + t10892*t9185;
  p_output1[33]=-1.1312*t11003 + 0.0306*t11010 + t10968*t8400 + t10964*t8412 + t10985*t8492 + t10976*t8536 + t10994*t8625 + t10989*t8641 + t10959*t9326 + t10902*t9337;
  p_output1[34]=-1.1312*t11051 + 0.0306*t11055 + t11032*t8492 + t11027*t8536 + t11042*t8625 + t11038*t8641 + t10964*t9423 + t11017*t9428;
  p_output1[35]=-1.1312*t11084 + 0.0306*t11088 + t11076*t8625 + t11071*t8641 + t11061*t9492 + t11032*t9503;
  p_output1[36]=-1.1312*t11105 + 0.0306*t11108 + t11071*t9537 + t11100*t9542;
  p_output1[37]=-1.;
  p_output1[38]=(0.642788*t10369 - 0.766044*t10410)*t11118*t11136 + (0.766044*t10369 + 0.642788*t10410)*t11127*t11136;
  p_output1[39]=(-0.766044*t10516 + 0.642788*t10521)*t11118*t11136 + (0.642788*t10516 + 0.766044*t10521)*t11127*t11136;
  p_output1[40]=(-0.766044*t10614 + 0.642788*t10621)*t11118*t11136 + (0.642788*t10614 + 0.766044*t10621)*t11127*t11136;
  p_output1[41]=(0.642788*t10715 - 0.766044*t10723)*t11118*t11136 + (0.766044*t10715 + 0.642788*t10723)*t11127*t11136;
  p_output1[42]=(0.642788*t10802 - 0.766044*t10806)*t11118*t11136 + (0.766044*t10802 + 0.642788*t10806)*t11127*t11136;
  p_output1[43]=(-0.766044*t10881 + 0.642788*t10886)*t11118*t11136 + (0.642788*t10881 + 0.766044*t10886)*t11127*t11136;
  p_output1[44]=(0.642788*t10946 - 0.766044*t10953)*t11118*t11136 + (0.766044*t10946 + 0.642788*t10953)*t11127*t11136;
  p_output1[45]=(0.642788*t11003 - 0.766044*t11010)*t11118*t11136 + (0.766044*t11003 + 0.642788*t11010)*t11127*t11136;
  p_output1[46]=(0.642788*t11051 - 0.766044*t11055)*t11118*t11136 + (0.766044*t11051 + 0.642788*t11055)*t11127*t11136;
  p_output1[47]=(0.642788*t11084 - 0.766044*t11088)*t11118*t11136 + (0.766044*t11084 + 0.642788*t11088)*t11127*t11136;
  p_output1[48]=(0.642788*t11105 + t11117)*t11118*t11136 + (0.766044*t11105 + t11125)*t11127*t11136;
  p_output1[49]=-1.;
  p_output1[50]=t11276*t11289*(t1193*t9566 - 1.*t1003*t9601);
  p_output1[51]=t10114*t11289*(-1.*t1003*t7809 - 1.*t1193*t1386*t875) + t11276*t11289*(t1193*t28*t875*t9564 - 1.*t1003*t9713);
  p_output1[52]=t10114*t11289*(-1.*t1193*t2327*t28 - 1.*t1003*t8705) + t11276*t11289*(t1193*t9815 - 1.*t1003*t9829);
  p_output1[53]=-1.*t1003*t10114*t11289*t8843 - 1.*t1003*t11276*t11289*t9926;
  p_output1[54]=-1.*t10026*t1003*t11276*t11289 - 1.*t1003*t10114*t11289*t8976;
  p_output1[55]=t10171*t11276*t11289 + t10114*t11289*t9191;
  p_output1[56]=-1.;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 5 && ncols == 1) && 
      !(mrows == 1 && ncols == 5))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 57, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_h_RightToeBottom_RightStance.hh"

namespace Pattern[Cassie, Blank[oneStep]]
{

void J_h_RightToeBottom_RightStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
