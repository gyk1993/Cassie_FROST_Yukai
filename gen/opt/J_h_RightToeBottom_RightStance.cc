/*
 * Automatically Generated from Mathematica.
 * Mon 12 Jun 2017 22:04:22 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1248;
  double t170;
  double t297;
  double t1266;
  double t1559;
  double t4600;
  double t2687;
  double t3107;
  double t3532;
  double t2153;
  double t4839;
  double t4843;
  double t4911;
  double t457;
  double t634;
  double t771;
  double t996;
  double t446;
  double t6376;
  double t6462;
  double t6603;
  double t5041;
  double t5046;
  double t5225;
  double t5293;
  double t5374;
  double t5382;
  double t5519;
  double t7940;
  double t8103;
  double t8582;
  double t8854;
  double t9050;
  double t9121;
  double t9782;
  double t10018;
  double t10024;
  double t10028;
  double t10167;
  double t10198;
  double t10207;
  double t10413;
  double t11214;
  double t11833;
  double t12000;
  double t12107;
  double t12865;
  double t12917;
  double t12973;
  double t13110;
  double t13218;
  double t13275;
  double t13432;
  double t13827;
  double t13835;
  double t13839;
  double t13907;
  double t13910;
  double t13914;
  double t13935;
  double t13938;
  double t13940;
  double t13986;
  double t14030;
  double t14076;
  double t14101;
  double t14173;
  double t14191;
  double t14217;
  double t1271;
  double t1359;
  double t2154;
  double t2182;
  double t5930;
  double t6129;
  double t6287;
  double t5259;
  double t5297;
  double t5316;
  double t834;
  double t1192;
  double t1247;
  double t7032;
  double t7252;
  double t7423;
  double t14621;
  double t14622;
  double t14653;
  double t9627;
  double t9845;
  double t10013;
  double t14717;
  double t14721;
  double t14722;
  double t14790;
  double t14897;
  double t14918;
  double t10105;
  double t10133;
  double t10147;
  double t10550;
  double t10994;
  double t11170;
  double t11563;
  double t11631;
  double t15087;
  double t15126;
  double t15128;
  double t15133;
  double t15138;
  double t15172;
  double t12174;
  double t12194;
  double t12409;
  double t12636;
  double t13305;
  double t13466;
  double t13570;
  double t15215;
  double t15220;
  double t15278;
  double t15388;
  double t15405;
  double t15411;
  double t13864;
  double t13898;
  double t13901;
  double t13963;
  double t14005;
  double t14007;
  double t15440;
  double t15441;
  double t15595;
  double t15600;
  double t15623;
  double t15641;
  double t14134;
  double t14149;
  double t14150;
  double t15696;
  double t15766;
  double t15781;
  double t15875;
  double t15914;
  double t15939;
  double t16195;
  double t16201;
  double t16205;
  double t16226;
  double t16230;
  double t16242;
  double t16252;
  double t16253;
  double t16263;
  double t16287;
  double t16294;
  double t16299;
  double t16304;
  double t16306;
  double t16319;
  double t16323;
  double t16324;
  double t16340;
  double t16350;
  double t16355;
  double t16357;
  double t16369;
  double t16430;
  double t16455;
  double t16476;
  double t16477;
  double t16487;
  double t16500;
  double t16502;
  double t16504;
  double t16538;
  double t16547;
  double t16569;
  double t16675;
  double t16680;
  double t16689;
  double t16761;
  double t16785;
  double t16797;
  double t16867;
  double t16871;
  double t16913;
  double t16927;
  double t16932;
  double t16952;
  double t16986;
  double t17017;
  double t17018;
  double t17020;
  double t17035;
  double t17037;
  double t17038;
  double t17069;
  double t17077;
  double t17083;
  double t17157;
  double t17158;
  double t17165;
  double t17175;
  double t17192;
  double t17249;
  double t17266;
  double t17322;
  double t17372;
  double t17498;
  double t17508;
  double t17521;
  double t17854;
  double t17918;
  double t17930;
  double t17961;
  double t17972;
  double t17983;
  double t18366;
  double t18376;
  double t18388;
  double t18442;
  double t18460;
  double t18476;
  double t18500;
  double t18503;
  double t18546;
  double t18755;
  double t18806;
  double t19124;
  double t19157;
  double t19173;
  double t19179;
  double t19191;
  double t19210;
  double t19214;
  double t18129;
  double t18326;
  double t18339;
  double t19379;
  double t19389;
  double t19390;
  double t19450;
  double t19453;
  double t19454;
  double t19456;
  double t19467;
  double t19468;
  double t19488;
  double t19495;
  double t19497;
  double t19508;
  double t19509;
  double t19510;
  double t19521;
  double t19526;
  double t19537;
  double t19543;
  double t19552;
  double t19556;
  double t19560;
  double t19561;
  double t19564;
  double t19722;
  double t19737;
  double t19755;
  double t19846;
  double t19853;
  double t19855;
  double t19869;
  double t19888;
  double t19904;
  double t19905;
  double t19916;
  double t19917;
  double t19922;
  double t19944;
  double t19945;
  double t19946;
  double t19960;
  double t19962;
  double t19963;
  double t20211;
  double t20231;
  double t20234;
  double t20262;
  double t20263;
  double t20279;
  double t20280;
  double t20283;
  double t20284;
  double t20288;
  double t20311;
  double t20313;
  double t20320;
  double t20619;
  double t20631;
  double t20644;
  double t20735;
  double t20740;
  double t20785;
  double t20795;
  double t20800;
  double t20910;
  double t20922;
  double t20929;
  double t20831;
  double t21066;
  double t21078;
  double t21106;
  double t21107;
  double t21117;
  double t21138;
  double t21151;
  double t21161;
  double t21269;
  double t21296;
  double t21307;
  double t21077;
  double t21093;
  double t21096;
  double t21400;
  double t21448;
  double t21463;
  double t21323;
  double t21369;
  double t21379;
  double t21541;
  double t21548;
  double t21556;
  double t21565;
  double t21579;
  double t21586;
  double t21599;
  double t21614;
  double t21615;
  double t21635;
  double t21642;
  double t21646;
  double t21657;
  double t21685;
  double t21700;
  double t21726;
  double t21757;
  double t21773;
  double t21780;
  double t21784;
  double t21787;
  double t21798;
  double t21800;
  double t21807;
  double t21809;
  double t21814;
  double t21816;
  double t22254;
  double t22255;
  double t22305;
  double t22351;
  double t22406;
  double t22437;
  double t22493;
  double t22497;
  double t22512;
  double t22462;
  double t22466;
  double t22468;
  double t22601;
  double t22609;
  double t22614;
  double t22700;
  double t22724;
  double t22726;
  double t22737;
  double t22748;
  double t22771;
  double t22822;
  double t22824;
  double t22825;
  double t22833;
  double t22837;
  double t22840;
  double t22899;
  double t22942;
  double t22963;
  double t23007;
  double t23024;
  double t23034;
  double t23038;
  double t23047;
  double t23051;
  double t23063;
  double t23439;
  double t23485;
  double t23721;
  double t23742;
  double t23748;
  double t23841;
  double t23858;
  double t23879;
  double t23989;
  double t23991;
  double t24022;
  double t23957;
  double t23962;
  double t23970;
  double t24072;
  double t24145;
  double t24148;
  double t24196;
  double t24206;
  double t24210;
  double t24273;
  double t24276;
  double t24279;
  double t24282;
  double t24294;
  double t24295;
  double t24324;
  double t24325;
  double t24326;
  double t24358;
  double t24375;
  double t24385;
  double t24445;
  double t24626;
  double t24639;
  double t24644;
  double t24647;
  double t24649;
  double t24662;
  double t24663;
  double t24665;
  double t24708;
  double t24710;
  double t24714;
  double t24716;
  double t24720;
  double t24721;
  double t24724;
  double t24733;
  double t24736;
  double t24795;
  double t24808;
  double t24811;
  double t24819;
  double t24832;
  double t24836;
  double t24847;
  double t24887;
  double t24889;
  double t24971;
  double t24973;
  double t24980;
  double t24987;
  double t24989;
  double t24992;
  double t25005;
  double t25028;
  double t25414;
  double t25484;
  double t25485;
  double t25561;
  double t25572;
  double t25575;
  double t25582;
  double t25608;
  double t25612;
  double t25613;
  double t25677;
  double t25689;
  double t25690;
  double t25707;
  double t25710;
  double t25734;
  double t25743;
  double t25774;
  double t25784;
  double t25800;
  double t25808;
  double t25810;
  double t25813;
  double t25817;
  double t25833;
  double t25846;
  double t25849;
  double t25854;
  double t25855;
  double t25869;
  double t25875;
  double t25877;
  double t25879;
  double t25887;
  double t25889;
  double t25893;
  double t25900;
  double t25944;
  double t25994;
  double t26007;
  double t26127;
  double t17840;
  double t17841;
  double t17845;
  double t17850;
  double t17851;
  double t26175;
  double t26176;
  double t26177;
  double t26183;
  double t26184;
  double t26185;
  double t26188;
  double t26193;
  double t26194;
  double t26210;
  double t26216;
  double t26217;
  double t26221;
  double t26224;
  double t26225;
  double t26227;
  double t26228;
  double t26229;
  double t26238;
  double t26239;
  double t26241;
  double t26258;
  double t26260;
  double t26261;
  double t26266;
  double t26267;
  double t26268;
  double t19305;
  double t19308;
  double t19311;
  double t19317;
  double t19350;
  double t26204;
  double t26206;
  double t26208;
  double t26428;
  double t26429;
  double t26430;
  double t26500;
  double t26540;
  double t26542;
  double t26562;
  double t26585;
  double t26587;
  double t26590;
  double t26604;
  double t26605;
  double t26610;
  double t26612;
  double t26613;
  double t26617;
  double t26631;
  double t26637;
  double t26647;
  double t26649;
  double t26656;
  double t26661;
  double t26666;
  double t26667;
  double t19662;
  double t19714;
  double t19718;
  double t19797;
  double t19808;
  double t26718;
  double t26720;
  double t26723;
  double t26728;
  double t26734;
  double t26743;
  double t26744;
  double t26747;
  double t26748;
  double t26758;
  double t26760;
  double t26761;
  double t26763;
  double t26771;
  double t26775;
  double t26780;
  double t26788;
  double t26791;
  double t26792;
  double t20101;
  double t20110;
  double t20125;
  double t20170;
  double t20188;
  double t26844;
  double t26861;
  double t26862;
  double t26866;
  double t26880;
  double t26884;
  double t26895;
  double t26899;
  double t26900;
  double t26903;
  double t26905;
  double t26907;
  double t26912;
  double t20604;
  double t20614;
  double t20618;
  double t20671;
  double t20705;
  double t26969;
  double t26970;
  double t26972;
  double t27003;
  double t27023;
  double t27026;
  double t27027;
  double t20861;
  double t20878;
  double t20888;
  double t20897;
  double t20898;
  double t27038;
  double t27095;
  double t27097;
  double t27099;
  double t27053;
  double t27124;
  double t27126;
  double t27263;
  double t27265;
  double t27266;
  double t27274;
  double t27287;
  double t27288;
  double t27312;
  double t27313;
  double t27315;
  double t27295;
  double t27301;
  double t27305;
  double t27331;
  double t27337;
  double t27350;
  double t27354;
  double t27357;
  double t27361;
  double t27376;
  double t27384;
  double t27385;
  double t27388;
  double t27389;
  double t27390;
  double t27393;
  double t27394;
  double t27396;
  double t27398;
  double t27400;
  double t27401;
  double t27407;
  double t27408;
  double t27410;
  double t27427;
  double t27436;
  double t27439;
  double t27463;
  double t27470;
  double t27471;
  double t27535;
  double t27537;
  double t27540;
  double t27562;
  double t27594;
  double t27595;
  double t27548;
  double t27549;
  double t27551;
  double t27611;
  double t27613;
  double t27617;
  double t27638;
  double t27642;
  double t27643;
  double t27648;
  double t27659;
  double t27661;
  double t27670;
  double t27676;
  double t27681;
  double t27687;
  double t27688;
  double t27696;
  double t27699;
  double t27711;
  double t27714;
  double t27722;
  double t27724;
  double t27730;
  double t27737;
  double t27740;
  double t27742;
  double t27746;
  double t27747;
  double t27749;
  double t27805;
  double t27810;
  double t27815;
  double t27817;
  double t27824;
  double t27827;
  double t27829;
  double t27832;
  double t27852;
  double t27856;
  double t27865;
  double t27867;
  double t27870;
  double t27871;
  double t27873;
  double t27882;
  double t27899;
  double t27903;
  double t27908;
  double t27913;
  double t27922;
  double t27925;
  double t27928;
  double t27939;
  double t27941;
  double t27943;
  double t27951;
  double t27954;
  double t27964;
  double t27968;
  double t27969;
  double t27971;
  double t27979;
  double t27980;
  double t27981;
  double t28015;
  double t28038;
  double t28039;
  double t28047;
  double t28048;
  double t28072;
  double t28086;
  double t28096;
  double t28100;
  double t28103;
  double t28111;
  double t28113;
  double t28114;
  double t28116;
  double t28119;
  double t28126;
  double t28134;
  double t28143;
  double t28155;
  double t28168;
  double t28170;
  double t28180;
  double t28187;
  double t28188;
  double t28211;
  double t28218;
  double t28222;
  double t28225;
  double t28238;
  double t28240;
  double t28242;
  double t28314;
  double t28337;
  double t28341;
  double t28344;
  double t28351;
  double t28362;
  double t28369;
  double t28371;
  double t28400;
  double t28463;
  double t28473;
  double t28476;
  double t28487;
  double t28492;
  double t28495;
  double t28505;
  double t28509;
  double t28510;
  double t28525;
  double t28526;
  double t28529;
  double t28535;
  double t28536;
  double t28544;
  double t28556;
  double t28561;
  double t28567;
  double t28433;
  double t28447;
  double t28449;
  double t28624;
  double t28634;
  double t28685;
  double t28732;
  double t28733;
  double t28734;
  double t28739;
  double t28742;
  double t28746;
  double t28762;
  double t28766;
  double t28767;
  double t28773;
  double t28785;
  double t28793;
  double t28798;
  double t28800;
  double t28818;
  double t28824;
  double t28825;
  double t28828;
  double t28885;
  double t28890;
  double t28892;
  double t28948;
  double t28949;
  double t28952;
  double t28959;
  double t28960;
  double t28968;
  double t28973;
  double t28985;
  double t28990;
  double t28995;
  double t29028;
  double t29036;
  double t29037;
  double t29043;
  double t29052;
  double t29053;
  double t29062;
  double t29063;
  double t29064;
  double t29106;
  double t29112;
  double t29114;
  double t29122;
  double t29124;
  double t29138;
  double t29145;
  double t29153;
  double t29158;
  double t29166;
  double t29186;
  double t29190;
  double t29200;
  double t29279;
  double t29281;
  double t29282;
  double t29290;
  double t29322;
  double t29329;
  double t29330;
  double t29336;
  double t29395;
  double t29405;
  double t29414;
  double t29369;
  double t29442;
  double t29444;
  double t27226;
  double t27232;
  double t27241;
  double t29454;
  double t29458;
  double t29466;
  double t29527;
  double t29530;
  double t29531;
  double t29546;
  double t29548;
  double t29551;
  double t29555;
  double t29557;
  double t29560;
  double t29566;
  double t27495;
  double t27497;
  double t27498;
  double t27507;
  double t27510;
  double t27511;
  double t29468;
  double t29469;
  double t29475;
  double t27757;
  double t27762;
  double t27764;
  double t27769;
  double t27770;
  double t27775;
  double t27988;
  double t27989;
  double t27991;
  double t27994;
  double t28000;
  double t28006;
  double t28247;
  double t28254;
  double t28267;
  double t28285;
  double t28292;
  double t28295;
  double t28579;
  double t28582;
  double t28591;
  double t28598;
  double t28602;
  double t28605;
  double t28895;
  double t28898;
  double t28900;
  double t28905;
  double t28906;
  double t28931;
  double t29067;
  double t29076;
  double t29078;
  double t29085;
  double t29086;
  double t29088;
  double t29205;
  double t29207;
  double t29209;
  double t29219;
  double t29225;
  double t29232;
  double t29341;
  double t29342;
  double t29377;
  double t29384;
  double t29428;
  double t29429;
  double t30369;
  double t30375;
  double t30381;
  double t30393;
  double t27156;
  double t27157;
  double t27158;
  t1248 = Sin(var1[4]);
  t170 = Cos(var1[4]);
  t297 = Sin(var1[14]);
  t1266 = Cos(var1[14]);
  t1559 = Sin(var1[5]);
  t4600 = Sin(var1[15]);
  t2687 = t170*t297;
  t3107 = t1266*t1248*t1559;
  t3532 = t2687 + t3107;
  t2153 = Cos(var1[15]);
  t4839 = t1266*t170;
  t4843 = -1.*t297*t1248*t1559;
  t4911 = t4839 + t4843;
  t457 = Cos(var1[16]);
  t634 = -1.*t457;
  t771 = 1. + t634;
  t996 = Sin(var1[16]);
  t446 = Cos(var1[5]);
  t6376 = t2153*t3532;
  t6462 = t4600*t4911;
  t6603 = t6376 + t6462;
  t5041 = Cos(var1[17]);
  t5046 = -1.*t5041;
  t5225 = 1. + t5046;
  t5293 = Sin(var1[17]);
  t5374 = -1.*t4600*t3532;
  t5382 = t2153*t4911;
  t5519 = t5374 + t5382;
  t7940 = -1.*t457*t446*t1248;
  t8103 = -1.*t996*t6603;
  t8582 = t7940 + t8103;
  t8854 = Cos(var1[18]);
  t9050 = -1.*t8854;
  t9121 = 1. + t9050;
  t9782 = Sin(var1[18]);
  t10018 = t5293*t5519;
  t10024 = t5041*t8582;
  t10028 = t10018 + t10024;
  t10167 = t5041*t5519;
  t10198 = -1.*t5293*t8582;
  t10207 = t10167 + t10198;
  t10413 = Cos(var1[19]);
  t11214 = Sin(var1[19]);
  t11833 = -1.*t9782*t10028;
  t12000 = t8854*t10207;
  t12107 = t11833 + t12000;
  t12865 = t8854*t10028;
  t12917 = t9782*t10207;
  t12973 = t12865 + t12917;
  t13110 = Cos(var1[20]);
  t13218 = -1.*t13110;
  t13275 = 1. + t13218;
  t13432 = Sin(var1[20]);
  t13827 = t11214*t12107;
  t13835 = t10413*t12973;
  t13839 = t13827 + t13835;
  t13907 = t10413*t12107;
  t13910 = -1.*t11214*t12973;
  t13914 = t13907 + t13910;
  t13935 = Cos(var1[21]);
  t13938 = -1.*t13935;
  t13940 = 1. + t13938;
  t13986 = Sin(var1[21]);
  t14030 = -1.*t13432*t13839;
  t14076 = t13110*t13914;
  t14101 = t14030 + t14076;
  t14173 = t13110*t13839;
  t14191 = t13432*t13914;
  t14217 = t14173 + t14191;
  t1271 = -1.*t1266;
  t1359 = 1. + t1271;
  t2154 = -1.*t2153;
  t2182 = 1. + t2154;
  t5930 = -0.135*t771;
  t6129 = -0.049*t996;
  t6287 = t5930 + t6129;
  t5259 = -0.09*t5225;
  t5297 = 0.049*t5293;
  t5316 = t5259 + t5297;
  t834 = -0.049*t771;
  t1192 = 0.135*t996;
  t1247 = t834 + t1192;
  t7032 = -0.049*t5225;
  t7252 = -0.09*t5293;
  t7423 = t7032 + t7252;
  t14621 = -1.*t1266*t2153*t170*t446;
  t14622 = t170*t446*t297*t4600;
  t14653 = t14621 + t14622;
  t9627 = -0.049*t9121;
  t9845 = -0.21*t9782;
  t10013 = t9627 + t9845;
  t14717 = t2153*t170*t446*t297;
  t14721 = t1266*t170*t446*t4600;
  t14722 = t14717 + t14721;
  t14790 = -1.*t14653*t996;
  t14897 = -1.*t457*t170*t1559;
  t14918 = t14790 + t14897;
  t10105 = -0.21*t9121;
  t10133 = 0.049*t9782;
  t10147 = t10105 + t10133;
  t10550 = -1.*t10413;
  t10994 = 1. + t10550;
  t11170 = -0.2707*t10994;
  t11563 = 0.0016*t11214;
  t11631 = t11170 + t11563;
  t15087 = t14722*t5293;
  t15126 = t5041*t14918;
  t15128 = t15087 + t15126;
  t15133 = t5041*t14722;
  t15138 = -1.*t5293*t14918;
  t15172 = t15133 + t15138;
  t12174 = -1. + t10413;
  t12194 = 0.0016*t12174;
  t12409 = -0.2707*t11214;
  t12636 = t12194 + t12409;
  t13305 = 0.0184*t13275;
  t13466 = -0.7055*t13432;
  t13570 = t13305 + t13466;
  t15215 = -1.*t9782*t15128;
  t15220 = t8854*t15172;
  t15278 = t15215 + t15220;
  t15388 = t8854*t15128;
  t15405 = t9782*t15172;
  t15411 = t15388 + t15405;
  t13864 = -0.7055*t13275;
  t13898 = -0.0184*t13432;
  t13901 = t13864 + t13898;
  t13963 = -1.1135*t13940;
  t14005 = 0.0216*t13986;
  t14007 = t13963 + t14005;
  t15440 = t11214*t15278;
  t15441 = t10413*t15411;
  t15595 = t15440 + t15441;
  t15600 = t10413*t15278;
  t15623 = -1.*t11214*t15411;
  t15641 = t15600 + t15623;
  t14134 = -0.0216*t13940;
  t14149 = -1.1135*t13986;
  t14150 = t14134 + t14149;
  t15696 = -1.*t13432*t15595;
  t15766 = t13110*t15641;
  t15781 = t15696 + t15766;
  t15875 = t13110*t15595;
  t15914 = t13432*t15641;
  t15939 = t15875 + t15914;
  t16195 = -1.*t297*t1248;
  t16201 = t1266*t170*t1559;
  t16205 = t16195 + t16201;
  t16226 = t1266*t1248;
  t16230 = t170*t297*t1559;
  t16242 = t16226 + t16230;
  t16252 = t4600*t16205;
  t16253 = t2153*t16242;
  t16263 = t16252 + t16253;
  t16287 = t2153*t16205;
  t16294 = -1.*t4600*t16242;
  t16299 = t16287 + t16294;
  t16304 = t996*t5293*t16263;
  t16306 = t5041*t16299;
  t16319 = t16304 + t16306;
  t16323 = -1.*t5041*t996*t16263;
  t16324 = t5293*t16299;
  t16340 = t16323 + t16324;
  t16350 = t9782*t16319;
  t16355 = t8854*t16340;
  t16357 = t16350 + t16355;
  t16369 = t8854*t16319;
  t16430 = -1.*t9782*t16340;
  t16455 = t16369 + t16430;
  t16476 = -1.*t11214*t16357;
  t16477 = t10413*t16455;
  t16487 = t16476 + t16477;
  t16500 = t10413*t16357;
  t16502 = t11214*t16455;
  t16504 = t16500 + t16502;
  t16538 = t13432*t16487;
  t16547 = t13110*t16504;
  t16569 = t16538 + t16547;
  t16675 = t13110*t16487;
  t16680 = -1.*t13432*t16504;
  t16689 = t16675 + t16680;
  t16761 = t297*t1248;
  t16785 = -1.*t1266*t170*t1559;
  t16797 = t16761 + t16785;
  t16867 = -1.*t4600*t16797;
  t16871 = t16867 + t16253;
  t16913 = -1.*t2153*t16797;
  t16927 = t16913 + t16294;
  t16932 = t996*t5293*t16871;
  t16952 = t5041*t16927;
  t16986 = t16932 + t16952;
  t17017 = -1.*t5041*t996*t16871;
  t17018 = t5293*t16927;
  t17020 = t17017 + t17018;
  t17035 = t9782*t16986;
  t17037 = t8854*t17020;
  t17038 = t17035 + t17037;
  t17069 = t8854*t16986;
  t17077 = -1.*t9782*t17020;
  t17083 = t17069 + t17077;
  t17157 = -1.*t11214*t17038;
  t17158 = t10413*t17083;
  t17165 = t17157 + t17158;
  t17175 = t10413*t17038;
  t17192 = t11214*t17083;
  t17249 = t17175 + t17192;
  t17266 = t13432*t17165;
  t17322 = t13110*t17249;
  t17372 = t17266 + t17322;
  t17498 = t13110*t17165;
  t17508 = -1.*t13432*t17249;
  t17521 = t17498 + t17508;
  t17854 = t2153*t16797;
  t17918 = t4600*t16242;
  t17930 = t17854 + t17918;
  t17961 = -1.*t170*t446*t996;
  t17972 = -1.*t457*t17930;
  t17983 = t17961 + t17972;
  t18366 = -1.*t8854*t5293*t17983;
  t18376 = -1.*t5041*t9782*t17983;
  t18388 = t18366 + t18376;
  t18442 = t5041*t8854*t17983;
  t18460 = -1.*t5293*t9782*t17983;
  t18476 = t18442 + t18460;
  t18500 = t11214*t18388;
  t18503 = t10413*t18476;
  t18546 = t18500 + t18503;
  t18755 = t10413*t18388;
  t18806 = -1.*t11214*t18476;
  t19124 = t18755 + t18806;
  t19157 = -1.*t13432*t18546;
  t19173 = t13110*t19124;
  t19179 = t19157 + t19173;
  t19191 = t13110*t18546;
  t19210 = t13432*t19124;
  t19214 = t19191 + t19210;
  t18129 = t457*t170*t446;
  t18326 = -1.*t996*t17930;
  t18339 = t18129 + t18326;
  t19379 = -1.*t5293*t16871;
  t19389 = -1.*t5041*t18339;
  t19390 = t19379 + t19389;
  t19450 = t5041*t16871;
  t19453 = -1.*t5293*t18339;
  t19454 = t19450 + t19453;
  t19456 = t9782*t19390;
  t19467 = t8854*t19454;
  t19468 = t19456 + t19467;
  t19488 = t8854*t19390;
  t19495 = -1.*t9782*t19454;
  t19497 = t19488 + t19495;
  t19508 = -1.*t11214*t19468;
  t19509 = t10413*t19497;
  t19510 = t19508 + t19509;
  t19521 = t10413*t19468;
  t19526 = t11214*t19497;
  t19537 = t19521 + t19526;
  t19543 = t13432*t19510;
  t19552 = t13110*t19537;
  t19556 = t19543 + t19552;
  t19560 = t13110*t19510;
  t19561 = -1.*t13432*t19537;
  t19564 = t19560 + t19561;
  t19722 = t5293*t16871;
  t19737 = t5041*t18339;
  t19755 = t19722 + t19737;
  t19846 = -1.*t9782*t19755;
  t19853 = t19846 + t19467;
  t19855 = -1.*t8854*t19755;
  t19869 = t19855 + t19495;
  t19888 = -1.*t11214*t19853;
  t19904 = t10413*t19869;
  t19905 = t19888 + t19904;
  t19916 = t10413*t19853;
  t19917 = t11214*t19869;
  t19922 = t19916 + t19917;
  t19944 = t13432*t19905;
  t19945 = t13110*t19922;
  t19946 = t19944 + t19945;
  t19960 = t13110*t19905;
  t19962 = -1.*t13432*t19922;
  t19963 = t19960 + t19962;
  t20211 = t8854*t19755;
  t20231 = t9782*t19454;
  t20234 = t20211 + t20231;
  t20262 = -1.*t10413*t20234;
  t20263 = t19888 + t20262;
  t20279 = -1.*t11214*t20234;
  t20280 = t19916 + t20279;
  t20283 = t13432*t20263;
  t20284 = t13110*t20280;
  t20288 = t20283 + t20284;
  t20311 = t13110*t20263;
  t20313 = -1.*t13432*t20280;
  t20320 = t20311 + t20313;
  t20619 = t11214*t19853;
  t20631 = t10413*t20234;
  t20644 = t20619 + t20631;
  t20735 = -1.*t13432*t20644;
  t20740 = t20735 + t20284;
  t20785 = -1.*t13110*t20644;
  t20795 = t20785 + t20313;
  t20800 = -1.*t13986*t20740;
  t20910 = t13110*t20644;
  t20922 = t13432*t20280;
  t20929 = t20910 + t20922;
  t20831 = t13935*t20740;
  t21066 = Cos(var1[3]);
  t21078 = Sin(var1[3]);
  t21106 = -1.*t446*t21078;
  t21107 = -1.*t21066*t1248*t1559;
  t21117 = t21106 + t21107;
  t21138 = -1.*t21066*t170*t297;
  t21151 = t1266*t21117;
  t21161 = t21138 + t21151;
  t21269 = -1.*t1266*t21066*t170;
  t21296 = -1.*t297*t21117;
  t21307 = t21269 + t21296;
  t21077 = t21066*t446*t1248;
  t21093 = -1.*t21078*t1559;
  t21096 = t21077 + t21093;
  t21400 = t2153*t21161;
  t21448 = t4600*t21307;
  t21463 = t21400 + t21448;
  t21323 = -1.*t4600*t21161;
  t21369 = t2153*t21307;
  t21379 = t21323 + t21369;
  t21541 = t457*t21096;
  t21548 = -1.*t996*t21463;
  t21556 = t21541 + t21548;
  t21565 = t5293*t21379;
  t21579 = t5041*t21556;
  t21586 = t21565 + t21579;
  t21599 = t5041*t21379;
  t21614 = -1.*t5293*t21556;
  t21615 = t21599 + t21614;
  t21635 = -1.*t9782*t21586;
  t21642 = t8854*t21615;
  t21646 = t21635 + t21642;
  t21657 = t8854*t21586;
  t21685 = t9782*t21615;
  t21700 = t21657 + t21685;
  t21726 = t11214*t21646;
  t21757 = t10413*t21700;
  t21773 = t21726 + t21757;
  t21780 = t10413*t21646;
  t21784 = -1.*t11214*t21700;
  t21787 = t21780 + t21784;
  t21798 = -1.*t13432*t21773;
  t21800 = t13110*t21787;
  t21807 = t21798 + t21800;
  t21809 = t13110*t21773;
  t21814 = t13432*t21787;
  t21816 = t21809 + t21814;
  t22254 = t297*t21078*t1248;
  t22255 = -1.*t1266*t170*t21078*t1559;
  t22305 = t22254 + t22255;
  t22351 = t1266*t21078*t1248;
  t22406 = t170*t297*t21078*t1559;
  t22437 = t22351 + t22406;
  t22493 = t2153*t22305;
  t22497 = t4600*t22437;
  t22512 = t22493 + t22497;
  t22462 = -1.*t4600*t22305;
  t22466 = t2153*t22437;
  t22468 = t22462 + t22466;
  t22601 = t457*t170*t446*t21078;
  t22609 = -1.*t996*t22512;
  t22614 = t22601 + t22609;
  t22700 = t5293*t22468;
  t22724 = t5041*t22614;
  t22726 = t22700 + t22724;
  t22737 = t5041*t22468;
  t22748 = -1.*t5293*t22614;
  t22771 = t22737 + t22748;
  t22822 = -1.*t9782*t22726;
  t22824 = t8854*t22771;
  t22825 = t22822 + t22824;
  t22833 = t8854*t22726;
  t22837 = t9782*t22771;
  t22840 = t22833 + t22837;
  t22899 = t11214*t22825;
  t22942 = t10413*t22840;
  t22963 = t22899 + t22942;
  t23007 = t10413*t22825;
  t23024 = -1.*t11214*t22840;
  t23034 = t23007 + t23024;
  t23038 = -1.*t13432*t22963;
  t23047 = t13110*t23034;
  t23051 = t23038 + t23047;
  t23063 = t13110*t22963;
  t23439 = t13432*t23034;
  t23485 = t23063 + t23439;
  t23721 = -1.*t446*t21078*t1248;
  t23742 = -1.*t21066*t1559;
  t23748 = t23721 + t23742;
  t23841 = t21066*t446;
  t23858 = -1.*t21078*t1248*t1559;
  t23879 = t23841 + t23858;
  t23989 = t1266*t2153*t23748;
  t23991 = -1.*t297*t4600*t23748;
  t24022 = t23989 + t23991;
  t23957 = -1.*t2153*t297*t23748;
  t23962 = -1.*t1266*t4600*t23748;
  t23970 = t23957 + t23962;
  t24072 = t457*t23879;
  t24145 = -1.*t996*t24022;
  t24148 = t24072 + t24145;
  t24196 = t5293*t23970;
  t24206 = t5041*t24148;
  t24210 = t24196 + t24206;
  t24273 = t5041*t23970;
  t24276 = -1.*t5293*t24148;
  t24279 = t24273 + t24276;
  t24282 = -1.*t9782*t24210;
  t24294 = t8854*t24279;
  t24295 = t24282 + t24294;
  t24324 = t8854*t24210;
  t24325 = t9782*t24279;
  t24326 = t24324 + t24325;
  t24358 = t11214*t24295;
  t24375 = t10413*t24326;
  t24385 = t24358 + t24375;
  t24445 = t10413*t24295;
  t24626 = -1.*t11214*t24326;
  t24639 = t24445 + t24626;
  t24644 = -1.*t13432*t24385;
  t24647 = t13110*t24639;
  t24649 = t24644 + t24647;
  t24662 = t13110*t24385;
  t24663 = t13432*t24639;
  t24665 = t24662 + t24663;
  t24708 = t170*t297*t21078;
  t24710 = -1.*t1266*t23879;
  t24714 = t24708 + t24710;
  t24716 = -1.*t1266*t170*t21078;
  t24720 = -1.*t297*t23879;
  t24721 = t24716 + t24720;
  t24724 = t4600*t24714;
  t24733 = t2153*t24721;
  t24736 = t24724 + t24733;
  t24795 = t2153*t24714;
  t24808 = -1.*t4600*t24721;
  t24811 = t24795 + t24808;
  t24819 = t996*t5293*t24736;
  t24832 = t5041*t24811;
  t24836 = t24819 + t24832;
  t24847 = -1.*t5041*t996*t24736;
  t24887 = t5293*t24811;
  t24889 = t24847 + t24887;
  t24971 = t9782*t24836;
  t24973 = t8854*t24889;
  t24980 = t24971 + t24973;
  t24987 = t8854*t24836;
  t24989 = -1.*t9782*t24889;
  t24992 = t24987 + t24989;
  t25005 = -1.*t11214*t24980;
  t25028 = t10413*t24992;
  t25414 = t25005 + t25028;
  t25484 = t10413*t24980;
  t25485 = t11214*t24992;
  t25561 = t25484 + t25485;
  t25572 = t13432*t25414;
  t25575 = t13110*t25561;
  t25582 = t25572 + t25575;
  t25608 = t13110*t25414;
  t25612 = -1.*t13432*t25561;
  t25613 = t25608 + t25612;
  t25677 = -1.*t170*t297*t21078;
  t25689 = t1266*t23879;
  t25690 = t25677 + t25689;
  t25707 = -1.*t4600*t25690;
  t25710 = t25707 + t24733;
  t25734 = -1.*t2153*t25690;
  t25743 = t25734 + t24808;
  t25774 = t996*t5293*t25710;
  t25784 = t5041*t25743;
  t25800 = t25774 + t25784;
  t25808 = -1.*t5041*t996*t25710;
  t25810 = t5293*t25743;
  t25813 = t25808 + t25810;
  t25817 = t9782*t25800;
  t25833 = t8854*t25813;
  t25846 = t25817 + t25833;
  t25849 = t8854*t25800;
  t25854 = -1.*t9782*t25813;
  t25855 = t25849 + t25854;
  t25869 = -1.*t11214*t25846;
  t25875 = t10413*t25855;
  t25877 = t25869 + t25875;
  t25879 = t10413*t25846;
  t25887 = t11214*t25855;
  t25889 = t25879 + t25887;
  t25893 = t13432*t25877;
  t25900 = t13110*t25889;
  t25944 = t25893 + t25900;
  t25994 = t13110*t25877;
  t26007 = -1.*t13432*t25889;
  t26127 = t25994 + t26007;
  t17840 = 0.135*t457;
  t17841 = t17840 + t6129;
  t17845 = -0.049*t457;
  t17850 = -0.135*t996;
  t17851 = t17845 + t17850;
  t26175 = t446*t21078*t1248;
  t26176 = t21066*t1559;
  t26177 = t26175 + t26176;
  t26183 = t2153*t25690;
  t26184 = t4600*t24721;
  t26185 = t26183 + t26184;
  t26188 = -1.*t996*t26177;
  t26193 = -1.*t457*t26185;
  t26194 = t26188 + t26193;
  t26210 = -1.*t8854*t5293*t26194;
  t26216 = -1.*t5041*t9782*t26194;
  t26217 = t26210 + t26216;
  t26221 = t5041*t8854*t26194;
  t26224 = -1.*t5293*t9782*t26194;
  t26225 = t26221 + t26224;
  t26227 = t11214*t26217;
  t26228 = t10413*t26225;
  t26229 = t26227 + t26228;
  t26238 = t10413*t26217;
  t26239 = -1.*t11214*t26225;
  t26241 = t26238 + t26239;
  t26258 = -1.*t13432*t26229;
  t26260 = t13110*t26241;
  t26261 = t26258 + t26260;
  t26266 = t13110*t26229;
  t26267 = t13432*t26241;
  t26268 = t26266 + t26267;
  t19305 = 0.049*t5041;
  t19308 = t19305 + t7252;
  t19311 = -0.09*t5041;
  t19317 = -0.049*t5293;
  t19350 = t19311 + t19317;
  t26204 = t457*t26177;
  t26206 = -1.*t996*t26185;
  t26208 = t26204 + t26206;
  t26428 = -1.*t5293*t25710;
  t26429 = -1.*t5041*t26208;
  t26430 = t26428 + t26429;
  t26500 = t5041*t25710;
  t26540 = -1.*t5293*t26208;
  t26542 = t26500 + t26540;
  t26562 = t9782*t26430;
  t26585 = t8854*t26542;
  t26587 = t26562 + t26585;
  t26590 = t8854*t26430;
  t26604 = -1.*t9782*t26542;
  t26605 = t26590 + t26604;
  t26610 = -1.*t11214*t26587;
  t26612 = t10413*t26605;
  t26613 = t26610 + t26612;
  t26617 = t10413*t26587;
  t26631 = t11214*t26605;
  t26637 = t26617 + t26631;
  t26647 = t13432*t26613;
  t26649 = t13110*t26637;
  t26656 = t26647 + t26649;
  t26661 = t13110*t26613;
  t26666 = -1.*t13432*t26637;
  t26667 = t26661 + t26666;
  t19662 = -0.21*t8854;
  t19714 = -0.049*t9782;
  t19718 = t19662 + t19714;
  t19797 = 0.049*t8854;
  t19808 = t19797 + t9845;
  t26718 = t5293*t25710;
  t26720 = t5041*t26208;
  t26723 = t26718 + t26720;
  t26728 = -1.*t9782*t26723;
  t26734 = t26728 + t26585;
  t26743 = -1.*t8854*t26723;
  t26744 = t26743 + t26604;
  t26747 = -1.*t11214*t26734;
  t26748 = t10413*t26744;
  t26758 = t26747 + t26748;
  t26760 = t10413*t26734;
  t26761 = t11214*t26744;
  t26763 = t26760 + t26761;
  t26771 = t13432*t26758;
  t26775 = t13110*t26763;
  t26780 = t26771 + t26775;
  t26788 = t13110*t26758;
  t26791 = -1.*t13432*t26763;
  t26792 = t26788 + t26791;
  t20101 = 0.0016*t10413;
  t20110 = t20101 + t12409;
  t20125 = -0.2707*t10413;
  t20170 = -0.0016*t11214;
  t20188 = t20125 + t20170;
  t26844 = t8854*t26723;
  t26861 = t9782*t26542;
  t26862 = t26844 + t26861;
  t26866 = -1.*t10413*t26862;
  t26880 = t26747 + t26866;
  t26884 = -1.*t11214*t26862;
  t26895 = t26760 + t26884;
  t26899 = t13432*t26880;
  t26900 = t13110*t26895;
  t26903 = t26899 + t26900;
  t26905 = t13110*t26880;
  t26907 = -1.*t13432*t26895;
  t26912 = t26905 + t26907;
  t20604 = -0.7055*t13110;
  t20614 = 0.0184*t13432;
  t20618 = t20604 + t20614;
  t20671 = -0.0184*t13110;
  t20705 = t20671 + t13466;
  t26969 = t11214*t26734;
  t26970 = t10413*t26862;
  t26972 = t26969 + t26970;
  t27003 = -1.*t13432*t26972;
  t27023 = t27003 + t26900;
  t27026 = -1.*t13110*t26972;
  t27027 = t27026 + t26907;
  t20861 = 0.0216*t13935;
  t20878 = t20861 + t14149;
  t20888 = -1.1135*t13935;
  t20897 = -0.0216*t13986;
  t20898 = t20888 + t20897;
  t27038 = -1.*t13986*t27023;
  t27095 = t13110*t26972;
  t27097 = t13432*t26895;
  t27099 = t27095 + t27097;
  t27053 = t13935*t27023;
  t27124 = -1.*t13986*t27099;
  t27126 = t27053 + t27124;
  t27263 = -1.*t21066*t297*t1248;
  t27265 = t1266*t21066*t170*t1559;
  t27266 = t27263 + t27265;
  t27274 = -1.*t1266*t21066*t1248;
  t27287 = -1.*t21066*t170*t297*t1559;
  t27288 = t27274 + t27287;
  t27312 = t2153*t27266;
  t27313 = t4600*t27288;
  t27315 = t27312 + t27313;
  t27295 = -1.*t4600*t27266;
  t27301 = t2153*t27288;
  t27305 = t27295 + t27301;
  t27331 = -1.*t457*t21066*t170*t446;
  t27337 = -1.*t996*t27315;
  t27350 = t27331 + t27337;
  t27354 = t5293*t27305;
  t27357 = t5041*t27350;
  t27361 = t27354 + t27357;
  t27376 = t5041*t27305;
  t27384 = -1.*t5293*t27350;
  t27385 = t27376 + t27384;
  t27388 = -1.*t9782*t27361;
  t27389 = t8854*t27385;
  t27390 = t27388 + t27389;
  t27393 = t8854*t27361;
  t27394 = t9782*t27385;
  t27396 = t27393 + t27394;
  t27398 = t11214*t27390;
  t27400 = t10413*t27396;
  t27401 = t27398 + t27400;
  t27407 = t10413*t27390;
  t27408 = -1.*t11214*t27396;
  t27410 = t27407 + t27408;
  t27427 = -1.*t13432*t27401;
  t27436 = t13110*t27410;
  t27439 = t27427 + t27436;
  t27463 = t13110*t27401;
  t27470 = t13432*t27410;
  t27471 = t27463 + t27470;
  t27535 = t446*t21078;
  t27537 = t21066*t1248*t1559;
  t27540 = t27535 + t27537;
  t27562 = t1266*t2153*t21096;
  t27594 = -1.*t297*t4600*t21096;
  t27595 = t27562 + t27594;
  t27548 = -1.*t2153*t297*t21096;
  t27549 = -1.*t1266*t4600*t21096;
  t27551 = t27548 + t27549;
  t27611 = t457*t27540;
  t27613 = -1.*t996*t27595;
  t27617 = t27611 + t27613;
  t27638 = t5293*t27551;
  t27642 = t5041*t27617;
  t27643 = t27638 + t27642;
  t27648 = t5041*t27551;
  t27659 = -1.*t5293*t27617;
  t27661 = t27648 + t27659;
  t27670 = -1.*t9782*t27643;
  t27676 = t8854*t27661;
  t27681 = t27670 + t27676;
  t27687 = t8854*t27643;
  t27688 = t9782*t27661;
  t27696 = t27687 + t27688;
  t27699 = t11214*t27681;
  t27711 = t10413*t27696;
  t27714 = t27699 + t27711;
  t27722 = t10413*t27681;
  t27724 = -1.*t11214*t27696;
  t27730 = t27722 + t27724;
  t27737 = -1.*t13432*t27714;
  t27740 = t13110*t27730;
  t27742 = t27737 + t27740;
  t27746 = t13110*t27714;
  t27747 = t13432*t27730;
  t27749 = t27746 + t27747;
  t27805 = -1.*t1266*t27540;
  t27810 = t21138 + t27805;
  t27815 = t1266*t21066*t170;
  t27817 = -1.*t297*t27540;
  t27824 = t27815 + t27817;
  t27827 = t4600*t27810;
  t27829 = t2153*t27824;
  t27832 = t27827 + t27829;
  t27852 = t2153*t27810;
  t27856 = -1.*t4600*t27824;
  t27865 = t27852 + t27856;
  t27867 = t996*t5293*t27832;
  t27870 = t5041*t27865;
  t27871 = t27867 + t27870;
  t27873 = -1.*t5041*t996*t27832;
  t27882 = t5293*t27865;
  t27899 = t27873 + t27882;
  t27903 = t9782*t27871;
  t27908 = t8854*t27899;
  t27913 = t27903 + t27908;
  t27922 = t8854*t27871;
  t27925 = -1.*t9782*t27899;
  t27928 = t27922 + t27925;
  t27939 = -1.*t11214*t27913;
  t27941 = t10413*t27928;
  t27943 = t27939 + t27941;
  t27951 = t10413*t27913;
  t27954 = t11214*t27928;
  t27964 = t27951 + t27954;
  t27968 = t13432*t27943;
  t27969 = t13110*t27964;
  t27971 = t27968 + t27969;
  t27979 = t13110*t27943;
  t27980 = -1.*t13432*t27964;
  t27981 = t27979 + t27980;
  t28015 = t21066*t170*t297;
  t28038 = t1266*t27540;
  t28039 = t28015 + t28038;
  t28047 = -1.*t4600*t28039;
  t28048 = t28047 + t27829;
  t28072 = -1.*t2153*t28039;
  t28086 = t28072 + t27856;
  t28096 = t996*t5293*t28048;
  t28100 = t5041*t28086;
  t28103 = t28096 + t28100;
  t28111 = -1.*t5041*t996*t28048;
  t28113 = t5293*t28086;
  t28114 = t28111 + t28113;
  t28116 = t9782*t28103;
  t28119 = t8854*t28114;
  t28126 = t28116 + t28119;
  t28134 = t8854*t28103;
  t28143 = -1.*t9782*t28114;
  t28155 = t28134 + t28143;
  t28168 = -1.*t11214*t28126;
  t28170 = t10413*t28155;
  t28180 = t28168 + t28170;
  t28187 = t10413*t28126;
  t28188 = t11214*t28155;
  t28211 = t28187 + t28188;
  t28218 = t13432*t28180;
  t28222 = t13110*t28211;
  t28225 = t28218 + t28222;
  t28238 = t13110*t28180;
  t28240 = -1.*t13432*t28211;
  t28242 = t28238 + t28240;
  t28314 = -1.*t21066*t446*t1248;
  t28337 = t21078*t1559;
  t28341 = t28314 + t28337;
  t28344 = t2153*t28039;
  t28351 = t4600*t27824;
  t28362 = t28344 + t28351;
  t28369 = -1.*t996*t28341;
  t28371 = -1.*t457*t28362;
  t28400 = t28369 + t28371;
  t28463 = -1.*t8854*t5293*t28400;
  t28473 = -1.*t5041*t9782*t28400;
  t28476 = t28463 + t28473;
  t28487 = t5041*t8854*t28400;
  t28492 = -1.*t5293*t9782*t28400;
  t28495 = t28487 + t28492;
  t28505 = t11214*t28476;
  t28509 = t10413*t28495;
  t28510 = t28505 + t28509;
  t28525 = t10413*t28476;
  t28526 = -1.*t11214*t28495;
  t28529 = t28525 + t28526;
  t28535 = -1.*t13432*t28510;
  t28536 = t13110*t28529;
  t28544 = t28535 + t28536;
  t28556 = t13110*t28510;
  t28561 = t13432*t28529;
  t28567 = t28556 + t28561;
  t28433 = t457*t28341;
  t28447 = -1.*t996*t28362;
  t28449 = t28433 + t28447;
  t28624 = -1.*t5293*t28048;
  t28634 = -1.*t5041*t28449;
  t28685 = t28624 + t28634;
  t28732 = t5041*t28048;
  t28733 = -1.*t5293*t28449;
  t28734 = t28732 + t28733;
  t28739 = t9782*t28685;
  t28742 = t8854*t28734;
  t28746 = t28739 + t28742;
  t28762 = t8854*t28685;
  t28766 = -1.*t9782*t28734;
  t28767 = t28762 + t28766;
  t28773 = -1.*t11214*t28746;
  t28785 = t10413*t28767;
  t28793 = t28773 + t28785;
  t28798 = t10413*t28746;
  t28800 = t11214*t28767;
  t28818 = t28798 + t28800;
  t28824 = t13432*t28793;
  t28825 = t13110*t28818;
  t28828 = t28824 + t28825;
  t28885 = t13110*t28793;
  t28890 = -1.*t13432*t28818;
  t28892 = t28885 + t28890;
  t28948 = t5293*t28048;
  t28949 = t5041*t28449;
  t28952 = t28948 + t28949;
  t28959 = -1.*t9782*t28952;
  t28960 = t28959 + t28742;
  t28968 = -1.*t8854*t28952;
  t28973 = t28968 + t28766;
  t28985 = -1.*t11214*t28960;
  t28990 = t10413*t28973;
  t28995 = t28985 + t28990;
  t29028 = t10413*t28960;
  t29036 = t11214*t28973;
  t29037 = t29028 + t29036;
  t29043 = t13432*t28995;
  t29052 = t13110*t29037;
  t29053 = t29043 + t29052;
  t29062 = t13110*t28995;
  t29063 = -1.*t13432*t29037;
  t29064 = t29062 + t29063;
  t29106 = t8854*t28952;
  t29112 = t9782*t28734;
  t29114 = t29106 + t29112;
  t29122 = -1.*t10413*t29114;
  t29124 = t28985 + t29122;
  t29138 = -1.*t11214*t29114;
  t29145 = t29028 + t29138;
  t29153 = t13432*t29124;
  t29158 = t13110*t29145;
  t29166 = t29153 + t29158;
  t29186 = t13110*t29124;
  t29190 = -1.*t13432*t29145;
  t29200 = t29186 + t29190;
  t29279 = t11214*t28960;
  t29281 = t10413*t29114;
  t29282 = t29279 + t29281;
  t29290 = -1.*t13432*t29282;
  t29322 = t29290 + t29158;
  t29329 = -1.*t13110*t29282;
  t29330 = t29329 + t29190;
  t29336 = -1.*t13986*t29322;
  t29395 = t13110*t29282;
  t29405 = t13432*t29145;
  t29414 = t29395 + t29405;
  t29369 = t13935*t29322;
  t29442 = -1.*t13986*t29414;
  t29444 = t29369 + t29442;
  t27226 = t13986*t27023;
  t27232 = t13935*t27099;
  t27241 = t27226 + t27232;
  t29454 = t13986*t29322;
  t29458 = t13935*t29414;
  t29466 = t29454 + t29458;
  t29527 = -0.766044*t29466;
  t29530 = 0.642788*t29444;
  t29531 = t29527 + t29530;
  t29546 = Power(t29531,2);
  t29548 = 0.642788*t29466;
  t29551 = 0.766044*t29444;
  t29555 = t29548 + t29551;
  t29557 = Power(t29555,2);
  t29560 = t29546 + t29557;
  t29566 = 1/t29560;
  t27495 = t13986*t27439;
  t27497 = t13935*t27471;
  t27498 = t27495 + t27497;
  t27507 = t13935*t27439;
  t27510 = -1.*t13986*t27471;
  t27511 = t27507 + t27510;
  t29468 = -0.642788*t29466;
  t29469 = -0.766044*t29444;
  t29475 = t29468 + t29469;
  t27757 = t13986*t27742;
  t27762 = t13935*t27749;
  t27764 = t27757 + t27762;
  t27769 = t13935*t27742;
  t27770 = -1.*t13986*t27749;
  t27775 = t27769 + t27770;
  t27988 = -1.*t13986*t27971;
  t27989 = t13935*t27981;
  t27991 = t27988 + t27989;
  t27994 = t13935*t27971;
  t28000 = t13986*t27981;
  t28006 = t27994 + t28000;
  t28247 = -1.*t13986*t28225;
  t28254 = t13935*t28242;
  t28267 = t28247 + t28254;
  t28285 = t13935*t28225;
  t28292 = t13986*t28242;
  t28295 = t28285 + t28292;
  t28579 = t13986*t28544;
  t28582 = t13935*t28567;
  t28591 = t28579 + t28582;
  t28598 = t13935*t28544;
  t28602 = -1.*t13986*t28567;
  t28605 = t28598 + t28602;
  t28895 = -1.*t13986*t28828;
  t28898 = t13935*t28892;
  t28900 = t28895 + t28898;
  t28905 = t13935*t28828;
  t28906 = t13986*t28892;
  t28931 = t28905 + t28906;
  t29067 = -1.*t13986*t29053;
  t29076 = t13935*t29064;
  t29078 = t29067 + t29076;
  t29085 = t13935*t29053;
  t29086 = t13986*t29064;
  t29088 = t29085 + t29086;
  t29205 = -1.*t13986*t29166;
  t29207 = t13935*t29200;
  t29209 = t29205 + t29207;
  t29219 = t13935*t29166;
  t29225 = t13986*t29200;
  t29232 = t29219 + t29225;
  t29341 = t13935*t29330;
  t29342 = t29336 + t29341;
  t29377 = t13986*t29330;
  t29384 = t29369 + t29377;
  t29428 = -1.*t13935*t29414;
  t29429 = t29336 + t29428;
  t30369 = Power(t17983,2);
  t30375 = Power(t26194,2);
  t30381 = t30369 + t30375;
  t30393 = 1/t30381;
  t27156 = t996*t26177;
  t27157 = t457*t26185;
  t27158 = t27156 + t27157;
  p_output1[0]=1.;
  p_output1[1]=t10013*t10028 + t10147*t10207 + t11631*t12107 + t12636*t12973 + t13570*t13839 + t13901*t13914 + t14007*t14101 + t14150*t14217 + 0.0306*(t13986*t14101 + t13935*t14217) - 1.1312*(t13935*t14101 - 1.*t13986*t14217) - 0.135*t1248*t1359*t1559 + 0.135*t170*t297 - 0.135*t2182*t3532 - 1.*t1247*t1248*t446 + 0.135*t4600*t4911 + t5316*t5519 + t6287*t6603 + t7423*t8582 - 0.1305*(t457*t6603 - 1.*t1248*t446*t996);
  p_output1[2]=t10013*t15128 + t10147*t15172 + t11631*t15278 + t12636*t15411 + t13570*t15595 + t13901*t15641 + t14007*t15781 + t14150*t15939 + 0.0306*(t13986*t15781 + t13935*t15939) - 1.1312*(t13935*t15781 - 1.*t13986*t15939) - 1.*t1247*t1559*t170 + 0.135*t1359*t170*t446 + 0.135*t1266*t170*t2182*t446 + 0.135*t170*t297*t446*t4600 + t14722*t5316 + t14653*t6287 + t14918*t7423 - 0.1305*(t14653*t457 - 1.*t1559*t170*t996);
  p_output1[3]=0.135*t1248*t1266 + t10147*t16319 + t10013*t16340 + t12636*t16357 + t11631*t16455 + t13901*t16487 + t13570*t16504 + t14150*t16569 + t14007*t16689 - 1.1312*(-1.*t13986*t16569 + t13935*t16689) + 0.0306*(t13935*t16569 + t13986*t16689) - 0.135*t16242*t2182 + 0.135*t1559*t170*t297 - 0.1305*t16263*t457 + 0.135*t16205*t4600 + t16299*t5316 + t16263*t6287 - 1.*t16263*t7423*t996;
  p_output1[4]=t10147*t16986 + t10013*t17020 + t12636*t17038 + t11631*t17083 + t13901*t17165 + t13570*t17249 + t14150*t17372 + t14007*t17521 - 1.1312*(-1.*t13986*t17372 + t13935*t17521) + 0.0306*(t13935*t17372 + t13986*t17521) + 0.135*t16242*t2153 - 0.1305*t16871*t457 - 0.135*t16797*t4600 + t16927*t5316 + t16871*t6287 - 1.*t16871*t7423*t996;
  p_output1[5]=t17851*t17930 - 0.1305*t18339 + t11631*t18388 + t12636*t18476 + t13570*t18546 + t13901*t19124 + t14007*t19179 + t14150*t19214 + 0.0306*(t13986*t19179 + t13935*t19214) - 1.1312*(t13935*t19179 - 1.*t13986*t19214) + t170*t17841*t446 + t10013*t17983*t5041 - 1.*t10147*t17983*t5293 + t17983*t7423;
  p_output1[6]=t16871*t19308 + t18339*t19350 + t10147*t19390 + t10013*t19454 + t12636*t19468 + t11631*t19497 + t13901*t19510 + t13570*t19537 + t14150*t19556 + t14007*t19564 - 1.1312*(-1.*t13986*t19556 + t13935*t19564) + 0.0306*(t13935*t19556 + t13986*t19564);
  p_output1[7]=t19718*t19755 + t19454*t19808 + t12636*t19853 + t11631*t19869 + t13901*t19905 + t13570*t19922 + t14150*t19946 + t14007*t19963 - 1.1312*(-1.*t13986*t19946 + t13935*t19963) + 0.0306*(t13935*t19946 + t13986*t19963);
  p_output1[8]=t19853*t20110 + t20188*t20234 + t13901*t20263 + t13570*t20280 + t14150*t20288 + t14007*t20320 - 1.1312*(-1.*t13986*t20288 + t13935*t20320) + 0.0306*(t13935*t20288 + t13986*t20320);
  p_output1[9]=t20618*t20644 + t20280*t20705 + t14150*t20740 + t14007*t20795 - 1.1312*(t13935*t20795 + t20800) + 0.0306*(t13986*t20795 + t20831);
  p_output1[10]=t20740*t20878 + t20898*t20929 - 1.1312*(t20800 - 1.*t13935*t20929) + 0.0306*(t20831 - 1.*t13986*t20929);
  p_output1[11]=-1.;
  p_output1[12]=1.;
  p_output1[13]=t1247*t21096 - 0.135*t1359*t21117 + t10013*t21586 + t10147*t21615 + t11631*t21646 + t12636*t21700 + t13570*t21773 + t13901*t21787 + t14007*t21807 + t14150*t21816 + 0.0306*(t13986*t21807 + t13935*t21816) - 1.1312*(t13935*t21807 - 1.*t13986*t21816) - 0.135*t21161*t2182 - 0.135*t170*t21066*t297 + 0.135*t21307*t4600 + t21379*t5316 + t21463*t6287 + t21556*t7423 - 0.1305*(t21463*t457 + t21096*t996);
  p_output1[14]=0.135*t1359*t1559*t170*t21078 - 0.135*t2182*t22305 + t10013*t22726 + t10147*t22771 + t11631*t22825 + t12636*t22840 + t13570*t22963 + t13901*t23034 + t14007*t23051 + t14150*t23485 + 0.0306*(t13986*t23051 + t13935*t23485) - 1.1312*(t13935*t23051 - 1.*t13986*t23485) + 0.135*t1248*t21078*t297 + t1247*t170*t21078*t446 + 0.135*t22437*t4600 + t22468*t5316 + t22512*t6287 + t22614*t7423 - 0.1305*(t22512*t457 + t170*t21078*t446*t996);
  p_output1[15]=-0.135*t1359*t23748 - 0.135*t1266*t2182*t23748 + t1247*t23879 + t10013*t24210 + t10147*t24279 + t11631*t24295 + t12636*t24326 + t13570*t24385 + t13901*t24639 + t14007*t24649 + t14150*t24665 + 0.0306*(t13986*t24649 + t13935*t24665) - 1.1312*(t13935*t24649 - 1.*t13986*t24665) - 0.135*t23748*t297*t4600 + t23970*t5316 + t24022*t6287 + t24148*t7423 - 0.1305*(t24022*t457 + t23879*t996);
  p_output1[16]=-0.135*t1266*t170*t21078 - 0.135*t2182*t24721 + t10147*t24836 + t10013*t24889 + t12636*t24980 + t11631*t24992 + t13901*t25414 + t13570*t25561 + t14150*t25582 + t14007*t25613 - 1.1312*(-1.*t13986*t25582 + t13935*t25613) + 0.0306*(t13935*t25582 + t13986*t25613) - 0.135*t23879*t297 - 0.1305*t24736*t457 + 0.135*t24714*t4600 + t24811*t5316 + t24736*t6287 - 1.*t24736*t7423*t996;
  p_output1[17]=0.135*t2153*t24721 + t10147*t25800 + t10013*t25813 + t12636*t25846 + t11631*t25855 + t13901*t25877 + t13570*t25889 + t14150*t25944 + t14007*t26127 - 1.1312*(-1.*t13986*t25944 + t13935*t26127) + 0.0306*(t13935*t25944 + t13986*t26127) - 0.1305*t25710*t457 - 0.135*t25690*t4600 + t25743*t5316 + t25710*t6287 - 1.*t25710*t7423*t996;
  p_output1[18]=t17841*t26177 + t17851*t26185 - 0.1305*t26208 + t11631*t26217 + t12636*t26225 + t13570*t26229 + t13901*t26241 + t14007*t26261 + t14150*t26268 + 0.0306*(t13986*t26261 + t13935*t26268) - 1.1312*(t13935*t26261 - 1.*t13986*t26268) + t10013*t26194*t5041 - 1.*t10147*t26194*t5293 + t26194*t7423;
  p_output1[19]=t19308*t25710 + t19350*t26208 + t10147*t26430 + t10013*t26542 + t12636*t26587 + t11631*t26605 + t13901*t26613 + t13570*t26637 + t14150*t26656 + t14007*t26667 - 1.1312*(-1.*t13986*t26656 + t13935*t26667) + 0.0306*(t13935*t26656 + t13986*t26667);
  p_output1[20]=t19808*t26542 + t19718*t26723 + t12636*t26734 + t11631*t26744 + t13901*t26758 + t13570*t26763 + t14150*t26780 + t14007*t26792 - 1.1312*(-1.*t13986*t26780 + t13935*t26792) + 0.0306*(t13935*t26780 + t13986*t26792);
  p_output1[21]=t20110*t26734 + t20188*t26862 + t13901*t26880 + t13570*t26895 + t14150*t26903 + t14007*t26912 - 1.1312*(-1.*t13986*t26903 + t13935*t26912) + 0.0306*(t13935*t26903 + t13986*t26912);
  p_output1[22]=t20705*t26895 + t20618*t26972 + t14150*t27023 + t14007*t27027 - 1.1312*(t13935*t27027 + t27038) + 0.0306*(t13986*t27027 + t27053);
  p_output1[23]=t20878*t27023 + t20898*t27099 - 1.1312*(t27038 - 1.*t13935*t27099) + 0.0306*t27126;
  p_output1[24]=-1.;
  p_output1[25]=1.;
  p_output1[26]=-0.135*t1359*t23879 - 0.135*t2182*t25690 + t1247*t26177 + t10147*t26542 + t10013*t26723 + t11631*t26734 + t12636*t26862 + t13901*t26895 + t13570*t26972 + t14007*t27023 + t14150*t27099 - 1.1312*t27126 - 0.1305*t27158 + 0.0306*t27241 - 0.135*t170*t21078*t297 + 0.135*t24721*t4600 + t25710*t5316 + t26185*t6287 + t26208*t7423;
  p_output1[27]=-0.135*t1359*t1559*t170*t21066 - 0.135*t2182*t27266 + t10013*t27361 + t10147*t27385 + t11631*t27390 + t12636*t27396 + t13570*t27401 + t13901*t27410 + t14007*t27439 + t14150*t27471 + 0.0306*t27498 - 1.1312*t27511 - 0.135*t1248*t21066*t297 - 1.*t1247*t170*t21066*t446 + 0.135*t27288*t4600 + t27305*t5316 + t27315*t6287 + t27350*t7423 - 0.1305*(t27315*t457 - 1.*t170*t21066*t446*t996);
  p_output1[28]=-0.135*t1359*t21096 - 0.135*t1266*t21096*t2182 + t1247*t27540 + t10013*t27643 + t10147*t27661 + t11631*t27681 + t12636*t27696 + t13570*t27714 + t13901*t27730 + t14007*t27742 + t14150*t27749 + 0.0306*t27764 - 1.1312*t27775 - 0.135*t21096*t297*t4600 + t27551*t5316 + t27595*t6287 + t27617*t7423 - 0.1305*(t27595*t457 + t27540*t996);
  p_output1[29]=0.135*t1266*t170*t21066 - 0.135*t2182*t27824 + t10147*t27871 + t10013*t27899 + t12636*t27913 + t11631*t27928 + t13901*t27943 + t13570*t27964 + t14150*t27971 + t14007*t27981 - 1.1312*t27991 + 0.0306*t28006 - 0.135*t27540*t297 - 0.1305*t27832*t457 + 0.135*t27810*t4600 + t27865*t5316 + t27832*t6287 - 1.*t27832*t7423*t996;
  p_output1[30]=0.135*t2153*t27824 + t10147*t28103 + t10013*t28114 + t12636*t28126 + t11631*t28155 + t13901*t28180 + t13570*t28211 + t14150*t28225 + t14007*t28242 - 1.1312*t28267 + 0.0306*t28295 - 0.1305*t28048*t457 - 0.135*t28039*t4600 + t28086*t5316 + t28048*t6287 - 1.*t28048*t7423*t996;
  p_output1[31]=t17841*t28341 + t17851*t28362 - 0.1305*t28449 + t11631*t28476 + t12636*t28495 + t13570*t28510 + t13901*t28529 + t14007*t28544 + t14150*t28567 + 0.0306*t28591 - 1.1312*t28605 + t10013*t28400*t5041 - 1.*t10147*t28400*t5293 + t28400*t7423;
  p_output1[32]=t19308*t28048 + t19350*t28449 + t10147*t28685 + t10013*t28734 + t12636*t28746 + t11631*t28767 + t13901*t28793 + t13570*t28818 + t14150*t28828 + t14007*t28892 - 1.1312*t28900 + 0.0306*t28931;
  p_output1[33]=t19808*t28734 + t19718*t28952 + t12636*t28960 + t11631*t28973 + t13901*t28995 + t13570*t29037 + t14150*t29053 + t14007*t29064 - 1.1312*t29078 + 0.0306*t29088;
  p_output1[34]=t20110*t28960 + t20188*t29114 + t13901*t29124 + t13570*t29145 + t14150*t29166 + t14007*t29200 - 1.1312*t29209 + 0.0306*t29232;
  p_output1[35]=t20705*t29145 + t20618*t29282 + t14150*t29322 + t14007*t29330 - 1.1312*t29342 + 0.0306*t29384;
  p_output1[36]=t20878*t29322 + t20898*t29414 - 1.1312*t29429 + 0.0306*t29444;
  p_output1[37]=-1.;
  p_output1[38]=(0.642788*t27126 - 0.766044*t27241)*t29475*t29566 + (0.766044*t27126 + 0.642788*t27241)*t29531*t29566;
  p_output1[39]=(-0.766044*t27498 + 0.642788*t27511)*t29475*t29566 + (0.642788*t27498 + 0.766044*t27511)*t29531*t29566;
  p_output1[40]=(-0.766044*t27764 + 0.642788*t27775)*t29475*t29566 + (0.642788*t27764 + 0.766044*t27775)*t29531*t29566;
  p_output1[41]=(0.642788*t27991 - 0.766044*t28006)*t29475*t29566 + (0.766044*t27991 + 0.642788*t28006)*t29531*t29566;
  p_output1[42]=(0.642788*t28267 - 0.766044*t28295)*t29475*t29566 + (0.766044*t28267 + 0.642788*t28295)*t29531*t29566;
  p_output1[43]=(-0.766044*t28591 + 0.642788*t28605)*t29475*t29566 + (0.642788*t28591 + 0.766044*t28605)*t29531*t29566;
  p_output1[44]=(0.642788*t28900 - 0.766044*t28931)*t29475*t29566 + (0.766044*t28900 + 0.642788*t28931)*t29531*t29566;
  p_output1[45]=(0.642788*t29078 - 0.766044*t29088)*t29475*t29566 + (0.766044*t29078 + 0.642788*t29088)*t29531*t29566;
  p_output1[46]=(0.642788*t29209 - 0.766044*t29232)*t29475*t29566 + (0.766044*t29209 + 0.642788*t29232)*t29531*t29566;
  p_output1[47]=(0.642788*t29342 - 0.766044*t29384)*t29475*t29566 + (0.766044*t29342 + 0.642788*t29384)*t29531*t29566;
  p_output1[48]=(0.642788*t29429 + t29469)*t29475*t29566 + (0.766044*t29429 + t29530)*t29531*t29566;
  p_output1[49]=-1.;
  p_output1[50]=t17983*t30393*(-1.*t21463*t457 - 1.*t21096*t996);
  p_output1[51]=t27158*t30393*(-1.*t457*t6603 + t1248*t446*t996) + t17983*t30393*(-1.*t22512*t457 - 1.*t170*t21078*t446*t996);
  p_output1[52]=t27158*t30393*(-1.*t14653*t457 + t1559*t170*t996) + t17983*t30393*(-1.*t24022*t457 - 1.*t23879*t996);
  p_output1[53]=-1.*t17983*t24736*t30393*t457 - 1.*t16263*t27158*t30393*t457;
  p_output1[54]=-1.*t17983*t25710*t30393*t457 - 1.*t16871*t27158*t30393*t457;
  p_output1[55]=t27158*t30393*(-1.*t170*t446*t457 + t17930*t996) + t17983*t30393*(-1.*t26177*t457 + t26185*t996);
  p_output1[56]=-1.;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 5 && ncols == 1) && 
      !(mrows == 1 && ncols == 5))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 57, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_h_RightToeBottom_RightStance.hh"

namespace Times[2, step, Pattern[Cassie, Blank[]]]
{

void J_h_RightToeBottom_RightStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
