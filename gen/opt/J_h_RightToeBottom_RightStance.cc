/*
 * Automatically Generated from Mathematica.
 * Tue 20 Jun 2017 12:41:13 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t2882;
  double t291;
  double t2724;
  double t2918;
  double t2962;
  double t3003;
  double t2999;
  double t3000;
  double t3001;
  double t2980;
  double t3004;
  double t3005;
  double t3006;
  double t2801;
  double t2829;
  double t2857;
  double t2875;
  double t2769;
  double t3051;
  double t3055;
  double t3059;
  double t3008;
  double t3010;
  double t3015;
  double t3023;
  double t3035;
  double t3036;
  double t3037;
  double t3080;
  double t3081;
  double t3082;
  double t3084;
  double t3085;
  double t3086;
  double t3094;
  double t3106;
  double t3110;
  double t3111;
  double t3122;
  double t3126;
  double t3130;
  double t3138;
  double t3154;
  double t3160;
  double t3161;
  double t3162;
  double t3168;
  double t3169;
  double t3170;
  double t3172;
  double t3173;
  double t3174;
  double t3176;
  double t3179;
  double t3180;
  double t3181;
  double t3186;
  double t3187;
  double t3188;
  double t3190;
  double t3191;
  double t3192;
  double t3194;
  double t3197;
  double t3198;
  double t3199;
  double t3204;
  double t3205;
  double t3206;
  double t2931;
  double t2954;
  double t2991;
  double t2998;
  double t3039;
  double t3043;
  double t3047;
  double t3019;
  double t3027;
  double t3031;
  double t2874;
  double t2878;
  double t2879;
  double t3077;
  double t3078;
  double t3079;
  double t3220;
  double t3221;
  double t3222;
  double t3090;
  double t3098;
  double t3102;
  double t3224;
  double t3225;
  double t3226;
  double t3229;
  double t3230;
  double t3231;
  double t3113;
  double t3114;
  double t3118;
  double t3142;
  double t3146;
  double t3150;
  double t3158;
  double t3159;
  double t3237;
  double t3238;
  double t3239;
  double t3241;
  double t3242;
  double t3243;
  double t3164;
  double t3165;
  double t3166;
  double t3167;
  double t3175;
  double t3177;
  double t3178;
  double t3245;
  double t3246;
  double t3247;
  double t3249;
  double t3250;
  double t3251;
  double t3183;
  double t3184;
  double t3185;
  double t3193;
  double t3195;
  double t3196;
  double t3253;
  double t3254;
  double t3255;
  double t3257;
  double t3258;
  double t3259;
  double t3201;
  double t3202;
  double t3203;
  double t3261;
  double t3262;
  double t3263;
  double t3265;
  double t3266;
  double t3267;
  double t3280;
  double t3281;
  double t3282;
  double t3284;
  double t3285;
  double t3286;
  double t3288;
  double t3289;
  double t3290;
  double t3294;
  double t3295;
  double t3296;
  double t3298;
  double t3299;
  double t3300;
  double t3302;
  double t3303;
  double t3304;
  double t3306;
  double t3307;
  double t3308;
  double t3310;
  double t3311;
  double t3312;
  double t3314;
  double t3315;
  double t3316;
  double t3318;
  double t3319;
  double t3320;
  double t3322;
  double t3323;
  double t3324;
  double t3326;
  double t3327;
  double t3328;
  double t3339;
  double t3340;
  double t3341;
  double t3344;
  double t3345;
  double t3349;
  double t3350;
  double t3352;
  double t3353;
  double t3354;
  double t3356;
  double t3357;
  double t3358;
  double t3360;
  double t3361;
  double t3362;
  double t3364;
  double t3365;
  double t3366;
  double t3368;
  double t3369;
  double t3370;
  double t3372;
  double t3373;
  double t3374;
  double t3376;
  double t3377;
  double t3378;
  double t3380;
  double t3381;
  double t3382;
  double t3399;
  double t3400;
  double t3401;
  double t3403;
  double t3404;
  double t3405;
  double t3413;
  double t3414;
  double t3415;
  double t3417;
  double t3418;
  double t3419;
  double t3421;
  double t3422;
  double t3423;
  double t3425;
  double t3426;
  double t3427;
  double t3429;
  double t3430;
  double t3431;
  double t3433;
  double t3434;
  double t3435;
  double t3409;
  double t3410;
  double t3411;
  double t3453;
  double t3454;
  double t3455;
  double t3457;
  double t3458;
  double t3459;
  double t3461;
  double t3462;
  double t3463;
  double t3465;
  double t3466;
  double t3467;
  double t3469;
  double t3470;
  double t3471;
  double t3473;
  double t3474;
  double t3475;
  double t3477;
  double t3478;
  double t3479;
  double t3481;
  double t3482;
  double t3483;
  double t3497;
  double t3498;
  double t3499;
  double t3504;
  double t3505;
  double t3507;
  double t3508;
  double t3510;
  double t3511;
  double t3512;
  double t3514;
  double t3515;
  double t3516;
  double t3518;
  double t3519;
  double t3520;
  double t3522;
  double t3523;
  double t3524;
  double t3541;
  double t3542;
  double t3543;
  double t3545;
  double t3546;
  double t3548;
  double t3549;
  double t3551;
  double t3552;
  double t3553;
  double t3555;
  double t3556;
  double t3557;
  double t3571;
  double t3572;
  double t3573;
  double t3578;
  double t3579;
  double t3581;
  double t3582;
  double t3584;
  double t3599;
  double t3600;
  double t3601;
  double t3588;
  double t3610;
  double t3613;
  double t3617;
  double t3618;
  double t3619;
  double t3621;
  double t3622;
  double t3623;
  double t3625;
  double t3626;
  double t3627;
  double t3612;
  double t3614;
  double t3615;
  double t3633;
  double t3634;
  double t3635;
  double t3629;
  double t3630;
  double t3631;
  double t3641;
  double t3642;
  double t3643;
  double t3645;
  double t3646;
  double t3647;
  double t3649;
  double t3650;
  double t3651;
  double t3653;
  double t3654;
  double t3655;
  double t3657;
  double t3658;
  double t3659;
  double t3661;
  double t3662;
  double t3663;
  double t3665;
  double t3666;
  double t3667;
  double t3669;
  double t3670;
  double t3671;
  double t3673;
  double t3674;
  double t3675;
  double t3689;
  double t3690;
  double t3691;
  double t3693;
  double t3694;
  double t3695;
  double t3701;
  double t3702;
  double t3703;
  double t3697;
  double t3698;
  double t3699;
  double t3709;
  double t3710;
  double t3711;
  double t3713;
  double t3714;
  double t3715;
  double t3717;
  double t3718;
  double t3719;
  double t3721;
  double t3722;
  double t3723;
  double t3725;
  double t3726;
  double t3727;
  double t3729;
  double t3730;
  double t3731;
  double t3733;
  double t3734;
  double t3735;
  double t3737;
  double t3738;
  double t3739;
  double t3741;
  double t3742;
  double t3743;
  double t3754;
  double t3755;
  double t3756;
  double t3760;
  double t3761;
  double t3762;
  double t3768;
  double t3769;
  double t3770;
  double t3764;
  double t3765;
  double t3766;
  double t3776;
  double t3777;
  double t3778;
  double t3780;
  double t3781;
  double t3782;
  double t3784;
  double t3785;
  double t3786;
  double t3788;
  double t3789;
  double t3790;
  double t3792;
  double t3793;
  double t3794;
  double t3796;
  double t3797;
  double t3798;
  double t3800;
  double t3801;
  double t3802;
  double t3804;
  double t3805;
  double t3806;
  double t3808;
  double t3809;
  double t3810;
  double t3823;
  double t3824;
  double t3825;
  double t3827;
  double t3828;
  double t3829;
  double t3831;
  double t3832;
  double t3833;
  double t3837;
  double t3838;
  double t3839;
  double t3841;
  double t3842;
  double t3843;
  double t3845;
  double t3846;
  double t3847;
  double t3849;
  double t3850;
  double t3851;
  double t3853;
  double t3854;
  double t3855;
  double t3857;
  double t3858;
  double t3859;
  double t3861;
  double t3862;
  double t3863;
  double t3865;
  double t3866;
  double t3867;
  double t3869;
  double t3870;
  double t3871;
  double t3882;
  double t3883;
  double t3884;
  double t3887;
  double t3888;
  double t3892;
  double t3893;
  double t3895;
  double t3896;
  double t3897;
  double t3899;
  double t3900;
  double t3901;
  double t3903;
  double t3904;
  double t3905;
  double t3907;
  double t3908;
  double t3909;
  double t3911;
  double t3912;
  double t3913;
  double t3915;
  double t3916;
  double t3917;
  double t3919;
  double t3920;
  double t3921;
  double t3923;
  double t3924;
  double t3925;
  double t3393;
  double t3394;
  double t3396;
  double t3397;
  double t3398;
  double t3936;
  double t3937;
  double t3938;
  double t3940;
  double t3941;
  double t3942;
  double t3944;
  double t3945;
  double t3946;
  double t3954;
  double t3955;
  double t3956;
  double t3958;
  double t3959;
  double t3960;
  double t3962;
  double t3963;
  double t3964;
  double t3966;
  double t3967;
  double t3968;
  double t3970;
  double t3971;
  double t3972;
  double t3974;
  double t3975;
  double t3976;
  double t3446;
  double t3447;
  double t3449;
  double t3450;
  double t3451;
  double t3950;
  double t3951;
  double t3952;
  double t3989;
  double t3990;
  double t3991;
  double t3993;
  double t3994;
  double t3995;
  double t3997;
  double t3998;
  double t3999;
  double t4001;
  double t4002;
  double t4003;
  double t4005;
  double t4006;
  double t4007;
  double t4009;
  double t4010;
  double t4011;
  double t4013;
  double t4014;
  double t4015;
  double t4017;
  double t4018;
  double t4019;
  double t3494;
  double t3495;
  double t3496;
  double t3501;
  double t3502;
  double t4030;
  double t4031;
  double t4032;
  double t4035;
  double t4036;
  double t4038;
  double t4039;
  double t4041;
  double t4042;
  double t4043;
  double t4045;
  double t4046;
  double t4047;
  double t4049;
  double t4050;
  double t4051;
  double t4053;
  double t4054;
  double t4055;
  double t3535;
  double t3536;
  double t3538;
  double t3539;
  double t3540;
  double t4067;
  double t4068;
  double t4069;
  double t4071;
  double t4072;
  double t4074;
  double t4075;
  double t4077;
  double t4078;
  double t4079;
  double t4081;
  double t4082;
  double t4083;
  double t3568;
  double t3569;
  double t3570;
  double t3575;
  double t3576;
  double t4094;
  double t4095;
  double t4096;
  double t4099;
  double t4100;
  double t4102;
  double t4103;
  double t3593;
  double t3594;
  double t3596;
  double t3597;
  double t3598;
  double t4105;
  double t4115;
  double t4116;
  double t4117;
  double t4109;
  double t4122;
  double t4123;
  double t4155;
  double t4156;
  double t4157;
  double t4159;
  double t4160;
  double t4161;
  double t4167;
  double t4168;
  double t4169;
  double t4163;
  double t4164;
  double t4165;
  double t4175;
  double t4176;
  double t4177;
  double t4179;
  double t4180;
  double t4181;
  double t4183;
  double t4184;
  double t4185;
  double t4187;
  double t4188;
  double t4189;
  double t4191;
  double t4192;
  double t4193;
  double t4195;
  double t4196;
  double t4197;
  double t4199;
  double t4200;
  double t4201;
  double t4203;
  double t4204;
  double t4205;
  double t4207;
  double t4208;
  double t4209;
  double t4223;
  double t4224;
  double t4225;
  double t4231;
  double t4232;
  double t4233;
  double t4227;
  double t4228;
  double t4229;
  double t4239;
  double t4240;
  double t4241;
  double t4243;
  double t4244;
  double t4245;
  double t4247;
  double t4248;
  double t4249;
  double t4251;
  double t4252;
  double t4253;
  double t4255;
  double t4256;
  double t4257;
  double t4259;
  double t4260;
  double t4261;
  double t4263;
  double t4264;
  double t4265;
  double t4267;
  double t4268;
  double t4269;
  double t4271;
  double t4272;
  double t4273;
  double t4286;
  double t4287;
  double t4289;
  double t4290;
  double t4291;
  double t4293;
  double t4294;
  double t4295;
  double t4299;
  double t4300;
  double t4301;
  double t4303;
  double t4304;
  double t4305;
  double t4307;
  double t4308;
  double t4309;
  double t4311;
  double t4312;
  double t4313;
  double t4315;
  double t4316;
  double t4317;
  double t4319;
  double t4320;
  double t4321;
  double t4323;
  double t4324;
  double t4325;
  double t4327;
  double t4328;
  double t4329;
  double t4331;
  double t4332;
  double t4333;
  double t4344;
  double t4345;
  double t4346;
  double t4349;
  double t4350;
  double t4354;
  double t4355;
  double t4357;
  double t4358;
  double t4359;
  double t4361;
  double t4362;
  double t4363;
  double t4365;
  double t4366;
  double t4367;
  double t4369;
  double t4370;
  double t4371;
  double t4373;
  double t4374;
  double t4375;
  double t4377;
  double t4378;
  double t4379;
  double t4381;
  double t4382;
  double t4383;
  double t4385;
  double t4386;
  double t4387;
  double t4398;
  double t4399;
  double t4400;
  double t4402;
  double t4403;
  double t4404;
  double t4406;
  double t4407;
  double t4408;
  double t4416;
  double t4417;
  double t4418;
  double t4420;
  double t4421;
  double t4422;
  double t4424;
  double t4425;
  double t4426;
  double t4428;
  double t4429;
  double t4430;
  double t4432;
  double t4433;
  double t4434;
  double t4436;
  double t4437;
  double t4438;
  double t4412;
  double t4413;
  double t4414;
  double t4451;
  double t4452;
  double t4453;
  double t4455;
  double t4456;
  double t4457;
  double t4459;
  double t4460;
  double t4461;
  double t4463;
  double t4464;
  double t4465;
  double t4467;
  double t4468;
  double t4469;
  double t4471;
  double t4472;
  double t4473;
  double t4475;
  double t4476;
  double t4477;
  double t4479;
  double t4480;
  double t4481;
  double t4492;
  double t4493;
  double t4494;
  double t4497;
  double t4498;
  double t4500;
  double t4501;
  double t4503;
  double t4504;
  double t4505;
  double t4507;
  double t4508;
  double t4509;
  double t4511;
  double t4512;
  double t4513;
  double t4515;
  double t4516;
  double t4517;
  double t4529;
  double t4530;
  double t4531;
  double t4533;
  double t4534;
  double t4536;
  double t4537;
  double t4539;
  double t4540;
  double t4541;
  double t4543;
  double t4544;
  double t4545;
  double t4556;
  double t4557;
  double t4558;
  double t4561;
  double t4562;
  double t4564;
  double t4565;
  double t4567;
  double t4577;
  double t4578;
  double t4579;
  double t4571;
  double t4584;
  double t4585;
  double t4146;
  double t4147;
  double t4148;
  double t4588;
  double t4589;
  double t4590;
  double t4597;
  double t4598;
  double t4599;
  double t4600;
  double t4601;
  double t4602;
  double t4603;
  double t4604;
  double t4605;
  double t4606;
  double t4211;
  double t4212;
  double t4213;
  double t4215;
  double t4216;
  double t4217;
  double t4591;
  double t4592;
  double t4593;
  double t4275;
  double t4276;
  double t4277;
  double t4279;
  double t4280;
  double t4281;
  double t4335;
  double t4336;
  double t4337;
  double t4339;
  double t4340;
  double t4341;
  double t4389;
  double t4390;
  double t4391;
  double t4393;
  double t4394;
  double t4395;
  double t4440;
  double t4441;
  double t4442;
  double t4444;
  double t4445;
  double t4446;
  double t4483;
  double t4484;
  double t4485;
  double t4487;
  double t4488;
  double t4489;
  double t4519;
  double t4520;
  double t4521;
  double t4523;
  double t4524;
  double t4525;
  double t4547;
  double t4548;
  double t4549;
  double t4551;
  double t4552;
  double t4553;
  double t4568;
  double t4569;
  double t4572;
  double t4573;
  double t4581;
  double t4582;
  double t4704;
  double t4705;
  double t4706;
  double t4707;
  double t4133;
  double t4134;
  double t4135;
  t2882 = Sin(var1[4]);
  t291 = Cos(var1[4]);
  t2724 = Sin(var1[14]);
  t2918 = Cos(var1[14]);
  t2962 = Sin(var1[5]);
  t3003 = Sin(var1[15]);
  t2999 = t291*t2724;
  t3000 = t2918*t2882*t2962;
  t3001 = t2999 + t3000;
  t2980 = Cos(var1[15]);
  t3004 = t2918*t291;
  t3005 = -1.*t2724*t2882*t2962;
  t3006 = t3004 + t3005;
  t2801 = Cos(var1[16]);
  t2829 = -1.*t2801;
  t2857 = 1. + t2829;
  t2875 = Sin(var1[16]);
  t2769 = Cos(var1[5]);
  t3051 = t2980*t3001;
  t3055 = t3003*t3006;
  t3059 = t3051 + t3055;
  t3008 = Cos(var1[17]);
  t3010 = -1.*t3008;
  t3015 = 1. + t3010;
  t3023 = Sin(var1[17]);
  t3035 = -1.*t3003*t3001;
  t3036 = t2980*t3006;
  t3037 = t3035 + t3036;
  t3080 = -1.*t2801*t2769*t2882;
  t3081 = -1.*t2875*t3059;
  t3082 = t3080 + t3081;
  t3084 = Cos(var1[18]);
  t3085 = -1.*t3084;
  t3086 = 1. + t3085;
  t3094 = Sin(var1[18]);
  t3106 = t3023*t3037;
  t3110 = t3008*t3082;
  t3111 = t3106 + t3110;
  t3122 = t3008*t3037;
  t3126 = -1.*t3023*t3082;
  t3130 = t3122 + t3126;
  t3138 = Cos(var1[19]);
  t3154 = Sin(var1[19]);
  t3160 = -1.*t3094*t3111;
  t3161 = t3084*t3130;
  t3162 = t3160 + t3161;
  t3168 = t3084*t3111;
  t3169 = t3094*t3130;
  t3170 = t3168 + t3169;
  t3172 = Cos(var1[20]);
  t3173 = -1.*t3172;
  t3174 = 1. + t3173;
  t3176 = Sin(var1[20]);
  t3179 = t3154*t3162;
  t3180 = t3138*t3170;
  t3181 = t3179 + t3180;
  t3186 = t3138*t3162;
  t3187 = -1.*t3154*t3170;
  t3188 = t3186 + t3187;
  t3190 = Cos(var1[21]);
  t3191 = -1.*t3190;
  t3192 = 1. + t3191;
  t3194 = Sin(var1[21]);
  t3197 = -1.*t3176*t3181;
  t3198 = t3172*t3188;
  t3199 = t3197 + t3198;
  t3204 = t3172*t3181;
  t3205 = t3176*t3188;
  t3206 = t3204 + t3205;
  t2931 = -1.*t2918;
  t2954 = 1. + t2931;
  t2991 = -1.*t2980;
  t2998 = 1. + t2991;
  t3039 = -0.135*t2857;
  t3043 = -0.049*t2875;
  t3047 = t3039 + t3043;
  t3019 = -0.09*t3015;
  t3027 = 0.049*t3023;
  t3031 = t3019 + t3027;
  t2874 = -0.049*t2857;
  t2878 = 0.135*t2875;
  t2879 = t2874 + t2878;
  t3077 = -0.049*t3015;
  t3078 = -0.09*t3023;
  t3079 = t3077 + t3078;
  t3220 = -1.*t2918*t2980*t291*t2769;
  t3221 = t291*t2769*t2724*t3003;
  t3222 = t3220 + t3221;
  t3090 = -0.049*t3086;
  t3098 = -0.21*t3094;
  t3102 = t3090 + t3098;
  t3224 = t2980*t291*t2769*t2724;
  t3225 = t2918*t291*t2769*t3003;
  t3226 = t3224 + t3225;
  t3229 = -1.*t3222*t2875;
  t3230 = -1.*t2801*t291*t2962;
  t3231 = t3229 + t3230;
  t3113 = -0.21*t3086;
  t3114 = 0.049*t3094;
  t3118 = t3113 + t3114;
  t3142 = -1.*t3138;
  t3146 = 1. + t3142;
  t3150 = -0.2707*t3146;
  t3158 = 0.0016*t3154;
  t3159 = t3150 + t3158;
  t3237 = t3226*t3023;
  t3238 = t3008*t3231;
  t3239 = t3237 + t3238;
  t3241 = t3008*t3226;
  t3242 = -1.*t3023*t3231;
  t3243 = t3241 + t3242;
  t3164 = -1. + t3138;
  t3165 = 0.0016*t3164;
  t3166 = -0.2707*t3154;
  t3167 = t3165 + t3166;
  t3175 = 0.0184*t3174;
  t3177 = -0.7055*t3176;
  t3178 = t3175 + t3177;
  t3245 = -1.*t3094*t3239;
  t3246 = t3084*t3243;
  t3247 = t3245 + t3246;
  t3249 = t3084*t3239;
  t3250 = t3094*t3243;
  t3251 = t3249 + t3250;
  t3183 = -0.7055*t3174;
  t3184 = -0.0184*t3176;
  t3185 = t3183 + t3184;
  t3193 = -1.1135*t3192;
  t3195 = 0.0216*t3194;
  t3196 = t3193 + t3195;
  t3253 = t3154*t3247;
  t3254 = t3138*t3251;
  t3255 = t3253 + t3254;
  t3257 = t3138*t3247;
  t3258 = -1.*t3154*t3251;
  t3259 = t3257 + t3258;
  t3201 = -0.0216*t3192;
  t3202 = -1.1135*t3194;
  t3203 = t3201 + t3202;
  t3261 = -1.*t3176*t3255;
  t3262 = t3172*t3259;
  t3263 = t3261 + t3262;
  t3265 = t3172*t3255;
  t3266 = t3176*t3259;
  t3267 = t3265 + t3266;
  t3280 = -1.*t2724*t2882;
  t3281 = t2918*t291*t2962;
  t3282 = t3280 + t3281;
  t3284 = t2918*t2882;
  t3285 = t291*t2724*t2962;
  t3286 = t3284 + t3285;
  t3288 = t3003*t3282;
  t3289 = t2980*t3286;
  t3290 = t3288 + t3289;
  t3294 = t2980*t3282;
  t3295 = -1.*t3003*t3286;
  t3296 = t3294 + t3295;
  t3298 = t2875*t3023*t3290;
  t3299 = t3008*t3296;
  t3300 = t3298 + t3299;
  t3302 = -1.*t3008*t2875*t3290;
  t3303 = t3023*t3296;
  t3304 = t3302 + t3303;
  t3306 = t3094*t3300;
  t3307 = t3084*t3304;
  t3308 = t3306 + t3307;
  t3310 = t3084*t3300;
  t3311 = -1.*t3094*t3304;
  t3312 = t3310 + t3311;
  t3314 = -1.*t3154*t3308;
  t3315 = t3138*t3312;
  t3316 = t3314 + t3315;
  t3318 = t3138*t3308;
  t3319 = t3154*t3312;
  t3320 = t3318 + t3319;
  t3322 = t3176*t3316;
  t3323 = t3172*t3320;
  t3324 = t3322 + t3323;
  t3326 = t3172*t3316;
  t3327 = -1.*t3176*t3320;
  t3328 = t3326 + t3327;
  t3339 = t2724*t2882;
  t3340 = -1.*t2918*t291*t2962;
  t3341 = t3339 + t3340;
  t3344 = -1.*t3003*t3341;
  t3345 = t3344 + t3289;
  t3349 = -1.*t2980*t3341;
  t3350 = t3349 + t3295;
  t3352 = t2875*t3023*t3345;
  t3353 = t3008*t3350;
  t3354 = t3352 + t3353;
  t3356 = -1.*t3008*t2875*t3345;
  t3357 = t3023*t3350;
  t3358 = t3356 + t3357;
  t3360 = t3094*t3354;
  t3361 = t3084*t3358;
  t3362 = t3360 + t3361;
  t3364 = t3084*t3354;
  t3365 = -1.*t3094*t3358;
  t3366 = t3364 + t3365;
  t3368 = -1.*t3154*t3362;
  t3369 = t3138*t3366;
  t3370 = t3368 + t3369;
  t3372 = t3138*t3362;
  t3373 = t3154*t3366;
  t3374 = t3372 + t3373;
  t3376 = t3176*t3370;
  t3377 = t3172*t3374;
  t3378 = t3376 + t3377;
  t3380 = t3172*t3370;
  t3381 = -1.*t3176*t3374;
  t3382 = t3380 + t3381;
  t3399 = t2980*t3341;
  t3400 = t3003*t3286;
  t3401 = t3399 + t3400;
  t3403 = -1.*t291*t2769*t2875;
  t3404 = -1.*t2801*t3401;
  t3405 = t3403 + t3404;
  t3413 = -1.*t3084*t3023*t3405;
  t3414 = -1.*t3008*t3094*t3405;
  t3415 = t3413 + t3414;
  t3417 = t3008*t3084*t3405;
  t3418 = -1.*t3023*t3094*t3405;
  t3419 = t3417 + t3418;
  t3421 = t3154*t3415;
  t3422 = t3138*t3419;
  t3423 = t3421 + t3422;
  t3425 = t3138*t3415;
  t3426 = -1.*t3154*t3419;
  t3427 = t3425 + t3426;
  t3429 = -1.*t3176*t3423;
  t3430 = t3172*t3427;
  t3431 = t3429 + t3430;
  t3433 = t3172*t3423;
  t3434 = t3176*t3427;
  t3435 = t3433 + t3434;
  t3409 = t2801*t291*t2769;
  t3410 = -1.*t2875*t3401;
  t3411 = t3409 + t3410;
  t3453 = -1.*t3023*t3345;
  t3454 = -1.*t3008*t3411;
  t3455 = t3453 + t3454;
  t3457 = t3008*t3345;
  t3458 = -1.*t3023*t3411;
  t3459 = t3457 + t3458;
  t3461 = t3094*t3455;
  t3462 = t3084*t3459;
  t3463 = t3461 + t3462;
  t3465 = t3084*t3455;
  t3466 = -1.*t3094*t3459;
  t3467 = t3465 + t3466;
  t3469 = -1.*t3154*t3463;
  t3470 = t3138*t3467;
  t3471 = t3469 + t3470;
  t3473 = t3138*t3463;
  t3474 = t3154*t3467;
  t3475 = t3473 + t3474;
  t3477 = t3176*t3471;
  t3478 = t3172*t3475;
  t3479 = t3477 + t3478;
  t3481 = t3172*t3471;
  t3482 = -1.*t3176*t3475;
  t3483 = t3481 + t3482;
  t3497 = t3023*t3345;
  t3498 = t3008*t3411;
  t3499 = t3497 + t3498;
  t3504 = -1.*t3094*t3499;
  t3505 = t3504 + t3462;
  t3507 = -1.*t3084*t3499;
  t3508 = t3507 + t3466;
  t3510 = -1.*t3154*t3505;
  t3511 = t3138*t3508;
  t3512 = t3510 + t3511;
  t3514 = t3138*t3505;
  t3515 = t3154*t3508;
  t3516 = t3514 + t3515;
  t3518 = t3176*t3512;
  t3519 = t3172*t3516;
  t3520 = t3518 + t3519;
  t3522 = t3172*t3512;
  t3523 = -1.*t3176*t3516;
  t3524 = t3522 + t3523;
  t3541 = t3084*t3499;
  t3542 = t3094*t3459;
  t3543 = t3541 + t3542;
  t3545 = -1.*t3138*t3543;
  t3546 = t3510 + t3545;
  t3548 = -1.*t3154*t3543;
  t3549 = t3514 + t3548;
  t3551 = t3176*t3546;
  t3552 = t3172*t3549;
  t3553 = t3551 + t3552;
  t3555 = t3172*t3546;
  t3556 = -1.*t3176*t3549;
  t3557 = t3555 + t3556;
  t3571 = t3154*t3505;
  t3572 = t3138*t3543;
  t3573 = t3571 + t3572;
  t3578 = -1.*t3176*t3573;
  t3579 = t3578 + t3552;
  t3581 = -1.*t3172*t3573;
  t3582 = t3581 + t3556;
  t3584 = -1.*t3194*t3579;
  t3599 = t3172*t3573;
  t3600 = t3176*t3549;
  t3601 = t3599 + t3600;
  t3588 = t3190*t3579;
  t3610 = Cos(var1[3]);
  t3613 = Sin(var1[3]);
  t3617 = -1.*t2769*t3613;
  t3618 = -1.*t3610*t2882*t2962;
  t3619 = t3617 + t3618;
  t3621 = -1.*t3610*t291*t2724;
  t3622 = t2918*t3619;
  t3623 = t3621 + t3622;
  t3625 = -1.*t2918*t3610*t291;
  t3626 = -1.*t2724*t3619;
  t3627 = t3625 + t3626;
  t3612 = t3610*t2769*t2882;
  t3614 = -1.*t3613*t2962;
  t3615 = t3612 + t3614;
  t3633 = t2980*t3623;
  t3634 = t3003*t3627;
  t3635 = t3633 + t3634;
  t3629 = -1.*t3003*t3623;
  t3630 = t2980*t3627;
  t3631 = t3629 + t3630;
  t3641 = t2801*t3615;
  t3642 = -1.*t2875*t3635;
  t3643 = t3641 + t3642;
  t3645 = t3023*t3631;
  t3646 = t3008*t3643;
  t3647 = t3645 + t3646;
  t3649 = t3008*t3631;
  t3650 = -1.*t3023*t3643;
  t3651 = t3649 + t3650;
  t3653 = -1.*t3094*t3647;
  t3654 = t3084*t3651;
  t3655 = t3653 + t3654;
  t3657 = t3084*t3647;
  t3658 = t3094*t3651;
  t3659 = t3657 + t3658;
  t3661 = t3154*t3655;
  t3662 = t3138*t3659;
  t3663 = t3661 + t3662;
  t3665 = t3138*t3655;
  t3666 = -1.*t3154*t3659;
  t3667 = t3665 + t3666;
  t3669 = -1.*t3176*t3663;
  t3670 = t3172*t3667;
  t3671 = t3669 + t3670;
  t3673 = t3172*t3663;
  t3674 = t3176*t3667;
  t3675 = t3673 + t3674;
  t3689 = t2724*t3613*t2882;
  t3690 = -1.*t2918*t291*t3613*t2962;
  t3691 = t3689 + t3690;
  t3693 = t2918*t3613*t2882;
  t3694 = t291*t2724*t3613*t2962;
  t3695 = t3693 + t3694;
  t3701 = t2980*t3691;
  t3702 = t3003*t3695;
  t3703 = t3701 + t3702;
  t3697 = -1.*t3003*t3691;
  t3698 = t2980*t3695;
  t3699 = t3697 + t3698;
  t3709 = t2801*t291*t2769*t3613;
  t3710 = -1.*t2875*t3703;
  t3711 = t3709 + t3710;
  t3713 = t3023*t3699;
  t3714 = t3008*t3711;
  t3715 = t3713 + t3714;
  t3717 = t3008*t3699;
  t3718 = -1.*t3023*t3711;
  t3719 = t3717 + t3718;
  t3721 = -1.*t3094*t3715;
  t3722 = t3084*t3719;
  t3723 = t3721 + t3722;
  t3725 = t3084*t3715;
  t3726 = t3094*t3719;
  t3727 = t3725 + t3726;
  t3729 = t3154*t3723;
  t3730 = t3138*t3727;
  t3731 = t3729 + t3730;
  t3733 = t3138*t3723;
  t3734 = -1.*t3154*t3727;
  t3735 = t3733 + t3734;
  t3737 = -1.*t3176*t3731;
  t3738 = t3172*t3735;
  t3739 = t3737 + t3738;
  t3741 = t3172*t3731;
  t3742 = t3176*t3735;
  t3743 = t3741 + t3742;
  t3754 = -1.*t2769*t3613*t2882;
  t3755 = -1.*t3610*t2962;
  t3756 = t3754 + t3755;
  t3760 = t3610*t2769;
  t3761 = -1.*t3613*t2882*t2962;
  t3762 = t3760 + t3761;
  t3768 = t2918*t2980*t3756;
  t3769 = -1.*t2724*t3003*t3756;
  t3770 = t3768 + t3769;
  t3764 = -1.*t2980*t2724*t3756;
  t3765 = -1.*t2918*t3003*t3756;
  t3766 = t3764 + t3765;
  t3776 = t2801*t3762;
  t3777 = -1.*t2875*t3770;
  t3778 = t3776 + t3777;
  t3780 = t3023*t3766;
  t3781 = t3008*t3778;
  t3782 = t3780 + t3781;
  t3784 = t3008*t3766;
  t3785 = -1.*t3023*t3778;
  t3786 = t3784 + t3785;
  t3788 = -1.*t3094*t3782;
  t3789 = t3084*t3786;
  t3790 = t3788 + t3789;
  t3792 = t3084*t3782;
  t3793 = t3094*t3786;
  t3794 = t3792 + t3793;
  t3796 = t3154*t3790;
  t3797 = t3138*t3794;
  t3798 = t3796 + t3797;
  t3800 = t3138*t3790;
  t3801 = -1.*t3154*t3794;
  t3802 = t3800 + t3801;
  t3804 = -1.*t3176*t3798;
  t3805 = t3172*t3802;
  t3806 = t3804 + t3805;
  t3808 = t3172*t3798;
  t3809 = t3176*t3802;
  t3810 = t3808 + t3809;
  t3823 = t291*t2724*t3613;
  t3824 = -1.*t2918*t3762;
  t3825 = t3823 + t3824;
  t3827 = -1.*t2918*t291*t3613;
  t3828 = -1.*t2724*t3762;
  t3829 = t3827 + t3828;
  t3831 = t3003*t3825;
  t3832 = t2980*t3829;
  t3833 = t3831 + t3832;
  t3837 = t2980*t3825;
  t3838 = -1.*t3003*t3829;
  t3839 = t3837 + t3838;
  t3841 = t2875*t3023*t3833;
  t3842 = t3008*t3839;
  t3843 = t3841 + t3842;
  t3845 = -1.*t3008*t2875*t3833;
  t3846 = t3023*t3839;
  t3847 = t3845 + t3846;
  t3849 = t3094*t3843;
  t3850 = t3084*t3847;
  t3851 = t3849 + t3850;
  t3853 = t3084*t3843;
  t3854 = -1.*t3094*t3847;
  t3855 = t3853 + t3854;
  t3857 = -1.*t3154*t3851;
  t3858 = t3138*t3855;
  t3859 = t3857 + t3858;
  t3861 = t3138*t3851;
  t3862 = t3154*t3855;
  t3863 = t3861 + t3862;
  t3865 = t3176*t3859;
  t3866 = t3172*t3863;
  t3867 = t3865 + t3866;
  t3869 = t3172*t3859;
  t3870 = -1.*t3176*t3863;
  t3871 = t3869 + t3870;
  t3882 = -1.*t291*t2724*t3613;
  t3883 = t2918*t3762;
  t3884 = t3882 + t3883;
  t3887 = -1.*t3003*t3884;
  t3888 = t3887 + t3832;
  t3892 = -1.*t2980*t3884;
  t3893 = t3892 + t3838;
  t3895 = t2875*t3023*t3888;
  t3896 = t3008*t3893;
  t3897 = t3895 + t3896;
  t3899 = -1.*t3008*t2875*t3888;
  t3900 = t3023*t3893;
  t3901 = t3899 + t3900;
  t3903 = t3094*t3897;
  t3904 = t3084*t3901;
  t3905 = t3903 + t3904;
  t3907 = t3084*t3897;
  t3908 = -1.*t3094*t3901;
  t3909 = t3907 + t3908;
  t3911 = -1.*t3154*t3905;
  t3912 = t3138*t3909;
  t3913 = t3911 + t3912;
  t3915 = t3138*t3905;
  t3916 = t3154*t3909;
  t3917 = t3915 + t3916;
  t3919 = t3176*t3913;
  t3920 = t3172*t3917;
  t3921 = t3919 + t3920;
  t3923 = t3172*t3913;
  t3924 = -1.*t3176*t3917;
  t3925 = t3923 + t3924;
  t3393 = 0.135*t2801;
  t3394 = t3393 + t3043;
  t3396 = -0.049*t2801;
  t3397 = -0.135*t2875;
  t3398 = t3396 + t3397;
  t3936 = t2769*t3613*t2882;
  t3937 = t3610*t2962;
  t3938 = t3936 + t3937;
  t3940 = t2980*t3884;
  t3941 = t3003*t3829;
  t3942 = t3940 + t3941;
  t3944 = -1.*t2875*t3938;
  t3945 = -1.*t2801*t3942;
  t3946 = t3944 + t3945;
  t3954 = -1.*t3084*t3023*t3946;
  t3955 = -1.*t3008*t3094*t3946;
  t3956 = t3954 + t3955;
  t3958 = t3008*t3084*t3946;
  t3959 = -1.*t3023*t3094*t3946;
  t3960 = t3958 + t3959;
  t3962 = t3154*t3956;
  t3963 = t3138*t3960;
  t3964 = t3962 + t3963;
  t3966 = t3138*t3956;
  t3967 = -1.*t3154*t3960;
  t3968 = t3966 + t3967;
  t3970 = -1.*t3176*t3964;
  t3971 = t3172*t3968;
  t3972 = t3970 + t3971;
  t3974 = t3172*t3964;
  t3975 = t3176*t3968;
  t3976 = t3974 + t3975;
  t3446 = 0.049*t3008;
  t3447 = t3446 + t3078;
  t3449 = -0.09*t3008;
  t3450 = -0.049*t3023;
  t3451 = t3449 + t3450;
  t3950 = t2801*t3938;
  t3951 = -1.*t2875*t3942;
  t3952 = t3950 + t3951;
  t3989 = -1.*t3023*t3888;
  t3990 = -1.*t3008*t3952;
  t3991 = t3989 + t3990;
  t3993 = t3008*t3888;
  t3994 = -1.*t3023*t3952;
  t3995 = t3993 + t3994;
  t3997 = t3094*t3991;
  t3998 = t3084*t3995;
  t3999 = t3997 + t3998;
  t4001 = t3084*t3991;
  t4002 = -1.*t3094*t3995;
  t4003 = t4001 + t4002;
  t4005 = -1.*t3154*t3999;
  t4006 = t3138*t4003;
  t4007 = t4005 + t4006;
  t4009 = t3138*t3999;
  t4010 = t3154*t4003;
  t4011 = t4009 + t4010;
  t4013 = t3176*t4007;
  t4014 = t3172*t4011;
  t4015 = t4013 + t4014;
  t4017 = t3172*t4007;
  t4018 = -1.*t3176*t4011;
  t4019 = t4017 + t4018;
  t3494 = -0.21*t3084;
  t3495 = -0.049*t3094;
  t3496 = t3494 + t3495;
  t3501 = 0.049*t3084;
  t3502 = t3501 + t3098;
  t4030 = t3023*t3888;
  t4031 = t3008*t3952;
  t4032 = t4030 + t4031;
  t4035 = -1.*t3094*t4032;
  t4036 = t4035 + t3998;
  t4038 = -1.*t3084*t4032;
  t4039 = t4038 + t4002;
  t4041 = -1.*t3154*t4036;
  t4042 = t3138*t4039;
  t4043 = t4041 + t4042;
  t4045 = t3138*t4036;
  t4046 = t3154*t4039;
  t4047 = t4045 + t4046;
  t4049 = t3176*t4043;
  t4050 = t3172*t4047;
  t4051 = t4049 + t4050;
  t4053 = t3172*t4043;
  t4054 = -1.*t3176*t4047;
  t4055 = t4053 + t4054;
  t3535 = 0.0016*t3138;
  t3536 = t3535 + t3166;
  t3538 = -0.2707*t3138;
  t3539 = -0.0016*t3154;
  t3540 = t3538 + t3539;
  t4067 = t3084*t4032;
  t4068 = t3094*t3995;
  t4069 = t4067 + t4068;
  t4071 = -1.*t3138*t4069;
  t4072 = t4041 + t4071;
  t4074 = -1.*t3154*t4069;
  t4075 = t4045 + t4074;
  t4077 = t3176*t4072;
  t4078 = t3172*t4075;
  t4079 = t4077 + t4078;
  t4081 = t3172*t4072;
  t4082 = -1.*t3176*t4075;
  t4083 = t4081 + t4082;
  t3568 = -0.7055*t3172;
  t3569 = 0.0184*t3176;
  t3570 = t3568 + t3569;
  t3575 = -0.0184*t3172;
  t3576 = t3575 + t3177;
  t4094 = t3154*t4036;
  t4095 = t3138*t4069;
  t4096 = t4094 + t4095;
  t4099 = -1.*t3176*t4096;
  t4100 = t4099 + t4078;
  t4102 = -1.*t3172*t4096;
  t4103 = t4102 + t4082;
  t3593 = 0.0216*t3190;
  t3594 = t3593 + t3202;
  t3596 = -1.1135*t3190;
  t3597 = -0.0216*t3194;
  t3598 = t3596 + t3597;
  t4105 = -1.*t3194*t4100;
  t4115 = t3172*t4096;
  t4116 = t3176*t4075;
  t4117 = t4115 + t4116;
  t4109 = t3190*t4100;
  t4122 = -1.*t3194*t4117;
  t4123 = t4109 + t4122;
  t4155 = -1.*t3610*t2724*t2882;
  t4156 = t2918*t3610*t291*t2962;
  t4157 = t4155 + t4156;
  t4159 = -1.*t2918*t3610*t2882;
  t4160 = -1.*t3610*t291*t2724*t2962;
  t4161 = t4159 + t4160;
  t4167 = t2980*t4157;
  t4168 = t3003*t4161;
  t4169 = t4167 + t4168;
  t4163 = -1.*t3003*t4157;
  t4164 = t2980*t4161;
  t4165 = t4163 + t4164;
  t4175 = -1.*t2801*t3610*t291*t2769;
  t4176 = -1.*t2875*t4169;
  t4177 = t4175 + t4176;
  t4179 = t3023*t4165;
  t4180 = t3008*t4177;
  t4181 = t4179 + t4180;
  t4183 = t3008*t4165;
  t4184 = -1.*t3023*t4177;
  t4185 = t4183 + t4184;
  t4187 = -1.*t3094*t4181;
  t4188 = t3084*t4185;
  t4189 = t4187 + t4188;
  t4191 = t3084*t4181;
  t4192 = t3094*t4185;
  t4193 = t4191 + t4192;
  t4195 = t3154*t4189;
  t4196 = t3138*t4193;
  t4197 = t4195 + t4196;
  t4199 = t3138*t4189;
  t4200 = -1.*t3154*t4193;
  t4201 = t4199 + t4200;
  t4203 = -1.*t3176*t4197;
  t4204 = t3172*t4201;
  t4205 = t4203 + t4204;
  t4207 = t3172*t4197;
  t4208 = t3176*t4201;
  t4209 = t4207 + t4208;
  t4223 = t2769*t3613;
  t4224 = t3610*t2882*t2962;
  t4225 = t4223 + t4224;
  t4231 = t2918*t2980*t3615;
  t4232 = -1.*t2724*t3003*t3615;
  t4233 = t4231 + t4232;
  t4227 = -1.*t2980*t2724*t3615;
  t4228 = -1.*t2918*t3003*t3615;
  t4229 = t4227 + t4228;
  t4239 = t2801*t4225;
  t4240 = -1.*t2875*t4233;
  t4241 = t4239 + t4240;
  t4243 = t3023*t4229;
  t4244 = t3008*t4241;
  t4245 = t4243 + t4244;
  t4247 = t3008*t4229;
  t4248 = -1.*t3023*t4241;
  t4249 = t4247 + t4248;
  t4251 = -1.*t3094*t4245;
  t4252 = t3084*t4249;
  t4253 = t4251 + t4252;
  t4255 = t3084*t4245;
  t4256 = t3094*t4249;
  t4257 = t4255 + t4256;
  t4259 = t3154*t4253;
  t4260 = t3138*t4257;
  t4261 = t4259 + t4260;
  t4263 = t3138*t4253;
  t4264 = -1.*t3154*t4257;
  t4265 = t4263 + t4264;
  t4267 = -1.*t3176*t4261;
  t4268 = t3172*t4265;
  t4269 = t4267 + t4268;
  t4271 = t3172*t4261;
  t4272 = t3176*t4265;
  t4273 = t4271 + t4272;
  t4286 = -1.*t2918*t4225;
  t4287 = t3621 + t4286;
  t4289 = t2918*t3610*t291;
  t4290 = -1.*t2724*t4225;
  t4291 = t4289 + t4290;
  t4293 = t3003*t4287;
  t4294 = t2980*t4291;
  t4295 = t4293 + t4294;
  t4299 = t2980*t4287;
  t4300 = -1.*t3003*t4291;
  t4301 = t4299 + t4300;
  t4303 = t2875*t3023*t4295;
  t4304 = t3008*t4301;
  t4305 = t4303 + t4304;
  t4307 = -1.*t3008*t2875*t4295;
  t4308 = t3023*t4301;
  t4309 = t4307 + t4308;
  t4311 = t3094*t4305;
  t4312 = t3084*t4309;
  t4313 = t4311 + t4312;
  t4315 = t3084*t4305;
  t4316 = -1.*t3094*t4309;
  t4317 = t4315 + t4316;
  t4319 = -1.*t3154*t4313;
  t4320 = t3138*t4317;
  t4321 = t4319 + t4320;
  t4323 = t3138*t4313;
  t4324 = t3154*t4317;
  t4325 = t4323 + t4324;
  t4327 = t3176*t4321;
  t4328 = t3172*t4325;
  t4329 = t4327 + t4328;
  t4331 = t3172*t4321;
  t4332 = -1.*t3176*t4325;
  t4333 = t4331 + t4332;
  t4344 = t3610*t291*t2724;
  t4345 = t2918*t4225;
  t4346 = t4344 + t4345;
  t4349 = -1.*t3003*t4346;
  t4350 = t4349 + t4294;
  t4354 = -1.*t2980*t4346;
  t4355 = t4354 + t4300;
  t4357 = t2875*t3023*t4350;
  t4358 = t3008*t4355;
  t4359 = t4357 + t4358;
  t4361 = -1.*t3008*t2875*t4350;
  t4362 = t3023*t4355;
  t4363 = t4361 + t4362;
  t4365 = t3094*t4359;
  t4366 = t3084*t4363;
  t4367 = t4365 + t4366;
  t4369 = t3084*t4359;
  t4370 = -1.*t3094*t4363;
  t4371 = t4369 + t4370;
  t4373 = -1.*t3154*t4367;
  t4374 = t3138*t4371;
  t4375 = t4373 + t4374;
  t4377 = t3138*t4367;
  t4378 = t3154*t4371;
  t4379 = t4377 + t4378;
  t4381 = t3176*t4375;
  t4382 = t3172*t4379;
  t4383 = t4381 + t4382;
  t4385 = t3172*t4375;
  t4386 = -1.*t3176*t4379;
  t4387 = t4385 + t4386;
  t4398 = -1.*t3610*t2769*t2882;
  t4399 = t3613*t2962;
  t4400 = t4398 + t4399;
  t4402 = t2980*t4346;
  t4403 = t3003*t4291;
  t4404 = t4402 + t4403;
  t4406 = -1.*t2875*t4400;
  t4407 = -1.*t2801*t4404;
  t4408 = t4406 + t4407;
  t4416 = -1.*t3084*t3023*t4408;
  t4417 = -1.*t3008*t3094*t4408;
  t4418 = t4416 + t4417;
  t4420 = t3008*t3084*t4408;
  t4421 = -1.*t3023*t3094*t4408;
  t4422 = t4420 + t4421;
  t4424 = t3154*t4418;
  t4425 = t3138*t4422;
  t4426 = t4424 + t4425;
  t4428 = t3138*t4418;
  t4429 = -1.*t3154*t4422;
  t4430 = t4428 + t4429;
  t4432 = -1.*t3176*t4426;
  t4433 = t3172*t4430;
  t4434 = t4432 + t4433;
  t4436 = t3172*t4426;
  t4437 = t3176*t4430;
  t4438 = t4436 + t4437;
  t4412 = t2801*t4400;
  t4413 = -1.*t2875*t4404;
  t4414 = t4412 + t4413;
  t4451 = -1.*t3023*t4350;
  t4452 = -1.*t3008*t4414;
  t4453 = t4451 + t4452;
  t4455 = t3008*t4350;
  t4456 = -1.*t3023*t4414;
  t4457 = t4455 + t4456;
  t4459 = t3094*t4453;
  t4460 = t3084*t4457;
  t4461 = t4459 + t4460;
  t4463 = t3084*t4453;
  t4464 = -1.*t3094*t4457;
  t4465 = t4463 + t4464;
  t4467 = -1.*t3154*t4461;
  t4468 = t3138*t4465;
  t4469 = t4467 + t4468;
  t4471 = t3138*t4461;
  t4472 = t3154*t4465;
  t4473 = t4471 + t4472;
  t4475 = t3176*t4469;
  t4476 = t3172*t4473;
  t4477 = t4475 + t4476;
  t4479 = t3172*t4469;
  t4480 = -1.*t3176*t4473;
  t4481 = t4479 + t4480;
  t4492 = t3023*t4350;
  t4493 = t3008*t4414;
  t4494 = t4492 + t4493;
  t4497 = -1.*t3094*t4494;
  t4498 = t4497 + t4460;
  t4500 = -1.*t3084*t4494;
  t4501 = t4500 + t4464;
  t4503 = -1.*t3154*t4498;
  t4504 = t3138*t4501;
  t4505 = t4503 + t4504;
  t4507 = t3138*t4498;
  t4508 = t3154*t4501;
  t4509 = t4507 + t4508;
  t4511 = t3176*t4505;
  t4512 = t3172*t4509;
  t4513 = t4511 + t4512;
  t4515 = t3172*t4505;
  t4516 = -1.*t3176*t4509;
  t4517 = t4515 + t4516;
  t4529 = t3084*t4494;
  t4530 = t3094*t4457;
  t4531 = t4529 + t4530;
  t4533 = -1.*t3138*t4531;
  t4534 = t4503 + t4533;
  t4536 = -1.*t3154*t4531;
  t4537 = t4507 + t4536;
  t4539 = t3176*t4534;
  t4540 = t3172*t4537;
  t4541 = t4539 + t4540;
  t4543 = t3172*t4534;
  t4544 = -1.*t3176*t4537;
  t4545 = t4543 + t4544;
  t4556 = t3154*t4498;
  t4557 = t3138*t4531;
  t4558 = t4556 + t4557;
  t4561 = -1.*t3176*t4558;
  t4562 = t4561 + t4540;
  t4564 = -1.*t3172*t4558;
  t4565 = t4564 + t4544;
  t4567 = -1.*t3194*t4562;
  t4577 = t3172*t4558;
  t4578 = t3176*t4537;
  t4579 = t4577 + t4578;
  t4571 = t3190*t4562;
  t4584 = -1.*t3194*t4579;
  t4585 = t4571 + t4584;
  t4146 = t3194*t4100;
  t4147 = t3190*t4117;
  t4148 = t4146 + t4147;
  t4588 = t3194*t4562;
  t4589 = t3190*t4579;
  t4590 = t4588 + t4589;
  t4597 = -0.766044*t4590;
  t4598 = 0.642788*t4585;
  t4599 = t4597 + t4598;
  t4600 = Power(t4599,2);
  t4601 = 0.642788*t4590;
  t4602 = 0.766044*t4585;
  t4603 = t4601 + t4602;
  t4604 = Power(t4603,2);
  t4605 = t4600 + t4604;
  t4606 = 1/t4605;
  t4211 = t3194*t4205;
  t4212 = t3190*t4209;
  t4213 = t4211 + t4212;
  t4215 = t3190*t4205;
  t4216 = -1.*t3194*t4209;
  t4217 = t4215 + t4216;
  t4591 = -0.642788*t4590;
  t4592 = -0.766044*t4585;
  t4593 = t4591 + t4592;
  t4275 = t3194*t4269;
  t4276 = t3190*t4273;
  t4277 = t4275 + t4276;
  t4279 = t3190*t4269;
  t4280 = -1.*t3194*t4273;
  t4281 = t4279 + t4280;
  t4335 = -1.*t3194*t4329;
  t4336 = t3190*t4333;
  t4337 = t4335 + t4336;
  t4339 = t3190*t4329;
  t4340 = t3194*t4333;
  t4341 = t4339 + t4340;
  t4389 = -1.*t3194*t4383;
  t4390 = t3190*t4387;
  t4391 = t4389 + t4390;
  t4393 = t3190*t4383;
  t4394 = t3194*t4387;
  t4395 = t4393 + t4394;
  t4440 = t3194*t4434;
  t4441 = t3190*t4438;
  t4442 = t4440 + t4441;
  t4444 = t3190*t4434;
  t4445 = -1.*t3194*t4438;
  t4446 = t4444 + t4445;
  t4483 = -1.*t3194*t4477;
  t4484 = t3190*t4481;
  t4485 = t4483 + t4484;
  t4487 = t3190*t4477;
  t4488 = t3194*t4481;
  t4489 = t4487 + t4488;
  t4519 = -1.*t3194*t4513;
  t4520 = t3190*t4517;
  t4521 = t4519 + t4520;
  t4523 = t3190*t4513;
  t4524 = t3194*t4517;
  t4525 = t4523 + t4524;
  t4547 = -1.*t3194*t4541;
  t4548 = t3190*t4545;
  t4549 = t4547 + t4548;
  t4551 = t3190*t4541;
  t4552 = t3194*t4545;
  t4553 = t4551 + t4552;
  t4568 = t3190*t4565;
  t4569 = t4567 + t4568;
  t4572 = t3194*t4565;
  t4573 = t4571 + t4572;
  t4581 = -1.*t3190*t4579;
  t4582 = t4567 + t4581;
  t4704 = Power(t3405,2);
  t4705 = Power(t3946,2);
  t4706 = t4704 + t4705;
  t4707 = 1/t4706;
  t4133 = t2875*t3938;
  t4134 = t2801*t3942;
  t4135 = t4133 + t4134;
  p_output1[0]=1.;
  p_output1[1]=-1.*t2769*t2879*t2882 + 0.135*t2724*t291 - 0.135*t2882*t2954*t2962 - 0.135*t2998*t3001 + 0.135*t3003*t3006 + t3031*t3037 + t3047*t3059 - 0.1305*(-1.*t2769*t2875*t2882 + t2801*t3059) + t3079*t3082 + t3102*t3111 + t3118*t3130 + t3159*t3162 + t3167*t3170 + t3178*t3181 + t3185*t3188 + t3196*t3199 + t3203*t3206 + 0.0306*(t3194*t3199 + t3190*t3206) - 1.1312*(t3190*t3199 - 1.*t3194*t3206);
  p_output1[2]=0.135*t2769*t291*t2954 - 1.*t2879*t291*t2962 + 0.135*t2769*t291*t2918*t2998 + 0.135*t2724*t2769*t291*t3003 + t3047*t3222 - 0.1305*(-1.*t2875*t291*t2962 + t2801*t3222) + t3031*t3226 + t3079*t3231 + t3102*t3239 + t3118*t3243 + t3159*t3247 + t3167*t3251 + t3178*t3255 + t3185*t3259 + t3196*t3263 + t3203*t3267 + 0.0306*(t3194*t3263 + t3190*t3267) - 1.1312*(t3190*t3263 - 1.*t3194*t3267);
  p_output1[3]=0.135*t2882*t2918 + 0.135*t2724*t291*t2962 + 0.135*t3003*t3282 - 0.135*t2998*t3286 - 0.1305*t2801*t3290 + t3047*t3290 - 1.*t2875*t3079*t3290 + t3031*t3296 + t3118*t3300 + t3102*t3304 + t3167*t3308 + t3159*t3312 + t3185*t3316 + t3178*t3320 + t3203*t3324 + t3196*t3328 - 1.1312*(-1.*t3194*t3324 + t3190*t3328) + 0.0306*(t3190*t3324 + t3194*t3328);
  p_output1[4]=0.135*t2980*t3286 - 0.135*t3003*t3341 - 0.1305*t2801*t3345 + t3047*t3345 - 1.*t2875*t3079*t3345 + t3031*t3350 + t3118*t3354 + t3102*t3358 + t3167*t3362 + t3159*t3366 + t3185*t3370 + t3178*t3374 + t3203*t3378 + t3196*t3382 - 1.1312*(-1.*t3194*t3378 + t3190*t3382) + 0.0306*(t3190*t3378 + t3194*t3382);
  p_output1[5]=t2769*t291*t3394 + t3398*t3401 + t3079*t3405 + t3008*t3102*t3405 - 1.*t3023*t3118*t3405 - 0.1305*t3411 + t3159*t3415 + t3167*t3419 + t3178*t3423 + t3185*t3427 + t3196*t3431 + t3203*t3435 + 0.0306*(t3194*t3431 + t3190*t3435) - 1.1312*(t3190*t3431 - 1.*t3194*t3435);
  p_output1[6]=t3345*t3447 + t3411*t3451 + t3118*t3455 + t3102*t3459 + t3167*t3463 + t3159*t3467 + t3185*t3471 + t3178*t3475 + t3203*t3479 + t3196*t3483 - 1.1312*(-1.*t3194*t3479 + t3190*t3483) + 0.0306*(t3190*t3479 + t3194*t3483);
  p_output1[7]=t3496*t3499 + t3459*t3502 + t3167*t3505 + t3159*t3508 + t3185*t3512 + t3178*t3516 + t3203*t3520 + t3196*t3524 - 1.1312*(-1.*t3194*t3520 + t3190*t3524) + 0.0306*(t3190*t3520 + t3194*t3524);
  p_output1[8]=t3505*t3536 + t3540*t3543 + t3185*t3546 + t3178*t3549 + t3203*t3553 + t3196*t3557 - 1.1312*(-1.*t3194*t3553 + t3190*t3557) + 0.0306*(t3190*t3553 + t3194*t3557);
  p_output1[9]=t3570*t3573 + t3549*t3576 + t3203*t3579 + t3196*t3582 - 1.1312*(t3190*t3582 + t3584) + 0.0306*(t3194*t3582 + t3588);
  p_output1[10]=t3579*t3594 + t3598*t3601 - 1.1312*(t3584 - 1.*t3190*t3601) + 0.0306*(t3588 - 1.*t3194*t3601);
  p_output1[11]=-1.;
  p_output1[12]=1.;
  p_output1[13]=-0.135*t2724*t291*t3610 + t2879*t3615 - 0.135*t2954*t3619 - 0.135*t2998*t3623 + 0.135*t3003*t3627 + t3031*t3631 + t3047*t3635 - 0.1305*(t2875*t3615 + t2801*t3635) + t3079*t3643 + t3102*t3647 + t3118*t3651 + t3159*t3655 + t3167*t3659 + t3178*t3663 + t3185*t3667 + t3196*t3671 + t3203*t3675 + 0.0306*(t3194*t3671 + t3190*t3675) - 1.1312*(t3190*t3671 - 1.*t3194*t3675);
  p_output1[14]=0.135*t2724*t2882*t3613 + t2769*t2879*t291*t3613 + 0.135*t291*t2954*t2962*t3613 - 0.135*t2998*t3691 + 0.135*t3003*t3695 + t3031*t3699 + t3047*t3703 - 0.1305*(t2769*t2875*t291*t3613 + t2801*t3703) + t3079*t3711 + t3102*t3715 + t3118*t3719 + t3159*t3723 + t3167*t3727 + t3178*t3731 + t3185*t3735 + t3196*t3739 + t3203*t3743 + 0.0306*(t3194*t3739 + t3190*t3743) - 1.1312*(t3190*t3739 - 1.*t3194*t3743);
  p_output1[15]=-0.135*t2954*t3756 - 0.135*t2918*t2998*t3756 - 0.135*t2724*t3003*t3756 + t2879*t3762 + t3031*t3766 + t3047*t3770 - 0.1305*(t2875*t3762 + t2801*t3770) + t3079*t3778 + t3102*t3782 + t3118*t3786 + t3159*t3790 + t3167*t3794 + t3178*t3798 + t3185*t3802 + t3196*t3806 + t3203*t3810 + 0.0306*(t3194*t3806 + t3190*t3810) - 1.1312*(t3190*t3806 - 1.*t3194*t3810);
  p_output1[16]=-0.135*t291*t2918*t3613 - 0.135*t2724*t3762 + 0.135*t3003*t3825 - 0.135*t2998*t3829 - 0.1305*t2801*t3833 + t3047*t3833 - 1.*t2875*t3079*t3833 + t3031*t3839 + t3118*t3843 + t3102*t3847 + t3167*t3851 + t3159*t3855 + t3185*t3859 + t3178*t3863 + t3203*t3867 + t3196*t3871 - 1.1312*(-1.*t3194*t3867 + t3190*t3871) + 0.0306*(t3190*t3867 + t3194*t3871);
  p_output1[17]=0.135*t2980*t3829 - 0.135*t3003*t3884 - 0.1305*t2801*t3888 + t3047*t3888 - 1.*t2875*t3079*t3888 + t3031*t3893 + t3118*t3897 + t3102*t3901 + t3167*t3905 + t3159*t3909 + t3185*t3913 + t3178*t3917 + t3203*t3921 + t3196*t3925 - 1.1312*(-1.*t3194*t3921 + t3190*t3925) + 0.0306*(t3190*t3921 + t3194*t3925);
  p_output1[18]=t3394*t3938 + t3398*t3942 + t3079*t3946 + t3008*t3102*t3946 - 1.*t3023*t3118*t3946 - 0.1305*t3952 + t3159*t3956 + t3167*t3960 + t3178*t3964 + t3185*t3968 + t3196*t3972 + t3203*t3976 + 0.0306*(t3194*t3972 + t3190*t3976) - 1.1312*(t3190*t3972 - 1.*t3194*t3976);
  p_output1[19]=t3447*t3888 + t3451*t3952 + t3118*t3991 + t3102*t3995 + t3167*t3999 + t3159*t4003 + t3185*t4007 + t3178*t4011 + t3203*t4015 + t3196*t4019 - 1.1312*(-1.*t3194*t4015 + t3190*t4019) + 0.0306*(t3190*t4015 + t3194*t4019);
  p_output1[20]=t3502*t3995 + t3496*t4032 + t3167*t4036 + t3159*t4039 + t3185*t4043 + t3178*t4047 + t3203*t4051 + t3196*t4055 - 1.1312*(-1.*t3194*t4051 + t3190*t4055) + 0.0306*(t3190*t4051 + t3194*t4055);
  p_output1[21]=t3536*t4036 + t3540*t4069 + t3185*t4072 + t3178*t4075 + t3203*t4079 + t3196*t4083 - 1.1312*(-1.*t3194*t4079 + t3190*t4083) + 0.0306*(t3190*t4079 + t3194*t4083);
  p_output1[22]=t3576*t4075 + t3570*t4096 + t3203*t4100 + t3196*t4103 - 1.1312*(t3190*t4103 + t4105) + 0.0306*(t3194*t4103 + t4109);
  p_output1[23]=t3594*t4100 + t3598*t4117 - 1.1312*(t4105 - 1.*t3190*t4117) + 0.0306*t4123;
  p_output1[24]=-1.;
  p_output1[25]=1.;
  p_output1[26]=-0.135*t2724*t291*t3613 - 0.135*t2954*t3762 + 0.135*t3003*t3829 - 0.135*t2998*t3884 + t3031*t3888 + t2879*t3938 + t3047*t3942 + t3079*t3952 + t3118*t3995 + t3102*t4032 + t3159*t4036 + t3167*t4069 + t3185*t4075 + t3178*t4096 + t3196*t4100 + t3203*t4117 - 1.1312*t4123 - 0.1305*t4135 + 0.0306*t4148;
  p_output1[27]=-0.135*t2724*t2882*t3610 - 1.*t2769*t2879*t291*t3610 - 0.135*t291*t2954*t2962*t3610 - 0.135*t2998*t4157 + 0.135*t3003*t4161 + t3031*t4165 + t3047*t4169 - 0.1305*(-1.*t2769*t2875*t291*t3610 + t2801*t4169) + t3079*t4177 + t3102*t4181 + t3118*t4185 + t3159*t4189 + t3167*t4193 + t3178*t4197 + t3185*t4201 + t3196*t4205 + t3203*t4209 + 0.0306*t4213 - 1.1312*t4217;
  p_output1[28]=-0.135*t2954*t3615 - 0.135*t2918*t2998*t3615 - 0.135*t2724*t3003*t3615 + t2879*t4225 + t3031*t4229 + t3047*t4233 - 0.1305*(t2875*t4225 + t2801*t4233) + t3079*t4241 + t3102*t4245 + t3118*t4249 + t3159*t4253 + t3167*t4257 + t3178*t4261 + t3185*t4265 + t3196*t4269 + t3203*t4273 + 0.0306*t4277 - 1.1312*t4281;
  p_output1[29]=0.135*t291*t2918*t3610 - 0.135*t2724*t4225 + 0.135*t3003*t4287 - 0.135*t2998*t4291 - 0.1305*t2801*t4295 + t3047*t4295 - 1.*t2875*t3079*t4295 + t3031*t4301 + t3118*t4305 + t3102*t4309 + t3167*t4313 + t3159*t4317 + t3185*t4321 + t3178*t4325 + t3203*t4329 + t3196*t4333 - 1.1312*t4337 + 0.0306*t4341;
  p_output1[30]=0.135*t2980*t4291 - 0.135*t3003*t4346 - 0.1305*t2801*t4350 + t3047*t4350 - 1.*t2875*t3079*t4350 + t3031*t4355 + t3118*t4359 + t3102*t4363 + t3167*t4367 + t3159*t4371 + t3185*t4375 + t3178*t4379 + t3203*t4383 + t3196*t4387 - 1.1312*t4391 + 0.0306*t4395;
  p_output1[31]=t3394*t4400 + t3398*t4404 + t3079*t4408 + t3008*t3102*t4408 - 1.*t3023*t3118*t4408 - 0.1305*t4414 + t3159*t4418 + t3167*t4422 + t3178*t4426 + t3185*t4430 + t3196*t4434 + t3203*t4438 + 0.0306*t4442 - 1.1312*t4446;
  p_output1[32]=t3447*t4350 + t3451*t4414 + t3118*t4453 + t3102*t4457 + t3167*t4461 + t3159*t4465 + t3185*t4469 + t3178*t4473 + t3203*t4477 + t3196*t4481 - 1.1312*t4485 + 0.0306*t4489;
  p_output1[33]=t3502*t4457 + t3496*t4494 + t3167*t4498 + t3159*t4501 + t3185*t4505 + t3178*t4509 + t3203*t4513 + t3196*t4517 - 1.1312*t4521 + 0.0306*t4525;
  p_output1[34]=t3536*t4498 + t3540*t4531 + t3185*t4534 + t3178*t4537 + t3203*t4541 + t3196*t4545 - 1.1312*t4549 + 0.0306*t4553;
  p_output1[35]=t3576*t4537 + t3570*t4558 + t3203*t4562 + t3196*t4565 - 1.1312*t4569 + 0.0306*t4573;
  p_output1[36]=t3594*t4562 + t3598*t4579 - 1.1312*t4582 + 0.0306*t4585;
  p_output1[37]=-1.;
  p_output1[38]=(0.642788*t4123 - 0.766044*t4148)*t4593*t4606 + (0.766044*t4123 + 0.642788*t4148)*t4599*t4606;
  p_output1[39]=(-0.766044*t4213 + 0.642788*t4217)*t4593*t4606 + (0.642788*t4213 + 0.766044*t4217)*t4599*t4606;
  p_output1[40]=(-0.766044*t4277 + 0.642788*t4281)*t4593*t4606 + (0.642788*t4277 + 0.766044*t4281)*t4599*t4606;
  p_output1[41]=(0.642788*t4337 - 0.766044*t4341)*t4593*t4606 + (0.766044*t4337 + 0.642788*t4341)*t4599*t4606;
  p_output1[42]=(0.642788*t4391 - 0.766044*t4395)*t4593*t4606 + (0.766044*t4391 + 0.642788*t4395)*t4599*t4606;
  p_output1[43]=(-0.766044*t4442 + 0.642788*t4446)*t4593*t4606 + (0.642788*t4442 + 0.766044*t4446)*t4599*t4606;
  p_output1[44]=(0.642788*t4485 - 0.766044*t4489)*t4593*t4606 + (0.766044*t4485 + 0.642788*t4489)*t4599*t4606;
  p_output1[45]=(0.642788*t4521 - 0.766044*t4525)*t4593*t4606 + (0.766044*t4521 + 0.642788*t4525)*t4599*t4606;
  p_output1[46]=(0.642788*t4549 - 0.766044*t4553)*t4593*t4606 + (0.766044*t4549 + 0.642788*t4553)*t4599*t4606;
  p_output1[47]=(0.642788*t4569 - 0.766044*t4573)*t4593*t4606 + (0.766044*t4569 + 0.642788*t4573)*t4599*t4606;
  p_output1[48]=(0.642788*t4582 + t4592)*t4593*t4606 + (0.766044*t4582 + t4598)*t4599*t4606;
  p_output1[49]=-1.;
  p_output1[50]=t3405*(-1.*t2875*t3615 - 1.*t2801*t3635)*t4707;
  p_output1[51]=t3405*(-1.*t2769*t2875*t291*t3613 - 1.*t2801*t3703)*t4707 + (t2769*t2875*t2882 - 1.*t2801*t3059)*t4135*t4707;
  p_output1[52]=t3405*(-1.*t2875*t3762 - 1.*t2801*t3770)*t4707 + (t2875*t291*t2962 - 1.*t2801*t3222)*t4135*t4707;
  p_output1[53]=-1.*t2801*t3405*t3833*t4707 - 1.*t2801*t3290*t4135*t4707;
  p_output1[54]=-1.*t2801*t3405*t3888*t4707 - 1.*t2801*t3345*t4135*t4707;
  p_output1[55]=t3405*(-1.*t2801*t3938 + t2875*t3942)*t4707 + (-1.*t2769*t2801*t291 + t2875*t3401)*t4135*t4707;
  p_output1[56]=-1.;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 5 && ncols == 1) && 
      !(mrows == 1 && ncols == 5))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 57, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_h_RightToeBottom_RightStance.hh"

namespace Pattern[Cassie, Blank[oneStep]]
{

void J_h_RightToeBottom_RightStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
