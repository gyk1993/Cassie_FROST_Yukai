/*
 * Automatically Generated from Mathematica.
 * Tue 13 Jun 2017 13:36:57 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1241;
  double t1870;
  double t2027;
  double t1875;
  double t2033;
  double t1245;
  double t1510;
  double t2268;
  double t2765;
  double t2854;
  double t2892;
  double t3431;
  double t3312;
  double t3318;
  double t3345;
  double t3026;
  double t3665;
  double t3682;
  double t3721;
  double t1728;
  double t1740;
  double t1769;
  double t1835;
  double t1989;
  double t2097;
  double t2230;
  double t4123;
  double t4175;
  double t4217;
  double t3807;
  double t3827;
  double t3852;
  double t3860;
  double t3966;
  double t4013;
  double t4031;
  double t4714;
  double t4745;
  double t4753;
  double t4788;
  double t4884;
  double t4931;
  double t5295;
  double t5374;
  double t5434;
  double t5467;
  double t5629;
  double t5636;
  double t5641;
  double t5669;
  double t5706;
  double t5721;
  double t5749;
  double t5794;
  double t5855;
  double t6013;
  double t6126;
  double t6155;
  double t6210;
  double t6276;
  double t6294;
  double t6333;
  double t6406;
  double t6456;
  double t6474;
  double t6476;
  double t6498;
  double t6515;
  double t6533;
  double t6576;
  double t6580;
  double t6585;
  double t6601;
  double t6617;
  double t6639;
  double t6642;
  double t6699;
  double t6704;
  double t6717;
  double t1519;
  double t1557;
  double t1811;
  double t1850;
  double t1857;
  double t2377;
  double t2507;
  double t2682;
  double t2685;
  double t3050;
  double t3070;
  double t3130;
  double t3203;
  double t6841;
  double t6848;
  double t6854;
  double t3493;
  double t3596;
  double t3854;
  double t3888;
  double t3903;
  double t6862;
  double t6873;
  double t6878;
  double t6890;
  double t6893;
  double t6895;
  double t4097;
  double t4110;
  double t4120;
  double t6807;
  double t6818;
  double t6827;
  double t6967;
  double t6978;
  double t6989;
  double t4683;
  double t4686;
  double t4705;
  double t5054;
  double t5320;
  double t5357;
  double t6902;
  double t6924;
  double t6938;
  double t7061;
  double t7105;
  double t7109;
  double t5516;
  double t5530;
  double t5571;
  double t5735;
  double t5776;
  double t5778;
  double t7143;
  double t7149;
  double t7154;
  double t7170;
  double t7192;
  double t7222;
  double t6056;
  double t6059;
  double t6068;
  double t6395;
  double t6414;
  double t6432;
  double t7269;
  double t7297;
  double t7298;
  double t7329;
  double t7343;
  double t7347;
  double t6478;
  double t6485;
  double t6486;
  double t6599;
  double t6603;
  double t6611;
  double t7351;
  double t7359;
  double t7373;
  double t7409;
  double t7412;
  double t7419;
  double t6660;
  double t6663;
  double t6680;
  double t7449;
  double t7484;
  double t7491;
  double t7515;
  double t7516;
  double t7521;
  double t7689;
  double t7696;
  double t7703;
  double t7707;
  double t7743;
  double t7754;
  double t7765;
  double t7771;
  double t7785;
  double t7679;
  double t7682;
  double t7684;
  double t7837;
  double t7842;
  double t7847;
  double t7793;
  double t7813;
  double t7816;
  double t7858;
  double t7861;
  double t7863;
  double t7866;
  double t7877;
  double t7880;
  double t7890;
  double t7893;
  double t7895;
  double t7932;
  double t7937;
  double t7946;
  double t7950;
  double t7956;
  double t7959;
  double t7964;
  double t7965;
  double t7983;
  double t7992;
  double t7993;
  double t7994;
  double t8006;
  double t8017;
  double t8018;
  double t8025;
  double t8029;
  double t8031;
  double t6792;
  double t6839;
  double t6856;
  double t6885;
  double t6897;
  double t6958;
  double t6999;
  double t7014;
  double t7024;
  double t7032;
  double t7052;
  double t7141;
  double t7161;
  double t7254;
  double t7324;
  double t7349;
  double t7398;
  double t7423;
  double t7493;
  double t7523;
  double t7525;
  double t7532;
  double t7581;
  double t7582;
  double t7586;
  double t7600;
  double t7610;
  double t7637;
  double t8103;
  double t8104;
  double t8108;
  double t8112;
  double t8135;
  double t8143;
  double t8160;
  double t8170;
  double t8188;
  double t8149;
  double t8154;
  double t8156;
  double t8247;
  double t8254;
  double t8268;
  double t8283;
  double t8289;
  double t8309;
  double t8314;
  double t8317;
  double t8324;
  double t8360;
  double t8364;
  double t8365;
  double t8392;
  double t8397;
  double t8400;
  double t8408;
  double t8409;
  double t8412;
  double t8421;
  double t8425;
  double t8429;
  double t8449;
  double t8452;
  double t8453;
  double t8455;
  double t8461;
  double t8464;
  double t1617;
  double t2234;
  double t2988;
  double t3353;
  double t3741;
  double t4072;
  double t4261;
  double t4313;
  double t4329;
  double t4394;
  double t4630;
  double t4783;
  double t5497;
  double t5659;
  double t6055;
  double t6241;
  double t6477;
  double t6556;
  double t6645;
  double t6719;
  double t6724;
  double t6730;
  double t6737;
  double t6739;
  double t6751;
  double t6756;
  double t6765;
  double t6767;
  double t6780;
  double t8074;
  double t8082;
  double t8089;
  double t8091;
  double t8109;
  double t8144;
  double t8157;
  double t8189;
  double t8192;
  double t8195;
  double t8196;
  double t8203;
  double t8278;
  double t8310;
  double t8349;
  double t8385;
  double t8401;
  double t8413;
  double t8433;
  double t8454;
  double t8466;
  double t8476;
  double t8477;
  double t8479;
  double t8485;
  double t8489;
  double t8492;
  double t8494;
  double t8506;
  double t8508;
  double t8565;
  double t8571;
  double t8573;
  double t8580;
  double t8584;
  double t8585;
  double t8608;
  double t8609;
  double t8610;
  double t8591;
  double t8597;
  double t8604;
  double t8636;
  double t8637;
  double t8638;
  double t8642;
  double t8643;
  double t8644;
  double t8649;
  double t8652;
  double t8654;
  double t8656;
  double t8658;
  double t8659;
  double t8681;
  double t8682;
  double t8683;
  double t8687;
  double t8688;
  double t8691;
  double t8693;
  double t8694;
  double t8695;
  double t8704;
  double t8706;
  double t8712;
  double t8721;
  double t8723;
  double t8727;
  double t8794;
  double t8795;
  double t8796;
  double t8799;
  double t8801;
  double t8802;
  double t8812;
  double t8813;
  double t8814;
  double t8805;
  double t8808;
  double t8809;
  double t8845;
  double t8849;
  double t8850;
  double t8853;
  double t8854;
  double t8858;
  double t8869;
  double t8870;
  double t8872;
  double t8876;
  double t8894;
  double t8900;
  double t8907;
  double t8908;
  double t8915;
  double t8920;
  double t8923;
  double t8926;
  double t8932;
  double t8933;
  double t8935;
  double t8962;
  double t8966;
  double t8970;
  double t9006;
  double t9007;
  double t9008;
  double t9097;
  double t9100;
  double t9108;
  double t9115;
  double t9117;
  double t9118;
  double t9144;
  double t9169;
  double t9174;
  double t9126;
  double t9127;
  double t9132;
  double t9195;
  double t9196;
  double t9197;
  double t9205;
  double t9206;
  double t9207;
  double t9217;
  double t9224;
  double t9226;
  double t9228;
  double t9231;
  double t9234;
  double t9242;
  double t9244;
  double t9245;
  double t9250;
  double t9251;
  double t9252;
  double t9259;
  double t9262;
  double t9263;
  double t9274;
  double t9275;
  double t9279;
  double t9285;
  double t9288;
  double t9290;
  double t8515;
  double t8516;
  double t8518;
  double t8526;
  double t8533;
  double t9334;
  double t9336;
  double t9340;
  double t9351;
  double t9352;
  double t9356;
  double t9381;
  double t9383;
  double t9384;
  double t9416;
  double t9417;
  double t9418;
  double t9431;
  double t9437;
  double t9438;
  double t9442;
  double t9445;
  double t9455;
  double t9466;
  double t9469;
  double t9470;
  double t9482;
  double t9485;
  double t9496;
  double t9514;
  double t9517;
  double t9518;
  double t9528;
  double t9532;
  double t9534;
  double t9539;
  double t9542;
  double t9551;
  double t9754;
  double t9755;
  double t9762;
  double t9715;
  double t9728;
  double t9736;
  double t9805;
  double t9819;
  double t9822;
  double t9832;
  double t9837;
  double t9842;
  double t9863;
  double t9864;
  double t9874;
  double t9879;
  double t9881;
  double t9883;
  double t9888;
  double t9892;
  double t9894;
  double t9909;
  double t9912;
  double t9918;
  double t9928;
  double t9935;
  double t9937;
  double t9942;
  double t9944;
  double t9947;
  double t9963;
  double t9964;
  double t9972;
  double t10083;
  double t10088;
  double t10095;
  double t10182;
  double t10191;
  double t10192;
  double t10164;
  double t10171;
  double t10173;
  double t10207;
  double t10216;
  double t10221;
  double t10229;
  double t10234;
  double t10237;
  double t10240;
  double t10252;
  double t10254;
  double t10262;
  double t10272;
  double t10273;
  double t10288;
  double t10320;
  double t10325;
  double t10330;
  double t10340;
  double t10345;
  double t10363;
  double t10385;
  double t10400;
  double t10418;
  double t10433;
  double t10444;
  double t10488;
  double t10491;
  double t10494;
  double t10603;
  double t10614;
  double t10620;
  double t10659;
  double t10668;
  double t10687;
  double t10689;
  double t10693;
  double t10695;
  double t10702;
  double t10705;
  double t10709;
  double t10729;
  double t10731;
  double t10742;
  double t10746;
  double t10754;
  double t10777;
  double t10783;
  double t10786;
  double t10802;
  double t10804;
  double t10813;
  double t10837;
  double t10838;
  double t10859;
  double t10873;
  double t10880;
  double t10887;
  double t10898;
  double t10907;
  double t10914;
  double t10977;
  double t10979;
  double t11016;
  double t11017;
  double t11065;
  double t11072;
  double t11093;
  double t11138;
  double t11139;
  double t11142;
  double t11153;
  double t11155;
  double t11164;
  double t11173;
  double t11174;
  double t11180;
  double t11197;
  double t11198;
  double t11199;
  double t11205;
  double t11209;
  double t11214;
  double t11225;
  double t11226;
  double t11228;
  double t11231;
  double t11232;
  double t11236;
  double t11244;
  double t11255;
  double t11256;
  double t11358;
  double t11359;
  double t11364;
  double t11410;
  double t11411;
  double t11423;
  double t11429;
  double t11432;
  double t11434;
  double t11435;
  double t11449;
  double t11455;
  double t11460;
  double t11465;
  double t11478;
  double t11481;
  double t11494;
  double t11504;
  double t11507;
  double t11509;
  double t11533;
  double t11534;
  double t11535;
  double t11539;
  double t11553;
  double t11565;
  double t11574;
  double t11575;
  double t11581;
  double t11584;
  double t11589;
  double t11594;
  double t11694;
  double t11697;
  double t11706;
  double t11709;
  double t11711;
  double t11714;
  double t11715;
  double t11719;
  double t11723;
  double t11736;
  double t11738;
  double t11747;
  double t11761;
  double t11763;
  double t11773;
  double t11787;
  double t11796;
  double t11808;
  double t11812;
  double t11815;
  double t11826;
  double t11827;
  double t11832;
  double t11839;
  double t11844;
  double t11849;
  double t11944;
  double t11954;
  double t11959;
  double t11960;
  double t11962;
  double t11972;
  double t11979;
  double t11981;
  double t11986;
  double t11991;
  double t11997;
  double t12001;
  double t12006;
  double t12035;
  double t12081;
  double t12107;
  double t12113;
  double t12134;
  double t12135;
  double t12139;
  double t12146;
  double t12150;
  double t12153;
  double t12156;
  double t12159;
  double t12161;
  double t12227;
  double t12229;
  double t12235;
  double t12240;
  double t12243;
  double t12246;
  double t12254;
  double t12256;
  double t12266;
  double t12268;
  double t12274;
  double t12285;
  double t12286;
  double t12288;
  double t12304;
  double t12314;
  double t12316;
  double t12337;
  double t12342;
  double t12343;
  double t12349;
  double t12351;
  double t12355;
  double t12368;
  double t12372;
  double t12383;
  double t12493;
  double t12501;
  double t12504;
  double t12550;
  double t12553;
  double t12561;
  double t12565;
  double t12566;
  double t12569;
  double t12575;
  double t12576;
  double t12580;
  double t12595;
  double t12596;
  double t12598;
  double t12602;
  double t12613;
  double t12627;
  double t12651;
  double t12659;
  double t12663;
  double t12466;
  double t12467;
  double t12475;
  double t12477;
  double t12478;
  double t12699;
  double t12701;
  double t12704;
  double t12726;
  double t12727;
  double t12728;
  double t12730;
  double t12731;
  double t12732;
  double t12734;
  double t12736;
  double t12741;
  double t12750;
  double t12753;
  double t12754;
  double t12760;
  double t12761;
  double t12762;
  double t12771;
  double t12772;
  double t12780;
  double t12817;
  double t12823;
  double t12826;
  double t12843;
  double t12848;
  double t12854;
  double t12857;
  double t12860;
  double t12861;
  double t12868;
  double t12870;
  double t12871;
  double t12876;
  double t12879;
  double t12880;
  double t12885;
  double t12886;
  double t12892;
  double t12895;
  double t12897;
  double t12900;
  double t12979;
  double t12982;
  double t12984;
  double t12987;
  double t12991;
  double t12999;
  double t13000;
  double t13003;
  double t13005;
  double t13006;
  double t13009;
  double t13013;
  double t13026;
  double t13030;
  double t13048;
  double t13050;
  double t13062;
  double t13068;
  double t13078;
  double t13082;
  double t12952;
  double t12957;
  double t12962;
  double t12963;
  double t12972;
  double t13170;
  double t13174;
  double t13175;
  double t13185;
  double t13187;
  double t13195;
  double t13197;
  double t13201;
  double t13207;
  double t13212;
  double t13213;
  double t13215;
  double t13216;
  double t13217;
  double t13221;
  double t13228;
  double t13229;
  double t13232;
  double t13238;
  double t13239;
  double t13284;
  double t13288;
  double t13290;
  double t13298;
  double t13305;
  double t13308;
  double t13312;
  double t13314;
  double t13322;
  double t13323;
  double t13324;
  double t13326;
  double t13327;
  double t13328;
  double t13332;
  double t13333;
  double t13335;
  double t13342;
  double t13343;
  double t13347;
  double t13395;
  double t13396;
  double t13400;
  double t13401;
  double t13404;
  double t13409;
  double t13410;
  double t13415;
  double t13416;
  double t13418;
  double t13421;
  double t13429;
  double t13430;
  double t13378;
  double t13382;
  double t13383;
  double t13388;
  double t13390;
  double t13471;
  double t13472;
  double t13476;
  double t13480;
  double t13482;
  double t13484;
  double t13485;
  double t13487;
  double t13488;
  double t13490;
  double t13492;
  double t13493;
  double t13495;
  double t13522;
  double t13523;
  double t13525;
  double t13526;
  double t13528;
  double t13530;
  double t13531;
  double t13536;
  double t13541;
  double t13543;
  double t13548;
  double t13554;
  double t13558;
  double t13595;
  double t13600;
  double t13605;
  double t13606;
  double t13609;
  double t13610;
  double t13612;
  double t13584;
  double t13586;
  double t13589;
  double t13591;
  double t13592;
  double t13635;
  double t13636;
  double t13643;
  double t13649;
  double t13663;
  double t13666;
  double t13670;
  double t13736;
  double t13738;
  double t13752;
  double t13753;
  double t13764;
  double t13770;
  double t13786;
  double t13853;
  double t13855;
  double t13835;
  double t13837;
  double t13844;
  double t13846;
  double t13848;
  double t13889;
  double t13905;
  double t14026;
  double t14032;
  double t13858;
  double t14094;
  double t14099;
  double t14103;
  double t14104;
  double t14106;
  double t13918;
  double t14037;
  t1241 = Cos(var1[3]);
  t1870 = Cos(var1[5]);
  t2027 = Sin(var1[3]);
  t1875 = Sin(var1[4]);
  t2033 = Sin(var1[5]);
  t1245 = Cos(var1[4]);
  t1510 = Sin(var1[14]);
  t2268 = Cos(var1[14]);
  t2765 = t1870*t2027;
  t2854 = t1241*t1875*t2033;
  t2892 = t2765 + t2854;
  t3431 = Sin(var1[15]);
  t3312 = t1241*t1245*t1510;
  t3318 = t2268*t2892;
  t3345 = t3312 + t3318;
  t3026 = Cos(var1[15]);
  t3665 = t2268*t1241*t1245;
  t3682 = -1.*t1510*t2892;
  t3721 = t3665 + t3682;
  t1728 = Cos(var1[16]);
  t1740 = -1.*t1728;
  t1769 = 1. + t1740;
  t1835 = Sin(var1[16]);
  t1989 = -1.*t1241*t1870*t1875;
  t2097 = t2027*t2033;
  t2230 = t1989 + t2097;
  t4123 = t3026*t3345;
  t4175 = t3431*t3721;
  t4217 = t4123 + t4175;
  t3807 = Cos(var1[17]);
  t3827 = -1.*t3807;
  t3852 = 1. + t3827;
  t3860 = Sin(var1[17]);
  t3966 = -1.*t3431*t3345;
  t4013 = t3026*t3721;
  t4031 = t3966 + t4013;
  t4714 = t1728*t2230;
  t4745 = -1.*t1835*t4217;
  t4753 = t4714 + t4745;
  t4788 = Cos(var1[18]);
  t4884 = -1.*t4788;
  t4931 = 1. + t4884;
  t5295 = Sin(var1[18]);
  t5374 = t3860*t4031;
  t5434 = t3807*t4753;
  t5467 = t5374 + t5434;
  t5629 = t3807*t4031;
  t5636 = -1.*t3860*t4753;
  t5641 = t5629 + t5636;
  t5669 = Cos(var1[19]);
  t5706 = -1.*t5669;
  t5721 = 1. + t5706;
  t5749 = Sin(var1[19]);
  t5794 = -1.*t5295*t5467;
  t5855 = t4788*t5641;
  t6013 = t5794 + t5855;
  t6126 = t4788*t5467;
  t6155 = t5295*t5641;
  t6210 = t6126 + t6155;
  t6276 = Cos(var1[20]);
  t6294 = -1.*t6276;
  t6333 = 1. + t6294;
  t6406 = Sin(var1[20]);
  t6456 = t5749*t6013;
  t6474 = t5669*t6210;
  t6476 = t6456 + t6474;
  t6498 = t5669*t6013;
  t6515 = -1.*t5749*t6210;
  t6533 = t6498 + t6515;
  t6576 = Cos(var1[21]);
  t6580 = -1.*t6576;
  t6585 = 1. + t6580;
  t6601 = Sin(var1[21]);
  t6617 = -1.*t6406*t6476;
  t6639 = t6276*t6533;
  t6642 = t6617 + t6639;
  t6699 = t6276*t6476;
  t6704 = t6406*t6533;
  t6717 = t6699 + t6704;
  t1519 = 0.135*t1510;
  t1557 = 0. + t1519;
  t1811 = -0.049*t1769;
  t1850 = 0.135*t1835;
  t1857 = 0. + t1811 + t1850;
  t2377 = -1.*t2268;
  t2507 = 1. + t2377;
  t2682 = -0.135*t2507;
  t2685 = 0. + t2682;
  t3050 = -1.*t3026;
  t3070 = 1. + t3050;
  t3130 = -0.135*t3070;
  t3203 = 0. + t3130;
  t6841 = t1241*t1870;
  t6848 = -1.*t2027*t1875*t2033;
  t6854 = t6841 + t6848;
  t3493 = 0.135*t3431;
  t3596 = 0. + t3493;
  t3854 = -0.09*t3852;
  t3888 = 0.049*t3860;
  t3903 = 0. + t3854 + t3888;
  t6862 = -1.*t1245*t1510*t2027;
  t6873 = t2268*t6854;
  t6878 = t6862 + t6873;
  t6890 = -1.*t2268*t1245*t2027;
  t6893 = -1.*t1510*t6854;
  t6895 = t6890 + t6893;
  t4097 = -0.135*t1769;
  t4110 = -0.049*t1835;
  t4120 = 0. + t4097 + t4110;
  t6807 = t1870*t2027*t1875;
  t6818 = t1241*t2033;
  t6827 = t6807 + t6818;
  t6967 = t3026*t6878;
  t6978 = t3431*t6895;
  t6989 = t6967 + t6978;
  t4683 = -0.049*t3852;
  t4686 = -0.09*t3860;
  t4705 = 0. + t4683 + t4686;
  t5054 = -0.049*t4931;
  t5320 = -0.21*t5295;
  t5357 = 0. + t5054 + t5320;
  t6902 = -1.*t3431*t6878;
  t6924 = t3026*t6895;
  t6938 = t6902 + t6924;
  t7061 = t1728*t6827;
  t7105 = -1.*t1835*t6989;
  t7109 = t7061 + t7105;
  t5516 = -0.21*t4931;
  t5530 = 0.049*t5295;
  t5571 = 0. + t5516 + t5530;
  t5735 = -0.2707*t5721;
  t5776 = 0.0016*t5749;
  t5778 = 0. + t5735 + t5776;
  t7143 = t3860*t6938;
  t7149 = t3807*t7109;
  t7154 = t7143 + t7149;
  t7170 = t3807*t6938;
  t7192 = -1.*t3860*t7109;
  t7222 = t7170 + t7192;
  t6056 = -0.0016*t5721;
  t6059 = -0.2707*t5749;
  t6068 = 0. + t6056 + t6059;
  t6395 = 0.0184*t6333;
  t6414 = -0.7055*t6406;
  t6432 = 0. + t6395 + t6414;
  t7269 = -1.*t5295*t7154;
  t7297 = t4788*t7222;
  t7298 = t7269 + t7297;
  t7329 = t4788*t7154;
  t7343 = t5295*t7222;
  t7347 = t7329 + t7343;
  t6478 = -0.7055*t6333;
  t6485 = -0.0184*t6406;
  t6486 = 0. + t6478 + t6485;
  t6599 = -1.1135*t6585;
  t6603 = 0.0216*t6601;
  t6611 = 0. + t6599 + t6603;
  t7351 = t5749*t7298;
  t7359 = t5669*t7347;
  t7373 = t7351 + t7359;
  t7409 = t5669*t7298;
  t7412 = -1.*t5749*t7347;
  t7419 = t7409 + t7412;
  t6660 = -0.0216*t6585;
  t6663 = -1.1135*t6601;
  t6680 = 0. + t6660 + t6663;
  t7449 = -1.*t6406*t7373;
  t7484 = t6276*t7419;
  t7491 = t7449 + t7484;
  t7515 = t6276*t7373;
  t7516 = t6406*t7419;
  t7521 = t7515 + t7516;
  t7689 = -1.*t1870*t2027;
  t7696 = -1.*t1241*t1875*t2033;
  t7703 = t7689 + t7696;
  t7707 = -1.*t1241*t1245*t1510;
  t7743 = t2268*t7703;
  t7754 = t7707 + t7743;
  t7765 = -1.*t2268*t1241*t1245;
  t7771 = -1.*t1510*t7703;
  t7785 = t7765 + t7771;
  t7679 = t1241*t1870*t1875;
  t7682 = -1.*t2027*t2033;
  t7684 = t7679 + t7682;
  t7837 = t3026*t7754;
  t7842 = t3431*t7785;
  t7847 = t7837 + t7842;
  t7793 = -1.*t3431*t7754;
  t7813 = t3026*t7785;
  t7816 = t7793 + t7813;
  t7858 = t1728*t7684;
  t7861 = -1.*t1835*t7847;
  t7863 = t7858 + t7861;
  t7866 = t3860*t7816;
  t7877 = t3807*t7863;
  t7880 = t7866 + t7877;
  t7890 = t3807*t7816;
  t7893 = -1.*t3860*t7863;
  t7895 = t7890 + t7893;
  t7932 = -1.*t5295*t7880;
  t7937 = t4788*t7895;
  t7946 = t7932 + t7937;
  t7950 = t4788*t7880;
  t7956 = t5295*t7895;
  t7959 = t7950 + t7956;
  t7964 = t5749*t7946;
  t7965 = t5669*t7959;
  t7983 = t7964 + t7965;
  t7992 = t5669*t7946;
  t7993 = -1.*t5749*t7959;
  t7994 = t7992 + t7993;
  t8006 = -1.*t6406*t7983;
  t8017 = t6276*t7994;
  t8018 = t8006 + t8017;
  t8025 = t6276*t7983;
  t8029 = t6406*t7994;
  t8031 = t8025 + t8029;
  t6792 = -1.*t1245*t1557*t2027;
  t6839 = t1857*t6827;
  t6856 = t2685*t6854;
  t6885 = t3203*t6878;
  t6897 = t3596*t6895;
  t6958 = t3903*t6938;
  t6999 = t4120*t6989;
  t7014 = t1835*t6827;
  t7024 = t1728*t6989;
  t7032 = t7014 + t7024;
  t7052 = -0.1305*t7032;
  t7141 = t4705*t7109;
  t7161 = t5357*t7154;
  t7254 = t5571*t7222;
  t7324 = t5778*t7298;
  t7349 = t6068*t7347;
  t7398 = t6432*t7373;
  t7423 = t6486*t7419;
  t7493 = t6611*t7491;
  t7523 = t6680*t7521;
  t7525 = t6601*t7491;
  t7532 = t6576*t7521;
  t7581 = t7525 + t7532;
  t7582 = 0.0306*t7581;
  t7586 = t6576*t7491;
  t7600 = -1.*t6601*t7521;
  t7610 = t7586 + t7600;
  t7637 = -1.1312*t7610;
  t8103 = t1510*t1875;
  t8104 = -1.*t2268*t1245*t2033;
  t8108 = t8103 + t8104;
  t8112 = t2268*t1875;
  t8135 = t1245*t1510*t2033;
  t8143 = t8112 + t8135;
  t8160 = t3026*t8108;
  t8170 = t3431*t8143;
  t8188 = t8160 + t8170;
  t8149 = -1.*t3431*t8108;
  t8154 = t3026*t8143;
  t8156 = t8149 + t8154;
  t8247 = t1728*t1245*t1870;
  t8254 = -1.*t1835*t8188;
  t8268 = t8247 + t8254;
  t8283 = t3860*t8156;
  t8289 = t3807*t8268;
  t8309 = t8283 + t8289;
  t8314 = t3807*t8156;
  t8317 = -1.*t3860*t8268;
  t8324 = t8314 + t8317;
  t8360 = -1.*t5295*t8309;
  t8364 = t4788*t8324;
  t8365 = t8360 + t8364;
  t8392 = t4788*t8309;
  t8397 = t5295*t8324;
  t8400 = t8392 + t8397;
  t8408 = t5749*t8365;
  t8409 = t5669*t8400;
  t8412 = t8408 + t8409;
  t8421 = t5669*t8365;
  t8425 = -1.*t5749*t8400;
  t8429 = t8421 + t8425;
  t8449 = -1.*t6406*t8412;
  t8452 = t6276*t8429;
  t8453 = t8449 + t8452;
  t8455 = t6276*t8412;
  t8461 = t6406*t8429;
  t8464 = t8455 + t8461;
  t1617 = t1241*t1245*t1557;
  t2234 = t1857*t2230;
  t2988 = t2685*t2892;
  t3353 = t3203*t3345;
  t3741 = t3596*t3721;
  t4072 = t3903*t4031;
  t4261 = t4120*t4217;
  t4313 = t1835*t2230;
  t4329 = t1728*t4217;
  t4394 = t4313 + t4329;
  t4630 = -0.1305*t4394;
  t4783 = t4705*t4753;
  t5497 = t5357*t5467;
  t5659 = t5571*t5641;
  t6055 = t5778*t6013;
  t6241 = t6068*t6210;
  t6477 = t6432*t6476;
  t6556 = t6486*t6533;
  t6645 = t6611*t6642;
  t6719 = t6680*t6717;
  t6724 = t6601*t6642;
  t6730 = t6576*t6717;
  t6737 = t6724 + t6730;
  t6739 = 0.0306*t6737;
  t6751 = t6576*t6642;
  t6756 = -1.*t6601*t6717;
  t6765 = t6751 + t6756;
  t6767 = -1.1312*t6765;
  t6780 = 0. + t1617 + t2234 + t2988 + t3353 + t3741 + t4072 + t4261 + t4630 + t4783 + t5497 + t5659 + t6055 + t6241 + t6477 + t6556 + t6645 + t6719 + t6739 + t6767;
  t8074 = 0. + t6792 + t6839 + t6856 + t6885 + t6897 + t6958 + t6999 + t7052 + t7141 + t7161 + t7254 + t7324 + t7349 + t7398 + t7423 + t7493 + t7523 + t7582 + t7637;
  t8082 = t1245*t1870*t1857;
  t8089 = t1557*t1875;
  t8091 = -1.*t2685*t1245*t2033;
  t8109 = t3203*t8108;
  t8144 = t3596*t8143;
  t8157 = t3903*t8156;
  t8189 = t4120*t8188;
  t8192 = t1245*t1870*t1835;
  t8195 = t1728*t8188;
  t8196 = t8192 + t8195;
  t8203 = -0.1305*t8196;
  t8278 = t4705*t8268;
  t8310 = t5357*t8309;
  t8349 = t5571*t8324;
  t8385 = t5778*t8365;
  t8401 = t6068*t8400;
  t8413 = t6432*t8412;
  t8433 = t6486*t8429;
  t8454 = t6611*t8453;
  t8466 = t6680*t8464;
  t8476 = t6601*t8453;
  t8477 = t6576*t8464;
  t8479 = t8476 + t8477;
  t8485 = 0.0306*t8479;
  t8489 = t6576*t8453;
  t8492 = -1.*t6601*t8464;
  t8494 = t8489 + t8492;
  t8506 = -1.1312*t8494;
  t8508 = 0. + t8082 + t8089 + t8091 + t8109 + t8144 + t8157 + t8189 + t8203 + t8278 + t8310 + t8349 + t8385 + t8401 + t8413 + t8433 + t8454 + t8466 + t8485 + t8506;
  t8565 = t1245*t1510;
  t8571 = t2268*t1875*t2033;
  t8573 = t8565 + t8571;
  t8580 = t2268*t1245;
  t8584 = -1.*t1510*t1875*t2033;
  t8585 = t8580 + t8584;
  t8608 = t3026*t8573;
  t8609 = t3431*t8585;
  t8610 = t8608 + t8609;
  t8591 = -1.*t3431*t8573;
  t8597 = t3026*t8585;
  t8604 = t8591 + t8597;
  t8636 = -1.*t1728*t1870*t1875;
  t8637 = -1.*t1835*t8610;
  t8638 = t8636 + t8637;
  t8642 = t3860*t8604;
  t8643 = t3807*t8638;
  t8644 = t8642 + t8643;
  t8649 = t3807*t8604;
  t8652 = -1.*t3860*t8638;
  t8654 = t8649 + t8652;
  t8656 = -1.*t5295*t8644;
  t8658 = t4788*t8654;
  t8659 = t8656 + t8658;
  t8681 = t4788*t8644;
  t8682 = t5295*t8654;
  t8683 = t8681 + t8682;
  t8687 = t5749*t8659;
  t8688 = t5669*t8683;
  t8691 = t8687 + t8688;
  t8693 = t5669*t8659;
  t8694 = -1.*t5749*t8683;
  t8695 = t8693 + t8694;
  t8704 = -1.*t6406*t8691;
  t8706 = t6276*t8695;
  t8712 = t8704 + t8706;
  t8721 = t6276*t8691;
  t8723 = t6406*t8695;
  t8727 = t8721 + t8723;
  t8794 = -1.*t1241*t1510*t1875;
  t8795 = t2268*t1241*t1245*t2033;
  t8796 = t8794 + t8795;
  t8799 = -1.*t2268*t1241*t1875;
  t8801 = -1.*t1241*t1245*t1510*t2033;
  t8802 = t8799 + t8801;
  t8812 = t3026*t8796;
  t8813 = t3431*t8802;
  t8814 = t8812 + t8813;
  t8805 = -1.*t3431*t8796;
  t8808 = t3026*t8802;
  t8809 = t8805 + t8808;
  t8845 = -1.*t1728*t1241*t1245*t1870;
  t8849 = -1.*t1835*t8814;
  t8850 = t8845 + t8849;
  t8853 = t3860*t8809;
  t8854 = t3807*t8850;
  t8858 = t8853 + t8854;
  t8869 = t3807*t8809;
  t8870 = -1.*t3860*t8850;
  t8872 = t8869 + t8870;
  t8876 = -1.*t5295*t8858;
  t8894 = t4788*t8872;
  t8900 = t8876 + t8894;
  t8907 = t4788*t8858;
  t8908 = t5295*t8872;
  t8915 = t8907 + t8908;
  t8920 = t5749*t8900;
  t8923 = t5669*t8915;
  t8926 = t8920 + t8923;
  t8932 = t5669*t8900;
  t8933 = -1.*t5749*t8915;
  t8935 = t8932 + t8933;
  t8962 = -1.*t6406*t8926;
  t8966 = t6276*t8935;
  t8970 = t8962 + t8966;
  t9006 = t6276*t8926;
  t9007 = t6406*t8935;
  t9008 = t9006 + t9007;
  t9097 = t1510*t2027*t1875;
  t9100 = -1.*t2268*t1245*t2027*t2033;
  t9108 = t9097 + t9100;
  t9115 = t2268*t2027*t1875;
  t9117 = t1245*t1510*t2027*t2033;
  t9118 = t9115 + t9117;
  t9144 = t3026*t9108;
  t9169 = t3431*t9118;
  t9174 = t9144 + t9169;
  t9126 = -1.*t3431*t9108;
  t9127 = t3026*t9118;
  t9132 = t9126 + t9127;
  t9195 = t1728*t1245*t1870*t2027;
  t9196 = -1.*t1835*t9174;
  t9197 = t9195 + t9196;
  t9205 = t3860*t9132;
  t9206 = t3807*t9197;
  t9207 = t9205 + t9206;
  t9217 = t3807*t9132;
  t9224 = -1.*t3860*t9197;
  t9226 = t9217 + t9224;
  t9228 = -1.*t5295*t9207;
  t9231 = t4788*t9226;
  t9234 = t9228 + t9231;
  t9242 = t4788*t9207;
  t9244 = t5295*t9226;
  t9245 = t9242 + t9244;
  t9250 = t5749*t9234;
  t9251 = t5669*t9245;
  t9252 = t9250 + t9251;
  t9259 = t5669*t9234;
  t9262 = -1.*t5749*t9245;
  t9263 = t9259 + t9262;
  t9274 = -1.*t6406*t9252;
  t9275 = t6276*t9263;
  t9279 = t9274 + t9275;
  t9285 = t6276*t9252;
  t9288 = t6406*t9263;
  t9290 = t9285 + t9288;
  t8515 = Power(t8508,2);
  t8516 = Power(t6780,2);
  t8518 = Power(t8074,2);
  t8526 = t8515 + t8516 + t8518;
  t8533 = 1/Sqrt(t8526);
  t9334 = -1.*t2268*t3026*t1245*t1870;
  t9336 = t1245*t1870*t1510*t3431;
  t9340 = t9334 + t9336;
  t9351 = t3026*t1245*t1870*t1510;
  t9352 = t2268*t1245*t1870*t3431;
  t9356 = t9351 + t9352;
  t9381 = -1.*t9340*t1835;
  t9383 = -1.*t1728*t1245*t2033;
  t9384 = t9381 + t9383;
  t9416 = t9356*t3860;
  t9417 = t3807*t9384;
  t9418 = t9416 + t9417;
  t9431 = t3807*t9356;
  t9437 = -1.*t3860*t9384;
  t9438 = t9431 + t9437;
  t9442 = -1.*t5295*t9418;
  t9445 = t4788*t9438;
  t9455 = t9442 + t9445;
  t9466 = t4788*t9418;
  t9469 = t5295*t9438;
  t9470 = t9466 + t9469;
  t9482 = t5749*t9455;
  t9485 = t5669*t9470;
  t9496 = t9482 + t9485;
  t9514 = t5669*t9455;
  t9517 = -1.*t5749*t9470;
  t9518 = t9514 + t9517;
  t9528 = -1.*t6406*t9496;
  t9532 = t6276*t9518;
  t9534 = t9528 + t9532;
  t9539 = t6276*t9496;
  t9542 = t6406*t9518;
  t9551 = t9539 + t9542;
  t9754 = t2268*t3026*t7684;
  t9755 = -1.*t1510*t3431*t7684;
  t9762 = t9754 + t9755;
  t9715 = -1.*t3026*t1510*t7684;
  t9728 = -1.*t2268*t3431*t7684;
  t9736 = t9715 + t9728;
  t9805 = t1728*t2892;
  t9819 = -1.*t1835*t9762;
  t9822 = t9805 + t9819;
  t9832 = t3860*t9736;
  t9837 = t3807*t9822;
  t9842 = t9832 + t9837;
  t9863 = t3807*t9736;
  t9864 = -1.*t3860*t9822;
  t9874 = t9863 + t9864;
  t9879 = -1.*t5295*t9842;
  t9881 = t4788*t9874;
  t9883 = t9879 + t9881;
  t9888 = t4788*t9842;
  t9892 = t5295*t9874;
  t9894 = t9888 + t9892;
  t9909 = t5749*t9883;
  t9912 = t5669*t9894;
  t9918 = t9909 + t9912;
  t9928 = t5669*t9883;
  t9935 = -1.*t5749*t9894;
  t9937 = t9928 + t9935;
  t9942 = -1.*t6406*t9918;
  t9944 = t6276*t9937;
  t9947 = t9942 + t9944;
  t9963 = t6276*t9918;
  t9964 = t6406*t9937;
  t9972 = t9963 + t9964;
  t10083 = -1.*t1870*t2027*t1875;
  t10088 = -1.*t1241*t2033;
  t10095 = t10083 + t10088;
  t10182 = t2268*t3026*t10095;
  t10191 = -1.*t1510*t3431*t10095;
  t10192 = t10182 + t10191;
  t10164 = -1.*t3026*t1510*t10095;
  t10171 = -1.*t2268*t3431*t10095;
  t10173 = t10164 + t10171;
  t10207 = t1728*t6854;
  t10216 = -1.*t1835*t10192;
  t10221 = t10207 + t10216;
  t10229 = t3860*t10173;
  t10234 = t3807*t10221;
  t10237 = t10229 + t10234;
  t10240 = t3807*t10173;
  t10252 = -1.*t3860*t10221;
  t10254 = t10240 + t10252;
  t10262 = -1.*t5295*t10237;
  t10272 = t4788*t10254;
  t10273 = t10262 + t10272;
  t10288 = t4788*t10237;
  t10320 = t5295*t10254;
  t10325 = t10288 + t10320;
  t10330 = t5749*t10273;
  t10340 = t5669*t10325;
  t10345 = t10330 + t10340;
  t10363 = t5669*t10273;
  t10385 = -1.*t5749*t10325;
  t10400 = t10363 + t10385;
  t10418 = -1.*t6406*t10345;
  t10433 = t6276*t10400;
  t10444 = t10418 + t10433;
  t10488 = t6276*t10345;
  t10491 = t6406*t10400;
  t10494 = t10488 + t10491;
  t10603 = -1.*t1510*t1875;
  t10614 = t2268*t1245*t2033;
  t10620 = t10603 + t10614;
  t10659 = t3431*t10620;
  t10668 = t10659 + t8154;
  t10687 = t3026*t10620;
  t10689 = -1.*t3431*t8143;
  t10693 = t10687 + t10689;
  t10695 = t1835*t3860*t10668;
  t10702 = t3807*t10693;
  t10705 = t10695 + t10702;
  t10709 = -1.*t3807*t1835*t10668;
  t10729 = t3860*t10693;
  t10731 = t10709 + t10729;
  t10742 = t5295*t10705;
  t10746 = t4788*t10731;
  t10754 = t10742 + t10746;
  t10777 = t4788*t10705;
  t10783 = -1.*t5295*t10731;
  t10786 = t10777 + t10783;
  t10802 = -1.*t5749*t10754;
  t10804 = t5669*t10786;
  t10813 = t10802 + t10804;
  t10837 = t5669*t10754;
  t10838 = t5749*t10786;
  t10859 = t10837 + t10838;
  t10873 = t6406*t10813;
  t10880 = t6276*t10859;
  t10887 = t10873 + t10880;
  t10898 = t6276*t10813;
  t10907 = -1.*t6406*t10859;
  t10914 = t10898 + t10907;
  t10977 = -1.*t2268*t2892;
  t10979 = t7707 + t10977;
  t11016 = t3431*t10979;
  t11017 = t11016 + t4013;
  t11065 = t3026*t10979;
  t11072 = -1.*t3431*t3721;
  t11093 = t11065 + t11072;
  t11138 = t1835*t3860*t11017;
  t11139 = t3807*t11093;
  t11142 = t11138 + t11139;
  t11153 = -1.*t3807*t1835*t11017;
  t11155 = t3860*t11093;
  t11164 = t11153 + t11155;
  t11173 = t5295*t11142;
  t11174 = t4788*t11164;
  t11180 = t11173 + t11174;
  t11197 = t4788*t11142;
  t11198 = -1.*t5295*t11164;
  t11199 = t11197 + t11198;
  t11205 = -1.*t5749*t11180;
  t11209 = t5669*t11199;
  t11214 = t11205 + t11209;
  t11225 = t5669*t11180;
  t11226 = t5749*t11199;
  t11228 = t11225 + t11226;
  t11231 = t6406*t11214;
  t11232 = t6276*t11228;
  t11236 = t11231 + t11232;
  t11244 = t6276*t11214;
  t11255 = -1.*t6406*t11228;
  t11256 = t11244 + t11255;
  t11358 = t1245*t1510*t2027;
  t11359 = -1.*t2268*t6854;
  t11364 = t11358 + t11359;
  t11410 = t3431*t11364;
  t11411 = t11410 + t6924;
  t11423 = t3026*t11364;
  t11429 = -1.*t3431*t6895;
  t11432 = t11423 + t11429;
  t11434 = t1835*t3860*t11411;
  t11435 = t3807*t11432;
  t11449 = t11434 + t11435;
  t11455 = -1.*t3807*t1835*t11411;
  t11460 = t3860*t11432;
  t11465 = t11455 + t11460;
  t11478 = t5295*t11449;
  t11481 = t4788*t11465;
  t11494 = t11478 + t11481;
  t11504 = t4788*t11449;
  t11507 = -1.*t5295*t11465;
  t11509 = t11504 + t11507;
  t11533 = -1.*t5749*t11494;
  t11534 = t5669*t11509;
  t11535 = t11533 + t11534;
  t11539 = t5669*t11494;
  t11553 = t5749*t11509;
  t11565 = t11539 + t11553;
  t11574 = t6406*t11535;
  t11575 = t6276*t11565;
  t11581 = t11574 + t11575;
  t11584 = t6276*t11535;
  t11589 = -1.*t6406*t11565;
  t11594 = t11584 + t11589;
  t11694 = -1.*t3026*t8108;
  t11697 = t11694 + t10689;
  t11706 = t1835*t3860*t8156;
  t11709 = t3807*t11697;
  t11711 = t11706 + t11709;
  t11714 = -1.*t3807*t1835*t8156;
  t11715 = t3860*t11697;
  t11719 = t11714 + t11715;
  t11723 = t5295*t11711;
  t11736 = t4788*t11719;
  t11738 = t11723 + t11736;
  t11747 = t4788*t11711;
  t11761 = -1.*t5295*t11719;
  t11763 = t11747 + t11761;
  t11773 = -1.*t5749*t11738;
  t11787 = t5669*t11763;
  t11796 = t11773 + t11787;
  t11808 = t5669*t11738;
  t11812 = t5749*t11763;
  t11815 = t11808 + t11812;
  t11826 = t6406*t11796;
  t11827 = t6276*t11815;
  t11832 = t11826 + t11827;
  t11839 = t6276*t11796;
  t11844 = -1.*t6406*t11815;
  t11849 = t11839 + t11844;
  t11944 = -1.*t3026*t3345;
  t11954 = t11944 + t11072;
  t11959 = t1835*t3860*t4031;
  t11960 = t3807*t11954;
  t11962 = t11959 + t11960;
  t11972 = -1.*t3807*t1835*t4031;
  t11979 = t3860*t11954;
  t11981 = t11972 + t11979;
  t11986 = t5295*t11962;
  t11991 = t4788*t11981;
  t11997 = t11986 + t11991;
  t12001 = t4788*t11962;
  t12006 = -1.*t5295*t11981;
  t12035 = t12001 + t12006;
  t12081 = -1.*t5749*t11997;
  t12107 = t5669*t12035;
  t12113 = t12081 + t12107;
  t12134 = t5669*t11997;
  t12135 = t5749*t12035;
  t12139 = t12134 + t12135;
  t12146 = t6406*t12113;
  t12150 = t6276*t12139;
  t12153 = t12146 + t12150;
  t12156 = t6276*t12113;
  t12159 = -1.*t6406*t12139;
  t12161 = t12156 + t12159;
  t12227 = -1.*t3026*t6878;
  t12229 = t12227 + t11429;
  t12235 = t1835*t3860*t6938;
  t12240 = t3807*t12229;
  t12243 = t12235 + t12240;
  t12246 = -1.*t3807*t1835*t6938;
  t12254 = t3860*t12229;
  t12256 = t12246 + t12254;
  t12266 = t5295*t12243;
  t12268 = t4788*t12256;
  t12274 = t12266 + t12268;
  t12285 = t4788*t12243;
  t12286 = -1.*t5295*t12256;
  t12288 = t12285 + t12286;
  t12304 = -1.*t5749*t12274;
  t12314 = t5669*t12288;
  t12316 = t12304 + t12314;
  t12337 = t5669*t12274;
  t12342 = t5749*t12288;
  t12343 = t12337 + t12342;
  t12349 = t6406*t12316;
  t12351 = t6276*t12343;
  t12355 = t12349 + t12351;
  t12368 = t6276*t12316;
  t12372 = -1.*t6406*t12343;
  t12383 = t12368 + t12372;
  t12493 = -1.*t1245*t1870*t1835;
  t12501 = -1.*t1728*t8188;
  t12504 = t12493 + t12501;
  t12550 = -1.*t4788*t3860*t12504;
  t12553 = -1.*t3807*t5295*t12504;
  t12561 = t12550 + t12553;
  t12565 = t3807*t4788*t12504;
  t12566 = -1.*t3860*t5295*t12504;
  t12569 = t12565 + t12566;
  t12575 = t5749*t12561;
  t12576 = t5669*t12569;
  t12580 = t12575 + t12576;
  t12595 = t5669*t12561;
  t12596 = -1.*t5749*t12569;
  t12598 = t12595 + t12596;
  t12602 = -1.*t6406*t12580;
  t12613 = t6276*t12598;
  t12627 = t12602 + t12613;
  t12651 = t6276*t12580;
  t12659 = t6406*t12598;
  t12663 = t12651 + t12659;
  t12466 = 0.135*t1728;
  t12467 = t12466 + t4110;
  t12475 = -0.049*t1728;
  t12477 = -0.135*t1835;
  t12478 = t12475 + t12477;
  t12699 = -1.*t1835*t2230;
  t12701 = -1.*t1728*t4217;
  t12704 = t12699 + t12701;
  t12726 = -1.*t4788*t3860*t12704;
  t12727 = -1.*t3807*t5295*t12704;
  t12728 = t12726 + t12727;
  t12730 = t3807*t4788*t12704;
  t12731 = -1.*t3860*t5295*t12704;
  t12732 = t12730 + t12731;
  t12734 = t5749*t12728;
  t12736 = t5669*t12732;
  t12741 = t12734 + t12736;
  t12750 = t5669*t12728;
  t12753 = -1.*t5749*t12732;
  t12754 = t12750 + t12753;
  t12760 = -1.*t6406*t12741;
  t12761 = t6276*t12754;
  t12762 = t12760 + t12761;
  t12771 = t6276*t12741;
  t12772 = t6406*t12754;
  t12780 = t12771 + t12772;
  t12817 = -1.*t1835*t6827;
  t12823 = -1.*t1728*t6989;
  t12826 = t12817 + t12823;
  t12843 = -1.*t4788*t3860*t12826;
  t12848 = -1.*t3807*t5295*t12826;
  t12854 = t12843 + t12848;
  t12857 = t3807*t4788*t12826;
  t12860 = -1.*t3860*t5295*t12826;
  t12861 = t12857 + t12860;
  t12868 = t5749*t12854;
  t12870 = t5669*t12861;
  t12871 = t12868 + t12870;
  t12876 = t5669*t12854;
  t12879 = -1.*t5749*t12861;
  t12880 = t12876 + t12879;
  t12885 = -1.*t6406*t12871;
  t12886 = t6276*t12880;
  t12892 = t12885 + t12886;
  t12895 = t6276*t12871;
  t12897 = t6406*t12880;
  t12900 = t12895 + t12897;
  t12979 = -1.*t3860*t8156;
  t12982 = -1.*t3807*t8268;
  t12984 = t12979 + t12982;
  t12987 = t5295*t12984;
  t12991 = t12987 + t8364;
  t12999 = t4788*t12984;
  t13000 = -1.*t5295*t8324;
  t13003 = t12999 + t13000;
  t13005 = -1.*t5749*t12991;
  t13006 = t5669*t13003;
  t13009 = t13005 + t13006;
  t13013 = t5669*t12991;
  t13026 = t5749*t13003;
  t13030 = t13013 + t13026;
  t13048 = t6406*t13009;
  t13050 = t6276*t13030;
  t13062 = t13048 + t13050;
  t13068 = t6276*t13009;
  t13078 = -1.*t6406*t13030;
  t13082 = t13068 + t13078;
  t12952 = 0.049*t3807;
  t12957 = t12952 + t4686;
  t12962 = -0.09*t3807;
  t12963 = -0.049*t3860;
  t12972 = t12962 + t12963;
  t13170 = -1.*t3860*t4031;
  t13174 = -1.*t3807*t4753;
  t13175 = t13170 + t13174;
  t13185 = t5295*t13175;
  t13187 = t13185 + t5855;
  t13195 = t4788*t13175;
  t13197 = -1.*t5295*t5641;
  t13201 = t13195 + t13197;
  t13207 = -1.*t5749*t13187;
  t13212 = t5669*t13201;
  t13213 = t13207 + t13212;
  t13215 = t5669*t13187;
  t13216 = t5749*t13201;
  t13217 = t13215 + t13216;
  t13221 = t6406*t13213;
  t13228 = t6276*t13217;
  t13229 = t13221 + t13228;
  t13232 = t6276*t13213;
  t13238 = -1.*t6406*t13217;
  t13239 = t13232 + t13238;
  t13284 = -1.*t3860*t6938;
  t13288 = -1.*t3807*t7109;
  t13290 = t13284 + t13288;
  t13298 = t5295*t13290;
  t13305 = t13298 + t7297;
  t13308 = t4788*t13290;
  t13312 = -1.*t5295*t7222;
  t13314 = t13308 + t13312;
  t13322 = -1.*t5749*t13305;
  t13323 = t5669*t13314;
  t13324 = t13322 + t13323;
  t13326 = t5669*t13305;
  t13327 = t5749*t13314;
  t13328 = t13326 + t13327;
  t13332 = t6406*t13324;
  t13333 = t6276*t13328;
  t13335 = t13332 + t13333;
  t13342 = t6276*t13324;
  t13343 = -1.*t6406*t13328;
  t13347 = t13342 + t13343;
  t13395 = -1.*t4788*t8309;
  t13396 = t13395 + t13000;
  t13400 = -1.*t5749*t8365;
  t13401 = t5669*t13396;
  t13404 = t13400 + t13401;
  t13409 = t5749*t13396;
  t13410 = t8421 + t13409;
  t13415 = t6406*t13404;
  t13416 = t6276*t13410;
  t13418 = t13415 + t13416;
  t13421 = t6276*t13404;
  t13429 = -1.*t6406*t13410;
  t13430 = t13421 + t13429;
  t13378 = -0.21*t4788;
  t13382 = -0.049*t5295;
  t13383 = t13378 + t13382;
  t13388 = 0.049*t4788;
  t13390 = t13388 + t5320;
  t13471 = -1.*t4788*t5467;
  t13472 = t13471 + t13197;
  t13476 = -1.*t5749*t6013;
  t13480 = t5669*t13472;
  t13482 = t13476 + t13480;
  t13484 = t5749*t13472;
  t13485 = t6498 + t13484;
  t13487 = t6406*t13482;
  t13488 = t6276*t13485;
  t13490 = t13487 + t13488;
  t13492 = t6276*t13482;
  t13493 = -1.*t6406*t13485;
  t13495 = t13492 + t13493;
  t13522 = -1.*t4788*t7154;
  t13523 = t13522 + t13312;
  t13525 = -1.*t5749*t7298;
  t13526 = t5669*t13523;
  t13528 = t13525 + t13526;
  t13530 = t5749*t13523;
  t13531 = t7409 + t13530;
  t13536 = t6406*t13528;
  t13541 = t6276*t13531;
  t13543 = t13536 + t13541;
  t13548 = t6276*t13528;
  t13554 = -1.*t6406*t13531;
  t13558 = t13548 + t13554;
  t13595 = -1.*t5669*t8400;
  t13600 = t13400 + t13595;
  t13605 = t6406*t13600;
  t13606 = t13605 + t8452;
  t13609 = t6276*t13600;
  t13610 = -1.*t6406*t8429;
  t13612 = t13609 + t13610;
  t13584 = 0.0016*t5669;
  t13586 = t13584 + t6059;
  t13589 = -0.2707*t5669;
  t13591 = -0.0016*t5749;
  t13592 = t13589 + t13591;
  t13635 = -1.*t5669*t6210;
  t13636 = t13476 + t13635;
  t13643 = t6406*t13636;
  t13649 = t13643 + t6639;
  t13663 = t6276*t13636;
  t13666 = -1.*t6406*t6533;
  t13670 = t13663 + t13666;
  t13736 = -1.*t5669*t7347;
  t13738 = t13525 + t13736;
  t13752 = t6406*t13738;
  t13753 = t13752 + t7484;
  t13764 = t6276*t13738;
  t13770 = -1.*t6406*t7419;
  t13786 = t13764 + t13770;
  t13853 = -1.*t6276*t8412;
  t13855 = t13853 + t13610;
  t13835 = -0.7055*t6276;
  t13837 = 0.0184*t6406;
  t13844 = t13835 + t13837;
  t13846 = -0.0184*t6276;
  t13848 = t13846 + t6414;
  t13889 = -1.*t6276*t6476;
  t13905 = t13889 + t13666;
  t14026 = -1.*t6276*t7373;
  t14032 = t14026 + t13770;
  t13858 = -1.*t6601*t8453;
  t14094 = 0.0216*t6576;
  t14099 = t14094 + t6663;
  t14103 = -1.1135*t6576;
  t14104 = -0.0216*t6601;
  t14106 = t14103 + t14104;
  t13918 = -1.*t6601*t6642;
  t14037 = -1.*t6601*t7491;
  p_output1[0]=0.5*(2.*t6780*(t6792 + t6839 + t6856 + t6885 + t6897 + t6958 + t6999 + t7052 + t7141 + t7161 + t7254 + t7324 + t7349 + t7398 + t7423 + t7493 + t7523 + t7582 + t7637) + 2.*(-1.*t1241*t1245*t1557 + t1857*t7684 + t2685*t7703 + t3203*t7754 + t3596*t7785 + t3903*t7816 + t4120*t7847 - 0.1305*(t1835*t7684 + t1728*t7847) + t4705*t7863 + t5357*t7880 + t5571*t7895 + t5778*t7946 + t6068*t7959 + t6432*t7983 + t6486*t7994 + t6611*t8018 + t6680*t8031 + 0.0306*(t6601*t8018 + t6576*t8031) - 1.1312*(t6576*t8018 - 1.*t6601*t8031))*t8074)*t8533;
  p_output1[1]=0.5*t8533*(2.*t8508*(t1245*t1557 - 1.*t1857*t1870*t1875 + t1875*t2033*t2685 + t3203*t8573 + t3596*t8585 + t3903*t8604 + t4120*t8610 - 0.1305*(-1.*t1835*t1870*t1875 + t1728*t8610) + t4705*t8638 + t5357*t8644 + t5571*t8654 + t5778*t8659 + t6068*t8683 + t6432*t8691 + t6486*t8695 + t6611*t8712 + t6680*t8727 + 0.0306*(t6601*t8712 + t6576*t8727) - 1.1312*(t6576*t8712 - 1.*t6601*t8727)) + 2.*t6780*(-1.*t1241*t1245*t1857*t1870 - 1.*t1241*t1557*t1875 + t1241*t1245*t2033*t2685 + t3203*t8796 + t3596*t8802 + t3903*t8809 + t4120*t8814 - 0.1305*(-1.*t1241*t1245*t1835*t1870 + t1728*t8814) + t4705*t8850 + t5357*t8858 + t5571*t8872 + t5778*t8900 + t6068*t8915 + t6432*t8926 + t6486*t8935 + t6611*t8970 + t6680*t9008 + 0.0306*(t6601*t8970 + t6576*t9008) - 1.1312*(t6576*t8970 - 1.*t6601*t9008)) + 2.*t8074*(t1245*t1857*t1870*t2027 + t1557*t1875*t2027 - 1.*t1245*t2027*t2033*t2685 + t3203*t9108 + t3596*t9118 + t3903*t9132 + t4120*t9174 - 0.1305*(t1245*t1835*t1870*t2027 + t1728*t9174) + t4705*t9197 + t5357*t9207 + t5571*t9226 + t5778*t9234 + t6068*t9245 + t6432*t9252 + t6486*t9263 + t6611*t9279 + t6680*t9290 + 0.0306*(t6601*t9279 + t6576*t9290) - 1.1312*(t6576*t9279 - 1.*t6601*t9290)));
  p_output1[2]=0.5*t8533*(2.*(t10095*t2685 + t10095*t2268*t3203 - 1.*t10095*t1510*t3596 + t10173*t3903 + t10192*t4120 + t10221*t4705 + t10237*t5357 + t10254*t5571 + t10273*t5778 + t10325*t6068 + t10345*t6432 + t10400*t6486 + 0.0306*(t10494*t6576 + t10444*t6601) - 1.1312*(t10444*t6576 - 1.*t10494*t6601) + t10444*t6611 + t10494*t6680 + t1857*t6854 - 0.1305*(t10192*t1728 + t1835*t6854))*t8074 + 2.*t8508*(-1.*t1245*t1857*t2033 - 1.*t1245*t1870*t2685 - 1.*t1245*t1870*t2268*t3203 + t1245*t1510*t1870*t3596 + t4120*t9340 - 0.1305*(-1.*t1245*t1835*t2033 + t1728*t9340) + t3903*t9356 + t4705*t9384 + t5357*t9418 + t5571*t9438 + t5778*t9455 + t6068*t9470 + t6432*t9496 + t6486*t9518 + t6611*t9534 + t6680*t9551 + 0.0306*(t6601*t9534 + t6576*t9551) - 1.1312*(t6576*t9534 - 1.*t6601*t9551)) + 2.*t6780*(t1857*t2892 + t2685*t7684 + t2268*t3203*t7684 - 1.*t1510*t3596*t7684 + t3903*t9736 + t4120*t9762 - 0.1305*(t1835*t2892 + t1728*t9762) + t4705*t9822 + t5357*t9842 + t5571*t9874 + t5778*t9883 + t6068*t9894 + t6432*t9918 + t6486*t9937 + t6611*t9947 + t6680*t9972 + 0.0306*(t6601*t9947 + t6576*t9972) - 1.1312*(t6576*t9947 - 1.*t6601*t9972)));
  p_output1[3]=0.5*(2.*(-0.1305*t11017*t1728 + 0.135*t1241*t1245*t2268 - 0.135*t1510*t2892 + t10979*t3596 + t3203*t3721 + t11093*t3903 + t11017*t4120 - 1.*t11017*t1835*t4705 + t11164*t5357 + t11142*t5571 + t11199*t5778 + t11180*t6068 + t11228*t6432 + t11214*t6486 - 1.1312*(t11256*t6576 - 1.*t11236*t6601) + 0.0306*(t11236*t6576 + t11256*t6601) + t11256*t6611 + t11236*t6680)*t6780 + 2.*(-0.1305*t11411*t1728 - 0.135*t1245*t2027*t2268 + t11364*t3596 + t11432*t3903 + t11411*t4120 - 1.*t11411*t1835*t4705 + t11465*t5357 + t11449*t5571 + t11509*t5778 + t11494*t6068 + t11565*t6432 + t11535*t6486 - 1.1312*(t11594*t6576 - 1.*t11581*t6601) + 0.0306*(t11581*t6576 + t11594*t6601) + t11594*t6611 + t11581*t6680 - 0.135*t1510*t6854 + t3203*t6895)*t8074 + 2.*(-0.1305*t10668*t1728 + 0.135*t1245*t1510*t2033 + 0.135*t1875*t2268 + t10620*t3596 + t10693*t3903 + t10668*t4120 - 1.*t10668*t1835*t4705 + t10731*t5357 + t10705*t5571 + t10786*t5778 + t10754*t6068 + t10859*t6432 + t10813*t6486 - 1.1312*(t10914*t6576 - 1.*t10887*t6601) + 0.0306*(t10887*t6576 + t10914*t6601) + t10914*t6611 + t10887*t6680 + t3203*t8143)*t8508)*t8533;
  p_output1[4]=0.5*(2.*(-0.135*t3345*t3431 + 0.135*t3026*t3721 + t11954*t3903 - 0.1305*t1728*t4031 + t4031*t4120 - 1.*t1835*t4031*t4705 + t11981*t5357 + t11962*t5571 + t12035*t5778 + t11997*t6068 + t12139*t6432 + t12113*t6486 - 1.1312*(t12161*t6576 - 1.*t12153*t6601) + 0.0306*(t12153*t6576 + t12161*t6601) + t12161*t6611 + t12153*t6680)*t6780 + 2.*(t12229*t3903 + t12256*t5357 + t12243*t5571 + t12288*t5778 + t12274*t6068 + t12343*t6432 + t12316*t6486 - 1.1312*(t12383*t6576 - 1.*t12355*t6601) + 0.0306*(t12355*t6576 + t12383*t6601) + t12383*t6611 + t12355*t6680 - 0.135*t3431*t6878 + 0.135*t3026*t6895 - 0.1305*t1728*t6938 + t4120*t6938 - 1.*t1835*t4705*t6938)*t8074 + 2.*(t11697*t3903 + t11719*t5357 + t11711*t5571 + t11763*t5778 + t11738*t6068 + t11815*t6432 + t11796*t6486 - 1.1312*(t11849*t6576 - 1.*t11832*t6601) + 0.0306*(t11832*t6576 + t11849*t6601) + t11849*t6611 + t11832*t6680 - 0.135*t3431*t8108 + 0.135*t3026*t8143 - 0.1305*t1728*t8156 + t4120*t8156 - 1.*t1835*t4705*t8156)*t8508)*t8533;
  p_output1[5]=0.5*(2.*(t12467*t2230 + t12478*t4217 + t12704*t4705 - 0.1305*t4753 + t12704*t3807*t5357 - 1.*t12704*t3860*t5571 + t12728*t5778 + t12732*t6068 + t12741*t6432 + t12754*t6486 + 0.0306*(t12780*t6576 + t12762*t6601) - 1.1312*(t12762*t6576 - 1.*t12780*t6601) + t12762*t6611 + t12780*t6680)*t6780 + 2.*(t12826*t4705 + t12826*t3807*t5357 - 1.*t12826*t3860*t5571 + t12854*t5778 + t12861*t6068 + t12871*t6432 + t12880*t6486 + 0.0306*(t12900*t6576 + t12892*t6601) - 1.1312*(t12892*t6576 - 1.*t12900*t6601) + t12892*t6611 + t12900*t6680 + t12467*t6827 + t12478*t6989 - 0.1305*t7109)*t8074 + 2.*(t1245*t12467*t1870 + t12504*t4705 + t12504*t3807*t5357 - 1.*t12504*t3860*t5571 + t12561*t5778 + t12569*t6068 + t12580*t6432 + t12598*t6486 + 0.0306*(t12663*t6576 + t12627*t6601) - 1.1312*(t12627*t6576 - 1.*t12663*t6601) + t12627*t6611 + t12663*t6680 + t12478*t8188 - 0.1305*t8268)*t8508)*t8533;
  p_output1[6]=0.5*(2.*(t12957*t4031 + t12972*t4753 + t13175*t5571 + t5357*t5641 + t13201*t5778 + t13187*t6068 + t13217*t6432 + t13213*t6486 - 1.1312*(t13239*t6576 - 1.*t13229*t6601) + 0.0306*(t13229*t6576 + t13239*t6601) + t13239*t6611 + t13229*t6680)*t6780 + 2.*(t13290*t5571 + t13314*t5778 + t13305*t6068 + t13328*t6432 + t13324*t6486 - 1.1312*(t13347*t6576 - 1.*t13335*t6601) + 0.0306*(t13335*t6576 + t13347*t6601) + t13347*t6611 + t13335*t6680 + t12957*t6938 + t12972*t7109 + t5357*t7222)*t8074 + 2.*(t12984*t5571 + t13003*t5778 + t12991*t6068 + t13030*t6432 + t13009*t6486 - 1.1312*(t13082*t6576 - 1.*t13062*t6601) + 0.0306*(t13062*t6576 + t13082*t6601) + t13082*t6611 + t13062*t6680 + t12957*t8156 + t12972*t8268 + t5357*t8324)*t8508)*t8533;
  p_output1[7]=0.5*(2.*(t13383*t5467 + t13390*t5641 + t13472*t5778 + t6013*t6068 + t13485*t6432 + t13482*t6486 - 1.1312*(t13495*t6576 - 1.*t13490*t6601) + 0.0306*(t13490*t6576 + t13495*t6601) + t13495*t6611 + t13490*t6680)*t6780 + 2.*(t13523*t5778 + t13531*t6432 + t13528*t6486 - 1.1312*(t13558*t6576 - 1.*t13543*t6601) + 0.0306*(t13543*t6576 + t13558*t6601) + t13558*t6611 + t13543*t6680 + t13383*t7154 + t13390*t7222 + t6068*t7298)*t8074 + 2.*(t13396*t5778 + t13410*t6432 + t13404*t6486 - 1.1312*(t13430*t6576 - 1.*t13418*t6601) + 0.0306*(t13418*t6576 + t13430*t6601) + t13430*t6611 + t13418*t6680 + t13383*t8309 + t13390*t8324 + t6068*t8365)*t8508)*t8533;
  p_output1[8]=0.5*(2.*(t13586*t6013 + t13592*t6210 + t13636*t6486 + t6432*t6533 - 1.1312*(t13670*t6576 - 1.*t13649*t6601) + 0.0306*(t13649*t6576 + t13670*t6601) + t13670*t6611 + t13649*t6680)*t6780 + 2.*(t13738*t6486 - 1.1312*(t13786*t6576 - 1.*t13753*t6601) + 0.0306*(t13753*t6576 + t13786*t6601) + t13786*t6611 + t13753*t6680 + t13586*t7298 + t13592*t7347 + t6432*t7419)*t8074 + 2.*(t13600*t6486 - 1.1312*(t13612*t6576 - 1.*t13606*t6601) + 0.0306*(t13606*t6576 + t13612*t6601) + t13612*t6611 + t13606*t6680 + t13586*t8365 + t13592*t8400 + t6432*t8429)*t8508)*t8533;
  p_output1[9]=0.5*(2.*(t13844*t6476 + t13848*t6533 - 1.1312*(t13918 + t13905*t6576) + t13905*t6611 + t6642*t6680 + 0.0306*(t13905*t6601 + t6751))*t6780 + 2.*(-1.1312*(t14037 + t14032*t6576) + t14032*t6611 + t13844*t7373 + t13848*t7419 + t6680*t7491 + 0.0306*(t14032*t6601 + t7586))*t8074 + 2.*(-1.1312*(t13858 + t13855*t6576) + t13855*t6611 + t13844*t8412 + t13848*t8429 + t6680*t8453 + 0.0306*(t13855*t6601 + t8489))*t8508)*t8533;
  p_output1[10]=0.5*(2.*(t14099*t6642 + t14106*t6717 - 1.1312*(t13918 - 1.*t6576*t6717) + 0.0306*t6765)*t6780 + 2.*(t14099*t7491 + t14106*t7521 - 1.1312*(t14037 - 1.*t6576*t7521) + 0.0306*t7610)*t8074 + 2.*(t14099*t8453 + t14106*t8464 - 1.1312*(t13858 - 1.*t6576*t8464) + 0.0306*t8494)*t8508)*t8533;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 11, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_Body2ToeDistance_RightStance.hh"

namespace RightStance
{

void J_Body2ToeDistance_RightStance_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
