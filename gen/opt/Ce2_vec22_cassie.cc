/*
 * Automatically Generated from Mathematica.
 * Mon 12 Jun 2017 18:21:08 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1531;
  double t972;
  double t1188;
  double t1686;
  double t2417;
  double t1441;
  double t1696;
  double t1909;
  double t945;
  double t2534;
  double t3087;
  double t3331;
  double t4208;
  double t2037;
  double t3478;
  double t3586;
  double t919;
  double t4627;
  double t5395;
  double t5419;
  double t6918;
  double t3781;
  double t6192;
  double t6566;
  double t574;
  double t7047;
  double t7198;
  double t8069;
  double t11305;
  double t6630;
  double t8084;
  double t9188;
  double t421;
  double t11533;
  double t12991;
  double t17273;
  double t17518;
  double t19844;
  double t11214;
  double t18655;
  double t19211;
  double t34;
  double t19975;
  double t20313;
  double t20324;
  double t24038;
  double t24265;
  double t24266;
  double t24268;
  double t24269;
  double t24271;
  double t24272;
  double t24327;
  double t24270;
  double t24416;
  double t24425;
  double t24528;
  double t24536;
  double t24773;
  double t24446;
  double t24970;
  double t24988;
  double t25461;
  double t25506;
  double t25515;
  double t20375;
  double t20478;
  double t20588;
  double t20605;
  double t25045;
  double t25518;
  double t25561;
  double t25583;
  double t25607;
  double t25617;
  double t21450;
  double t25763;
  double t25804;
  double t19477;
  double t20348;
  double t20374;
  double t20382;
  double t20763;
  double t20841;
  double t20862;
  double t21056;
  double t21577;
  double t21597;
  double t22040;
  double t23733;
  double t25848;
  double t25859;
  double t25869;
  double t25884;
  double t25818;
  double t25819;
  double t25821;
  double t25828;
  double t25576;
  double t25628;
  double t25663;
  double t25679;
  double t25687;
  double t25701;
  double t25716;
  double t25729;
  double t25734;
  double t25736;
  double t25749;
  double t25751;
  double t25759;
  double t25958;
  double t25963;
  double t25971;
  double t25830;
  double t25837;
  double t25898;
  double t25943;
  double t25944;
  double t26037;
  double t26041;
  double t26048;
  double t26033;
  double t26055;
  double t26059;
  double t26085;
  double t26086;
  double t26061;
  double t26094;
  double t26107;
  double t26120;
  double t26144;
  double t26146;
  double t26119;
  double t26147;
  double t26148;
  double t26150;
  double t26151;
  double t26152;
  double t26149;
  double t26153;
  double t26155;
  double t26158;
  double t26177;
  double t26178;
  double t26230;
  double t26231;
  double t26239;
  double t26240;
  double t26241;
  double t26242;
  double t26243;
  double t26232;
  double t26233;
  double t26234;
  double t26235;
  double t26236;
  double t26229;
  double t26315;
  double t26319;
  double t26323;
  double t26238;
  double t26266;
  double t26276;
  double t26286;
  double t26156;
  double t26179;
  double t26180;
  double t26181;
  double t26182;
  double t26183;
  double t26184;
  double t26185;
  double t26186;
  double t26187;
  double t26188;
  double t26189;
  double t26416;
  double t26417;
  double t26418;
  double t26419;
  double t26420;
  double t26421;
  double t26396;
  double t26397;
  double t26398;
  double t26399;
  double t26400;
  double t26401;
  double t26409;
  double t26394;
  double t26440;
  double t26441;
  double t26442;
  double t26395;
  double t26436;
  double t26437;
  double t26438;
  double t26471;
  double t26474;
  double t26541;
  double t26547;
  double t26554;
  double t26555;
  double t26559;
  double t26488;
  double t26509;
  double t26521;
  double t26524;
  double t26536;
  double t26456;
  double t26636;
  double t26637;
  double t26638;
  double t26470;
  double t26632;
  double t26633;
  double t26634;
  double t26652;
  double t26653;
  double t26660;
  double t26661;
  double t26662;
  double t26663;
  double t26664;
  double t26654;
  double t26655;
  double t26656;
  double t26657;
  double t26658;
  double t26670;
  double t26671;
  double t26672;
  double t26666;
  double t26667;
  double t26668;
  double t26836;
  double t26659;
  double t26914;
  double t26915;
  double t26673;
  double t26916;
  double t26917;
  double t26918;
  double t26919;
  double t26921;
  double t26922;
  double t26923;
  double t26924;
  double t26925;
  double t26677;
  double t26739;
  double t26685;
  double t26693;
  double t26927;
  double t26929;
  double t26801;
  double t26802;
  double t26803;
  double t26804;
  double t26806;
  double t26807;
  double t26808;
  double t26809;
  double t26821;
  double t26822;
  double t26823;
  double t26824;
  double t26986;
  double t26987;
  double t27011;
  double t27012;
  double t27013;
  double t26933;
  double t26938;
  double t27033;
  double t27035;
  double t27036;
  double t27008;
  double t26920;
  double t26928;
  double t27073;
  double t27074;
  double t27078;
  double t27084;
  double t27066;
  double t27067;
  double t27068;
  double t27069;
  double t27070;
  double t27071;
  double t26991;
  double t27108;
  double t27109;
  double t27110;
  double t27104;
  double t27105;
  double t27106;
  double t26962;
  double t27016;
  double t27121;
  double t27123;
  double t27156;
  double t27157;
  double t27158;
  double t27046;
  double t27115;
  double t27117;
  double t27169;
  double t27171;
  double t27173;
  double t27161;
  double t27054;
  double t27056;
  double t27235;
  double t27236;
  double t27237;
  double t27238;
  double t27239;
  double t27240;
  double t27230;
  double t27231;
  double t27232;
  double t27233;
  double t27246;
  double t27247;
  double t27248;
  double t27242;
  double t27243;
  double t27244;
  double t27256;
  double t27257;
  double t27268;
  double t27269;
  double t27270;
  double t27194;
  double t27252;
  double t27253;
  double t27283;
  double t27284;
  double t27285;
  double t27212;
  double t27325;
  double t27331;
  double t27339;
  double t27340;
  double t27341;
  double t27342;
  double t27344;
  double t27345;
  double t27346;
  double t27347;
  double t27348;
  double t27326;
  double t27328;
  double t27329;
  double t27332;
  double t27333;
  double t27334;
  double t27370;
  double t27371;
  double t27372;
  double t27353;
  double t27354;
  double t27355;
  double t27357;
  double t27358;
  double t27359;
  double t27306;
  double t27388;
  double t27389;
  double t27391;
  double t27311;
  double t27314;
  double t27392;
  double t27393;
  double t27394;
  double t27403;
  double t27405;
  double t27406;
  double t27381;
  double t27382;
  double t27383;
  double t27399;
  double t27400;
  double t27401;
  double t27387;
  double t27395;
  double t27397;
  double t27293;
  double t27296;
  double t27234;
  double t27249;
  double t27439;
  double t27441;
  double t27258;
  double t27421;
  double t27422;
  double t27262;
  double t27429;
  double t27432;
  double t27433;
  double t27272;
  double t27407;
  double t27488;
  double t27489;
  double t27490;
  double t27410;
  double t27411;
  double t27499;
  double t27500;
  double t27501;
  double t27503;
  double t27504;
  double t27505;
  double t27483;
  double t27484;
  double t27486;
  double t27492;
  double t27493;
  double t27494;
  double t27502;
  double t27506;
  double t27507;
  double t27436;
  double t27440;
  double t27447;
  double t27448;
  double t27537;
  double t27539;
  double t27458;
  double t27519;
  double t27520;
  double t27463;
  double t27531;
  double t27532;
  double t27533;
  double t27473;
  double t27366;
  double t27367;
  double t27368;
  double t25911;
  double t25924;
  double t25925;
  double t25926;
  double t25927;
  double t25928;
  double t25930;
  double t25931;
  double t25956;
  double t25957;
  double t25981;
  double t25991;
  double t26004;
  double t26020;
  double t26028;
  double t26029;
  double t27375;
  double t27376;
  double t27377;
  double t26237;
  double t26244;
  double t26245;
  double t26247;
  double t26248;
  double t26249;
  double t26250;
  double t26251;
  double t26260;
  double t26296;
  double t26300;
  double t26305;
  double t26311;
  double t26324;
  double t26328;
  double t26350;
  double t26351;
  double t26375;
  double t26376;
  double t26390;
  double t26415;
  double t26423;
  double t26424;
  double t26426;
  double t26427;
  double t26428;
  double t26429;
  double t26430;
  double t26432;
  double t26433;
  double t26434;
  double t26435;
  double t26439;
  double t26443;
  double t26444;
  double t26446;
  double t26447;
  double t26448;
  double t26449;
  double t26450;
  double t26540;
  double t26569;
  double t26573;
  double t26581;
  double t26588;
  double t26589;
  double t26613;
  double t26614;
  double t26628;
  double t26629;
  double t26630;
  double t26631;
  double t26635;
  double t26639;
  double t26640;
  double t26644;
  double t26645;
  double t26646;
  double t26647;
  double t26648;
  double t26665;
  double t26669;
  double t26674;
  double t26675;
  double t26676;
  double t26678;
  double t26679;
  double t26680;
  double t26703;
  double t26713;
  double t26723;
  double t26773;
  double t26774;
  double t26775;
  double t26800;
  double t26837;
  double t26848;
  double t26850;
  double t26851;
  double t26855;
  double t26861;
  double t26863;
  double t26874;
  double t26894;
  double t26896;
  double t26926;
  double t26930;
  double t26931;
  double t26932;
  double t26947;
  double t26957;
  double t26968;
  double t26978;
  double t26982;
  double t26994;
  double t26995;
  double t26996;
  double t27000;
  double t27638;
  double t27639;
  double t27640;
  double t27014;
  double t27015;
  double t27028;
  double t27029;
  double t27030;
  double t27031;
  double t27037;
  double t27038;
  double t27039;
  double t27040;
  double t27041;
  double t27043;
  double t27044;
  double t27045;
  double t27047;
  double t27048;
  double t27049;
  double t27050;
  double t27052;
  double t27053;
  double t27055;
  double t27057;
  double t27058;
  double t27059;
  double t27060;
  double t27061;
  double t27072;
  double t27094;
  double t27107;
  double t27111;
  double t27113;
  double t27114;
  double t27118;
  double t27120;
  double t27124;
  double t27125;
  double t27129;
  double t27137;
  double t27149;
  double t27150;
  double t27151;
  double t27152;
  double t27153;
  double t27159;
  double t27162;
  double t27163;
  double t27164;
  double t27165;
  double t27167;
  double t27177;
  double t27183;
  double t27184;
  double t27185;
  double t27187;
  double t27190;
  double t27191;
  double t27193;
  double t27196;
  double t27198;
  double t27199;
  double t27200;
  double t27202;
  double t27203;
  double t27204;
  double t27205;
  double t27207;
  double t27209;
  double t27210;
  double t27213;
  double t27215;
  double t27217;
  double t27218;
  double t27220;
  double t27221;
  double t27222;
  double t27224;
  double t27226;
  double t27241;
  double t27245;
  double t27250;
  double t27251;
  double t27254;
  double t27255;
  double t27259;
  double t27260;
  double t27261;
  double t27263;
  double t27264;
  double t27265;
  double t27266;
  double t27271;
  double t27274;
  double t27275;
  double t27276;
  double t27280;
  double t27286;
  double t27287;
  double t27288;
  double t27289;
  double t27291;
  double t27292;
  double t27294;
  double t27295;
  double t27297;
  double t27298;
  double t27299;
  double t27301;
  double t27304;
  double t27305;
  double t27308;
  double t27309;
  double t27312;
  double t27313;
  double t27315;
  double t27316;
  double t27317;
  double t27369;
  double t27373;
  double t27374;
  double t27378;
  double t27379;
  double t27330;
  double t27336;
  double t27337;
  double t27356;
  double t27360;
  double t27361;
  double t27420;
  double t27423;
  double t27425;
  double t27426;
  double t27398;
  double t27402;
  double t27408;
  double t27409;
  double t27412;
  double t27413;
  double t27415;
  double t27416;
  double t27417;
  double t27434;
  double t27435;
  double t27437;
  double t27438;
  double t27442;
  double t27443;
  double t27444;
  double t27445;
  double t27450;
  double t27451;
  double t27453;
  double t27455;
  double t27456;
  double t27457;
  double t27460;
  double t27461;
  double t27462;
  double t27465;
  double t27467;
  double t27468;
  double t27470;
  double t27472;
  double t27475;
  double t27477;
  double t27478;
  double t27479;
  double t27487;
  double t27495;
  double t27497;
  double t27498;
  double t27508;
  double t27509;
  double t27510;
  double t27511;
  double t27512;
  double t27514;
  double t27515;
  double t27516;
  double t27518;
  double t27521;
  double t27522;
  double t27523;
  double t27526;
  double t27528;
  double t27529;
  double t27530;
  double t27535;
  double t27540;
  double t27542;
  double t27543;
  double t27545;
  double t27547;
  double t27549;
  double t27550;
  double t27551;
  double t27552;
  double t27554;
  double t27555;
  double t27556;
  double t27557;
  double t27558;
  double t27562;
  double t27564;
  double t27566;
  double t27567;
  double t27569;
  double t27570;
  double t27571;
  double t27573;
  double t27576;
  double t27577;
  double t27578;
  double t27579;
  double t27580;
  double t27581;
  double t27741;
  double t27743;
  double t27744;
  double t27338;
  double t27350;
  double t27352;
  double t27362;
  double t27364;
  double t27678;
  double t27680;
  double t27681;
  double t27682;
  double t27684;
  double t27802;
  double t27860;
  double t27861;
  double t27862;
  double t27864;
  double t27863;
  double t27865;
  double t27870;
  double t27871;
  double t27872;
  double t27877;
  double t27878;
  double t27879;
  double t27881;
  double t27882;
  double t27884;
  double t27893;
  double t27894;
  double t27895;
  double t27900;
  double t27901;
  double t27902;
  double t27903;
  double t27904;
  double t27517;
  double t27525;
  double t27548;
  double t27575;
  double t27582;
  double t27583;
  double t27789;
  double t27790;
  double t27791;
  double t27792;
  double t27793;
  double t27795;
  double t27700;
  double t27701;
  double t27702;
  double t27703;
  double t27704;
  double t27706;
  double t28005;
  double t27867;
  double t27868;
  double t27869;
  double t27874;
  double t27875;
  double t27876;
  double t28051;
  double t27889;
  double t27890;
  double t27891;
  double t27976;
  double t27977;
  double t27978;
  double t28049;
  double t28053;
  double t28055;
  double t28057;
  double t28058;
  double t28061;
  double t28062;
  double t28064;
  double t28067;
  double t28070;
  double t28071;
  double t27909;
  double t27910;
  double t27914;
  double t28092;
  double t28093;
  double t28094;
  double t28096;
  double t28097;
  double t27925;
  double t27927;
  double t27928;
  double t27930;
  double t27947;
  double t27948;
  double t27950;
  double t27418;
  double t27427;
  double t27446;
  double t27471;
  double t27480;
  double t27481;
  double t27782;
  double t27783;
  double t27784;
  double t27785;
  double t27786;
  double t27787;
  double t27692;
  double t27693;
  double t27694;
  double t27695;
  double t27696;
  double t27697;
  double t27971;
  double t27972;
  double t27974;
  double t27980;
  double t27981;
  double t27982;
  double t28161;
  double t28203;
  double t28202;
  double t28204;
  double t28206;
  double t28207;
  double t28208;
  double t28210;
  double t28211;
  double t28212;
  double t28215;
  double t28236;
  double t28240;
  double t28270;
  double t28271;
  double t28273;
  double t28274;
  double t28276;
  double t27267;
  double t27281;
  double t27290;
  double t27303;
  double t27318;
  double t27319;
  double t27767;
  double t27768;
  double t27769;
  double t27771;
  double t27772;
  double t27773;
  double t27664;
  double t27668;
  double t27669;
  double t27670;
  double t27672;
  double t27674;
  double t28123;
  double t28125;
  double t28126;
  double t28128;
  double t28129;
  double t28130;
  double t27943;
  double t27944;
  double t27946;
  double t27951;
  double t27952;
  double t27957;
  double t28330;
  double t28521;
  double t28511;
  double t28526;
  double t28544;
  double t28556;
  double t28559;
  double t28563;
  double t28567;
  double t28571;
  double t28576;
  double t28583;
  double t28586;
  double t28599;
  double t28600;
  double t28601;
  double t28602;
  double t28604;
  double t28287;
  double t28288;
  double t28289;
  double t28290;
  double t28291;
  double t28292;
  double t27155;
  double t27168;
  double t27188;
  double t27206;
  double t27227;
  double t27228;
  double t27760;
  double t27761;
  double t27762;
  double t27763;
  double t27764;
  double t27765;
  double t27657;
  double t27658;
  double t27659;
  double t27660;
  double t27661;
  double t27662;
  double t28109;
  double t28111;
  double t28112;
  double t28113;
  double t28114;
  double t28115;
  double t27922;
  double t27923;
  double t27924;
  double t27931;
  double t27933;
  double t27934;
  double t28530;
  double t28560;
  double t28573;
  double t28587;
  double t28605;
  double t28606;
  double t28607;
  double t28608;
  double t28609;
  double t28610;
  double t28611;
  double t28622;
  double t28806;
  double t28818;
  double t28819;
  double t28832;
  double t28279;
  double t28280;
  double t28281;
  double t28282;
  double t28283;
  double t28284;
  double t27004;
  double t27032;
  double t27042;
  double t27051;
  double t27062;
  double t27063;
  double t27753;
  double t27754;
  double t27755;
  double t27756;
  double t27757;
  double t27758;
  double t27649;
  double t27650;
  double t27651;
  double t27652;
  double t27653;
  double t27655;
  double t28895;
  double t28903;
  double t28906;
  double t28955;
  double t28972;
  double t28099;
  double t28100;
  double t28101;
  double t28102;
  double t28103;
  double t28105;
  double t28988;
  double t29001;
  double t29005;
  double t29015;
  double t29023;
  double t27905;
  double t27907;
  double t27908;
  double t27915;
  double t27916;
  double t27917;
  double t29598;
  double t29656;
  double t29569;
  double t29571;
  double t29572;
  double t29573;
  double t29574;
  double t29577;
  double t29654;
  double t29657;
  double t29659;
  double t29660;
  double t29661;
  double t29664;
  double t29665;
  double t29668;
  double t29671;
  double t29673;
  double t29653;
  double t29658;
  double t29662;
  double t29670;
  double t29676;
  double t28588;
  double t28590;
  double t28592;
  double t28594;
  double t28595;
  double t28596;
  double t28259;
  double t28261;
  double t28262;
  double t28265;
  double t28266;
  double t28267;
  double t26825;
  double t26849;
  double t26857;
  double t26884;
  double t26898;
  double t26912;
  double t27745;
  double t27746;
  double t27747;
  double t27748;
  double t27750;
  double t27751;
  double t27641;
  double t27642;
  double t27644;
  double t27645;
  double t27646;
  double t27647;
  double t28074;
  double t28076;
  double t28079;
  double t28080;
  double t28082;
  double t28084;
  double t27886;
  double t27887;
  double t27888;
  double t27892;
  double t27896;
  double t27897;
  double t29641;
  double t29642;
  double t29644;
  double t29647;
  double t29648;
  double t29553;
  double t29554;
  double t29556;
  double t29559;
  double t29560;
  double t28429;
  double t28430;
  double t28431;
  double t28432;
  double t28494;
  double t28196;
  double t28197;
  double t28198;
  double t28199;
  double t28200;
  double t26577;
  double t26627;
  double t26641;
  double t26649;
  double t26650;
  double t27734;
  double t27735;
  double t27736;
  double t27737;
  double t27738;
  double t27624;
  double t27625;
  double t27632;
  double t27633;
  double t27634;
  double t28039;
  double t28041;
  double t28043;
  double t28044;
  double t28047;
  double t27834;
  double t27835;
  double t27836;
  double t27857;
  double t27858;
  double t30031;
  double t30036;
  double t30042;
  double t30052;
  double t30073;
  double t29629;
  double t29633;
  double t29635;
  double t29637;
  double t29638;
  double t29172;
  double t29177;
  double t29190;
  double t29195;
  double t29551;
  double t28367;
  double t28379;
  double t28395;
  double t28402;
  double t28424;
  double t28190;
  double t28191;
  double t28192;
  double t28193;
  double t28194;
  double t26425;
  double t26431;
  double t26445;
  double t26453;
  double t26454;
  double t27728;
  double t27729;
  double t27730;
  double t27731;
  double t27732;
  double t27617;
  double t27618;
  double t27619;
  double t27620;
  double t27622;
  double t28029;
  double t28030;
  double t28033;
  double t28034;
  double t28036;
  double t27826;
  double t27828;
  double t27829;
  double t27830;
  double t27832;
  double t30169;
  double t30179;
  double t30181;
  double t30183;
  double t30185;
  double t29991;
  double t29993;
  double t29996;
  double t30014;
  double t30015;
  double t29618;
  double t29620;
  double t29621;
  double t29622;
  double t29627;
  double t29108;
  double t29133;
  double t29138;
  double t29143;
  double t29153;
  double t28343;
  double t28344;
  double t28345;
  double t28346;
  double t28351;
  double t28177;
  double t28180;
  double t28185;
  double t28187;
  double t28188;
  double t26246;
  double t26256;
  double t26332;
  double t26391;
  double t26392;
  double t27722;
  double t27723;
  double t27724;
  double t27725;
  double t27726;
  double t27610;
  double t27612;
  double t27613;
  double t27614;
  double t27615;
  double t28021;
  double t28022;
  double t28023;
  double t28025;
  double t28026;
  double t27819;
  double t27820;
  double t27822;
  double t27823;
  double t27824;
  double t30263;
  double t30267;
  double t30279;
  double t30281;
  double t30282;
  double t30133;
  double t30146;
  double t30147;
  double t30151;
  double t30163;
  double t29944;
  double t29945;
  double t29952;
  double t29959;
  double t29964;
  double t29609;
  double t29610;
  double t29611;
  double t29613;
  double t29615;
  double t29076;
  double t29077;
  double t29088;
  double t29089;
  double t29090;
  double t28337;
  double t28338;
  double t28339;
  double t28340;
  double t28341;
  double t28166;
  double t28167;
  double t28168;
  double t28169;
  double t28170;
  double t25923;
  double t25929;
  double t26013;
  double t26190;
  double t26191;
  double t27715;
  double t27716;
  double t27717;
  double t27718;
  double t27720;
  double t27604;
  double t27605;
  double t27606;
  double t27607;
  double t27608;
  double t28011;
  double t28013;
  double t28014;
  double t28016;
  double t28018;
  double t27812;
  double t27813;
  double t27815;
  double t27816;
  double t27817;
  double t30383;
  double t30385;
  double t30390;
  double t30250;
  double t30253;
  double t30255;
  double t30125;
  double t30127;
  double t30129;
  double t29890;
  double t29904;
  double t29919;
  double t29599;
  double t29604;
  double t29605;
  double t29056;
  double t29063;
  double t29070;
  double t28332;
  double t28333;
  double t28334;
  double t28162;
  double t28163;
  double t28164;
  double t24004;
  double t25753;
  double t25756;
  double t27710;
  double t27711;
  double t27713;
  double t27587;
  double t27601;
  double t27602;
  double t28006;
  double t28007;
  double t28008;
  double t27807;
  double t27808;
  double t27809;
  t1531 = Cos(var1[20]);
  t972 = Cos(var1[21]);
  t1188 = Sin(var1[20]);
  t1686 = Sin(var1[21]);
  t2417 = Cos(var1[19]);
  t1441 = -1.*t972*t1188;
  t1696 = -1.*t1531*t1686;
  t1909 = t1441 + t1696;
  t945 = Sin(var1[19]);
  t2534 = t1531*t972;
  t3087 = -1.*t1188*t1686;
  t3331 = t2534 + t3087;
  t4208 = Cos(var1[18]);
  t2037 = t945*t1909;
  t3478 = t2417*t3331;
  t3586 = t2037 + t3478;
  t919 = Sin(var1[18]);
  t4627 = t2417*t1909;
  t5395 = -1.*t945*t3331;
  t5419 = t4627 + t5395;
  t6918 = Cos(var1[17]);
  t3781 = -1.*t919*t3586;
  t6192 = t4208*t5419;
  t6566 = t3781 + t6192;
  t574 = Sin(var1[17]);
  t7047 = t4208*t3586;
  t7198 = t919*t5419;
  t8069 = t7047 + t7198;
  t11305 = Cos(var1[15]);
  t6630 = t574*t6566;
  t8084 = t6918*t8069;
  t9188 = t6630 + t8084;
  t421 = Sin(var1[15]);
  t11533 = Sin(var1[16]);
  t12991 = t6918*t6566;
  t17273 = -1.*t574*t8069;
  t17518 = t12991 + t17273;
  t19844 = Cos(var1[14]);
  t11214 = -1.*t421*t9188;
  t18655 = -1.*t11305*t11533*t17518;
  t19211 = t11214 + t18655;
  t34 = Sin(var1[14]);
  t19975 = t11305*t9188;
  t20313 = -1.*t421*t11533*t17518;
  t20324 = t19975 + t20313;
  t24038 = t972*t1188;
  t24265 = t1531*t1686;
  t24266 = t24038 + t24265;
  t24268 = -1.*t945*t24266;
  t24269 = t24268 + t3478;
  t24271 = t2417*t24266;
  t24272 = t945*t3331;
  t24327 = t24271 + t24272;
  t24270 = t919*t24269;
  t24416 = t4208*t24327;
  t24425 = t24270 + t24416;
  t24528 = t4208*t24269;
  t24536 = -1.*t919*t24327;
  t24773 = t24528 + t24536;
  t24446 = -1.*t574*t24425;
  t24970 = t6918*t24773;
  t24988 = t24446 + t24970;
  t25461 = t6918*t24425;
  t25506 = t574*t24773;
  t25515 = t25461 + t25506;
  t20375 = Sin(var1[4]);
  t20478 = Cos(var1[4]);
  t20588 = Cos(var1[16]);
  t20605 = Cos(var1[5]);
  t25045 = -1.*t421*t11533*t24988;
  t25518 = t11305*t25515;
  t25561 = t25045 + t25518;
  t25583 = -1.*t11305*t11533*t24988;
  t25607 = -1.*t421*t25515;
  t25617 = t25583 + t25607;
  t21450 = Sin(var1[5]);
  t25763 = -1.*t972;
  t25804 = 1. + t25763;
  t19477 = t34*t19211;
  t20348 = t19844*t20324;
  t20374 = t19477 + t20348;
  t20382 = t20374*t20375;
  t20763 = t20588*t20605*t17518;
  t20841 = t19844*t19211;
  t20862 = -1.*t34*t20324;
  t21056 = t20841 + t20862;
  t21577 = -1.*t21056*t21450;
  t21597 = t20763 + t21577;
  t22040 = t20478*t21597;
  t23733 = t20382 + t22040;
  t25848 = -0.0216*t25804;
  t25859 = 0.0059*t972;
  t25869 = 0.0047*t1686;
  t25884 = t25848 + t25859 + t25869;
  t25818 = -1.1135*t25804;
  t25819 = -1.1182*t972;
  t25821 = 0.0275*t1686;
  t25828 = t25818 + t25819 + t25821;
  t25576 = t19844*t25561;
  t25628 = t34*t25617;
  t25663 = t25576 + t25628;
  t25679 = t25663*t20375;
  t25687 = t20588*t20605*t24988;
  t25701 = -1.*t34*t25561;
  t25716 = t19844*t25617;
  t25729 = t25701 + t25716;
  t25734 = -1.*t25729*t21450;
  t25736 = t25687 + t25734;
  t25749 = t20478*t25736;
  t25751 = t25679 + t25749;
  t25759 = -0.7055*t972;
  t25958 = 0.0047*t972;
  t25963 = -0.0275*t1686;
  t25971 = t25958 + t25963;
  t25830 = -1.*t972*t25828;
  t25837 = -0.0184*t1686;
  t25898 = t25884*t1686;
  t25943 = 0.0275*t972;
  t25944 = t25943 + t25869;
  t26037 = -1.*t1531*t972;
  t26041 = t1188*t1686;
  t26048 = t26037 + t26041;
  t26033 = t945*t24266;
  t26055 = t2417*t26048;
  t26059 = t26033 + t26055;
  t26085 = -1.*t945*t26048;
  t26086 = t24271 + t26085;
  t26061 = -1.*t919*t26059;
  t26094 = t4208*t26086;
  t26107 = t26061 + t26094;
  t26120 = t4208*t26059;
  t26144 = t919*t26086;
  t26146 = t26120 + t26144;
  t26119 = t574*t26107;
  t26147 = t6918*t26146;
  t26148 = t26119 + t26147;
  t26150 = t6918*t26107;
  t26151 = -1.*t574*t26146;
  t26152 = t26150 + t26151;
  t26149 = -1.*t421*t26148;
  t26153 = -1.*t11305*t11533*t26152;
  t26155 = t26149 + t26153;
  t26158 = t11305*t26148;
  t26177 = -1.*t421*t11533*t26152;
  t26178 = t26158 + t26177;
  t26230 = -1.*t1531;
  t26231 = 1. + t26230;
  t26239 = -0.7055*t26231;
  t26240 = -0.0184*t1188;
  t26241 = t1188*t25884;
  t26242 = t1531*t25828;
  t26243 = t26239 + t26240 + t26241 + t26242;
  t26232 = 0.0184*t26231;
  t26233 = -0.7055*t1188;
  t26234 = t1531*t25884;
  t26235 = -1.*t1188*t25828;
  t26236 = t26232 + t26233 + t26234 + t26235;
  t26229 = 0.0016*t24266;
  t26315 = t1188*t25971;
  t26319 = t1531*t25944;
  t26323 = t26315 + t26319;
  t26238 = -0.2707*t3331;
  t26266 = t1531*t25971;
  t26276 = -1.*t1188*t25944;
  t26286 = t26266 + t26276;
  t26156 = t34*t26155;
  t26179 = t19844*t26178;
  t26180 = t26156 + t26179;
  t26181 = t26180*t20375;
  t26182 = t20588*t20605*t26152;
  t26183 = t19844*t26155;
  t26184 = -1.*t34*t26178;
  t26185 = t26183 + t26184;
  t26186 = -1.*t26185*t21450;
  t26187 = t26182 + t26186;
  t26188 = t20478*t26187;
  t26189 = t26181 + t26188;
  t26416 = -1. + t2417;
  t26417 = 0.0016*t26416;
  t26418 = -0.2707*t945;
  t26419 = -1.*t945*t26243;
  t26420 = t2417*t26236;
  t26421 = t26417 + t26418 + t26419 + t26420;
  t26396 = -1.*t2417;
  t26397 = 1. + t26396;
  t26398 = -0.2707*t26397;
  t26399 = 0.0016*t945;
  t26400 = t2417*t26243;
  t26401 = t945*t26236;
  t26409 = t26398 + t26399 + t26400 + t26401;
  t26394 = -0.21*t24269;
  t26440 = -1.*t945*t26323;
  t26441 = t2417*t26286;
  t26442 = t26440 + t26441;
  t26395 = 0.049*t24327;
  t26436 = t2417*t26323;
  t26437 = t945*t26286;
  t26438 = t26436 + t26437;
  t26471 = -1.*t4208;
  t26474 = 1. + t26471;
  t26541 = -0.21*t26474;
  t26547 = 0.049*t919;
  t26554 = t919*t26421;
  t26555 = t4208*t26409;
  t26559 = t26541 + t26547 + t26554 + t26555;
  t26488 = -0.049*t26474;
  t26509 = -0.21*t919;
  t26521 = t4208*t26421;
  t26524 = -1.*t919*t26409;
  t26536 = t26488 + t26509 + t26521 + t26524;
  t26456 = 0.049*t24425;
  t26636 = t919*t26442;
  t26637 = t4208*t26438;
  t26638 = t26636 + t26637;
  t26470 = -0.09*t24773;
  t26632 = t4208*t26442;
  t26633 = -1.*t919*t26438;
  t26634 = t26632 + t26633;
  t26652 = -1.*t6918;
  t26653 = 1. + t26652;
  t26660 = -0.049*t26653;
  t26661 = -0.09*t574;
  t26662 = -1.*t574*t26559;
  t26663 = t6918*t26536;
  t26664 = t26660 + t26661 + t26662 + t26663;
  t26654 = -0.09*t26653;
  t26655 = 0.049*t574;
  t26656 = t6918*t26559;
  t26657 = t574*t26536;
  t26658 = t26654 + t26655 + t26656 + t26657;
  t26670 = t6918*t26638;
  t26671 = t574*t26634;
  t26672 = t26670 + t26671;
  t26666 = -1.*t574*t26638;
  t26667 = t6918*t26634;
  t26668 = t26666 + t26667;
  t26836 = 0.135*t24988;
  t26659 = t26658*t9188;
  t26914 = -1.*t20588;
  t26915 = 1. + t26914;
  t26673 = t26672*t25515;
  t26916 = -0.049*t26915;
  t26917 = 0.0044*t11533;
  t26918 = t20588*t26664;
  t26919 = t26916 + t26917 + t26918;
  t26921 = -0.135*t26915;
  t26922 = -0.1306*t20588;
  t26923 = -0.049*t11533;
  t26924 = -1.*t11533*t26664;
  t26925 = t26921 + t26922 + t26923 + t26924;
  t26677 = t26658*t25515;
  t26739 = -1.*t26658*t26148;
  t26685 = -1.*t26658*t25515;
  t26693 = -1.*t26672*t26148;
  t26927 = Power(t20588,2);
  t26929 = Power(t11533,2);
  t26801 = -1.*t11305*t20588*t34;
  t26802 = -1.*t19844*t20588*t421;
  t26803 = t26801 + t26802;
  t26804 = t26803*t20375;
  t26806 = -1.*t20605*t11533;
  t26807 = -1.*t19844*t11305*t20588;
  t26808 = t20588*t34*t421;
  t26809 = t26807 + t26808;
  t26821 = -1.*t26809*t21450;
  t26822 = t26806 + t26821;
  t26823 = t20478*t26822;
  t26824 = t26804 + t26823;
  t26986 = -1.*t20588*t26919*t24988;
  t26987 = t11533*t26925*t24988;
  t27011 = t11533*t26919;
  t27012 = t20588*t26925;
  t27013 = t27011 + t27012;
  t26933 = t20588*t26919*t24988;
  t26938 = -1.*t11533*t26925*t24988;
  t27033 = -1.*t11533*t26919;
  t27035 = -1.*t20588*t26925;
  t27036 = t27033 + t27035;
  t27008 = 0.135*t25515;
  t26920 = t20588*t26919*t17518;
  t26928 = t26927*t26668*t24988;
  t27073 = 0.135*t421;
  t27074 = t421*t26925;
  t27078 = t11305*t26658;
  t27084 = t27073 + t27074 + t27078;
  t27066 = -1.*t11305;
  t27067 = 1. + t27066;
  t27068 = -0.135*t27067;
  t27069 = t11305*t26925;
  t27070 = -1.*t421*t26658;
  t27071 = t27068 + t27069 + t27070;
  t26991 = -1.*t26927*t26668*t26152;
  t27108 = -1.*t11305*t11533*t26668;
  t27109 = -1.*t421*t26672;
  t27110 = t27108 + t27109;
  t27104 = -1.*t421*t11533*t26668;
  t27105 = t11305*t26672;
  t27106 = t27104 + t27105;
  t26962 = -1.*t20588*t26919*t26152;
  t27016 = t20588*t26919*t26152;
  t27121 = -1.*t27084*t25561;
  t27123 = -1.*t27071*t25617;
  t27156 = t20588*t421*t27084;
  t27157 = t11305*t20588*t27071;
  t27158 = t27011 + t27156 + t27157;
  t27046 = t26927*t26668*t26152;
  t27115 = t27084*t25561;
  t27117 = t27071*t25617;
  t27169 = -1.*t20588*t421*t27084;
  t27171 = -1.*t11305*t20588*t27071;
  t27173 = t27033 + t27169 + t27171;
  t27161 = 0.135*t25561;
  t27054 = -1.*t20588*t26919*t17518;
  t27056 = -1.*t26927*t26668*t24988;
  t27235 = -1.*t19844;
  t27236 = 1. + t27235;
  t27237 = -0.135*t27236;
  t27238 = -1.*t34*t27084;
  t27239 = t19844*t27071;
  t27240 = t27237 + t27238 + t27239;
  t27230 = 0.135*t34;
  t27231 = t19844*t27084;
  t27232 = t34*t27071;
  t27233 = t27230 + t27231 + t27232;
  t27246 = t19844*t27106;
  t27247 = t34*t27110;
  t27248 = t27246 + t27247;
  t27242 = -1.*t34*t27106;
  t27243 = t19844*t27110;
  t27244 = t27242 + t27243;
  t27256 = -1.*t27240*t25729;
  t27257 = -1.*t27233*t25663;
  t27268 = -1.*t26809*t27240;
  t27269 = -1.*t26803*t27233;
  t27270 = t27268 + t27269 + t27011;
  t27194 = t20588*t11533*t26668;
  t27252 = t27240*t25729;
  t27253 = t27233*t25663;
  t27283 = t26809*t27240;
  t27284 = t26803*t27233;
  t27285 = t27283 + t27284 + t27033;
  t27212 = -1.*t20588*t11533*t26668;
  t27325 = Sin(var1[3]);
  t27331 = Cos(var1[3]);
  t27339 = t20605*t25729;
  t27340 = t20588*t24988*t21450;
  t27341 = t27339 + t27340;
  t27342 = t27325*t27341;
  t27344 = t20478*t25663;
  t27345 = -1.*t20375*t25736;
  t27346 = t27344 + t27345;
  t27347 = t27331*t27346;
  t27348 = t27342 + t27347;
  t27326 = t20605*t21056;
  t27328 = t20588*t17518*t21450;
  t27329 = t27326 + t27328;
  t27332 = t20478*t20374;
  t27333 = -1.*t20375*t21597;
  t27334 = t27332 + t27333;
  t27370 = t27331*t27341;
  t27371 = -1.*t27325*t27346;
  t27372 = t27370 + t27371;
  t27353 = t20605*t26185;
  t27354 = t20588*t26152*t21450;
  t27355 = t27353 + t27354;
  t27357 = t20478*t26180;
  t27358 = -1.*t20375*t26187;
  t27359 = t27357 + t27358;
  t27306 = t26803*t27248;
  t27388 = t20605*t26809;
  t27389 = -1.*t11533*t21450;
  t27391 = t27388 + t27389;
  t27311 = -1.*t27233*t20374;
  t27314 = -1.*t27248*t25663;
  t27392 = t20605*t27240;
  t27393 = t26919*t21450;
  t27394 = t27392 + t27393;
  t27403 = t20605*t27244;
  t27405 = t20588*t26668*t21450;
  t27406 = t27403 + t27405;
  t27381 = t20605*t26919;
  t27382 = -1.*t27240*t21450;
  t27383 = t27381 + t27382;
  t27399 = t20588*t20605*t26668;
  t27400 = -1.*t27244*t21450;
  t27401 = t27399 + t27400;
  t27387 = t26822*t27383;
  t27395 = t27391*t27394;
  t27397 = t27284 + t27387 + t27395;
  t27293 = -1.*t26803*t27248;
  t27296 = t27248*t26180;
  t27234 = t27233*t20374;
  t27249 = t27248*t25663;
  t27439 = t27394*t27341;
  t27441 = t27383*t25736;
  t27258 = -1.*t27248*t26180;
  t27421 = -1.*t27394*t27341;
  t27422 = -1.*t27383*t25736;
  t27262 = -1.*t27233*t26180;
  t27429 = -1.*t26822*t27383;
  t27432 = -1.*t27391*t27394;
  t27433 = t27269 + t27429 + t27432;
  t27272 = t27233*t26180;
  t27407 = t27391*t27406;
  t27488 = t20478*t26803;
  t27489 = -1.*t20375*t26822;
  t27490 = t27488 + t27489;
  t27410 = -1.*t27394*t27329;
  t27411 = -1.*t27406*t27341;
  t27499 = t27233*t20375;
  t27500 = t20478*t27383;
  t27501 = t27499 + t27500;
  t27503 = t20478*t27233;
  t27504 = -1.*t20375*t27383;
  t27505 = t27503 + t27504;
  t27483 = t27248*t20375;
  t27484 = t20478*t27401;
  t27486 = t27483 + t27484;
  t27492 = t20478*t27248;
  t27493 = -1.*t20375*t27401;
  t27494 = t27492 + t27493;
  t27502 = t26824*t27501;
  t27506 = t27490*t27505;
  t27507 = t27395 + t27502 + t27506;
  t27436 = -1.*t27391*t27406;
  t27440 = t27406*t27355;
  t27447 = t27394*t27329;
  t27448 = t27406*t27341;
  t27537 = t27501*t25751;
  t27539 = t27505*t27346;
  t27458 = -1.*t27406*t27355;
  t27519 = -1.*t27501*t25751;
  t27520 = -1.*t27505*t27346;
  t27463 = -1.*t27394*t27355;
  t27531 = -1.*t26824*t27501;
  t27532 = -1.*t27490*t27505;
  t27533 = t27432 + t27531 + t27532;
  t27473 = t27394*t27355;
  t27366 = t27331*t27329;
  t27367 = -1.*t27325*t27334;
  t27368 = t27366 + t27367;
  t25911 = t25759 + t25830 + t25837 + t25898;
  t25924 = 0.0184*t972;
  t25925 = -1.*t972*t25884;
  t25926 = -0.7055*t1686;
  t25927 = -1.*t25828*t1686;
  t25928 = t25924 + t25925 + t25926 + t25927;
  t25930 = -0.0184*t972;
  t25931 = t972*t25884;
  t25956 = -1.*t972*t25944;
  t25957 = 0.7055*t1686;
  t25981 = t25971*t1686;
  t25991 = t25828*t1686;
  t26004 = t25930 + t25931 + t25956 + t25957 + t25981 + t25991;
  t26020 = -1.*t972*t25971;
  t26028 = -1.*t25944*t1686;
  t26029 = t25759 + t26020 + t25830 + t25837 + t25898 + t26028;
  t27375 = t27331*t27355;
  t27376 = -1.*t27325*t27359;
  t27377 = t27375 + t27376;
  t26237 = t26236*t24266;
  t26244 = t26243*t26048;
  t26245 = t26229 + t26237 + t26238 + t26244;
  t26247 = -0.2707*t24266;
  t26248 = -1.*t26243*t24266;
  t26249 = -1.*t26236*t3331;
  t26250 = 0.0016*t26048;
  t26251 = t26247 + t26248 + t26249 + t26250;
  t26260 = -0.2707*t1909;
  t26296 = t26286*t24266;
  t26300 = t26243*t24266;
  t26305 = 0.0016*t3331;
  t26311 = t26236*t3331;
  t26324 = t26323*t26048;
  t26328 = t26260 + t26296 + t26300 + t26305 + t26311 + t26324;
  t26350 = -1.*t26236*t1909;
  t26351 = -1.*t26323*t24266;
  t26375 = -1.*t26286*t3331;
  t26376 = -1.*t26243*t3331;
  t26390 = t26350 + t26229 + t26351 + t26238 + t26375 + t26376;
  t26415 = t26409*t26059;
  t26423 = t26421*t26086;
  t26424 = t26394 + t26395 + t26415 + t26423;
  t26426 = -1.*t26421*t24269;
  t26427 = -1.*t26409*t24327;
  t26428 = 0.049*t26059;
  t26429 = -0.21*t26086;
  t26430 = t26426 + t26427 + t26428 + t26429;
  t26432 = 0.049*t3586;
  t26433 = t26421*t24269;
  t26434 = -0.21*t5419;
  t26435 = t26409*t24327;
  t26439 = t26438*t26059;
  t26443 = t26442*t26086;
  t26444 = t26432 + t26433 + t26434 + t26435 + t26439 + t26443;
  t26446 = -1.*t26409*t3586;
  t26447 = -1.*t26442*t24269;
  t26448 = -1.*t26421*t5419;
  t26449 = -1.*t26438*t24327;
  t26450 = t26446 + t26394 + t26447 + t26448 + t26395 + t26449;
  t26540 = t26536*t26107;
  t26569 = t26559*t26146;
  t26573 = t26456 + t26470 + t26540 + t26569;
  t26581 = -1.*t26559*t24425;
  t26588 = -1.*t26536*t24773;
  t26589 = -0.09*t26107;
  t26613 = 0.049*t26146;
  t26614 = t26581 + t26588 + t26589 + t26613;
  t26628 = -0.09*t6566;
  t26629 = 0.049*t8069;
  t26630 = t26559*t24425;
  t26631 = t26536*t24773;
  t26635 = t26634*t26107;
  t26639 = t26638*t26146;
  t26640 = t26628 + t26629 + t26630 + t26631 + t26635 + t26639;
  t26644 = -1.*t26536*t6566;
  t26645 = -1.*t26559*t8069;
  t26646 = -1.*t26638*t24425;
  t26647 = -1.*t26634*t24773;
  t26648 = t26644 + t26645 + t26456 + t26646 + t26470 + t26647;
  t26665 = t26664*t17518;
  t26669 = t26668*t24988;
  t26674 = t26659 + t26665 + t26669 + t26673;
  t26675 = -1.*t26148*t26674;
  t26676 = t26664*t24988;
  t26678 = t26676 + t26677;
  t26679 = -1.*t25515*t26678;
  t26680 = -1.*t26664*t24988;
  t26703 = -1.*t26668*t26152;
  t26713 = t26680 + t26685 + t26693 + t26703;
  t26723 = -1.*t25515*t26713;
  t26773 = -1.*t26664*t26152;
  t26774 = t26739 + t26773;
  t26775 = -1.*t9188*t26774;
  t26800 = t26675 + t26679 + t26723 + t26775;
  t26837 = 0.1306*t26148;
  t26848 = t26836 + t26837;
  t26850 = 0.135*t17518;
  t26851 = 0.1306*t25515;
  t26855 = t26850 + t26851;
  t26861 = -0.1306*t25515;
  t26863 = 0.135*t26152;
  t26874 = t26861 + t26863;
  t26894 = -0.1306*t9188;
  t26896 = t26894 + t26836;
  t26926 = -1.*t11533*t26925*t17518;
  t26930 = t26929*t26668*t24988;
  t26931 = t26659 + t26920 + t26926 + t26928 + t26930 + t26673;
  t26932 = t20588*t26152*t26931;
  t26947 = t26933 + t26938 + t26677;
  t26957 = t20588*t24988*t26947;
  t26968 = t11533*t26925*t26152;
  t26978 = t26739 + t26962 + t26968;
  t26982 = t20588*t17518*t26978;
  t26994 = -1.*t26929*t26668*t26152;
  t26995 = t26986 + t26987 + t26685 + t26693 + t26991 + t26994;
  t26996 = t20588*t24988*t26995;
  t27000 = t26932 + t26957 + t26982 + t26996;
  t27638 = t27331*t27391;
  t27639 = -1.*t27325*t27490;
  t27640 = t27638 + t27639;
  t27014 = t20588*t27013*t26152;
  t27015 = t26658*t26148;
  t27028 = -1.*t11533*t26925*t26152;
  t27029 = t27015 + t27016 + t27028;
  t27030 = -1.*t11533*t27029;
  t27031 = t27008 + t27014 + t27030;
  t27037 = t20588*t27036*t24988;
  t27038 = 0.135*t26148;
  t27039 = t26986 + t26987 + t26685;
  t27040 = -1.*t11533*t27039;
  t27041 = t27037 + t27038 + t27040;
  t27043 = 0.135*t9188;
  t27044 = t20588*t27013*t24988;
  t27045 = t26672*t26148;
  t27047 = t26929*t26668*t26152;
  t27048 = t26933 + t26938 + t26677 + t27045 + t27046 + t27047;
  t27049 = -1.*t11533*t27048;
  t27050 = t27043 + t27044 + t27049;
  t27052 = t20588*t27036*t17518;
  t27053 = -1.*t26658*t9188;
  t27055 = t11533*t26925*t17518;
  t27057 = -1.*t26929*t26668*t24988;
  t27058 = -1.*t26672*t25515;
  t27059 = t27053 + t27054 + t27055 + t27056 + t27057 + t27058;
  t27060 = -1.*t11533*t27059;
  t27061 = t27052 + t27008 + t27060;
  t27072 = t27071*t19211;
  t27094 = t27084*t20324;
  t27107 = t27106*t25561;
  t27111 = t27110*t25617;
  t27113 = t26920 + t26928 + t27072 + t27094 + t27107 + t27111;
  t27114 = t20588*t26152*t27113;
  t27118 = t26933 + t27115 + t27117;
  t27120 = t20588*t24988*t27118;
  t27124 = -1.*t27110*t26155;
  t27125 = -1.*t27106*t26178;
  t27129 = t26986 + t26991 + t27121 + t27123 + t27124 + t27125;
  t27137 = t20588*t24988*t27129;
  t27149 = -1.*t27071*t26155;
  t27150 = -1.*t27084*t26178;
  t27151 = t26962 + t27149 + t27150;
  t27152 = t20588*t17518*t27151;
  t27153 = t27114 + t27120 + t27137 + t27152;
  t27159 = t20588*t27158*t26152;
  t27162 = t27071*t26155;
  t27163 = t27084*t26178;
  t27164 = t27016 + t27162 + t27163;
  t27165 = -1.*t11533*t27164;
  t27167 = t27159 + t27161 + t27165;
  t27177 = t20588*t27173*t24988;
  t27183 = 0.135*t26178;
  t27184 = t26986 + t27121 + t27123;
  t27185 = -1.*t11533*t27184;
  t27187 = t27177 + t27183 + t27185;
  t27190 = t20588*t27158*t24988;
  t27191 = t20588*t421*t27106;
  t27193 = t11305*t20588*t27110;
  t27196 = t27191 + t27193 + t27194;
  t27198 = t20588*t27196*t26152;
  t27199 = 0.135*t20324;
  t27200 = t27110*t26155;
  t27202 = t27106*t26178;
  t27203 = t26933 + t27046 + t27115 + t27117 + t27200 + t27202;
  t27204 = -1.*t11533*t27203;
  t27205 = t27190 + t27198 + t27199 + t27204;
  t27207 = t20588*t27173*t17518;
  t27209 = -1.*t20588*t421*t27106;
  t27210 = -1.*t11305*t20588*t27110;
  t27213 = t27209 + t27210 + t27212;
  t27215 = t20588*t27213*t24988;
  t27217 = -1.*t27071*t19211;
  t27218 = -1.*t27084*t20324;
  t27220 = -1.*t27106*t25561;
  t27221 = -1.*t27110*t25617;
  t27222 = t27054 + t27056 + t27217 + t27218 + t27220 + t27221;
  t27224 = -1.*t11533*t27222;
  t27226 = t27207 + t27215 + t27161 + t27224;
  t27241 = t27240*t21056;
  t27245 = t27244*t25729;
  t27250 = t26920 + t26928 + t27234 + t27241 + t27245 + t27249;
  t27251 = t26180*t27250;
  t27254 = t26933 + t27252 + t27253;
  t27255 = t25663*t27254;
  t27259 = -1.*t27244*t26185;
  t27260 = t26986 + t26991 + t27256 + t27257 + t27258 + t27259;
  t27261 = t25663*t27260;
  t27263 = -1.*t27240*t26185;
  t27264 = t26962 + t27262 + t27263;
  t27265 = t20374*t27264;
  t27266 = t27251 + t27255 + t27261 + t27265;
  t27271 = t27270*t26180;
  t27274 = t27240*t26185;
  t27275 = t27016 + t27272 + t27274;
  t27276 = t26803*t27275;
  t27280 = t27271 + t27276;
  t27286 = t27285*t25663;
  t27287 = t26986 + t27256 + t27257;
  t27288 = t26803*t27287;
  t27289 = t27286 + t27288;
  t27291 = t27270*t25663;
  t27292 = -1.*t26809*t27244;
  t27294 = t27292 + t27293 + t27194;
  t27295 = t27294*t26180;
  t27297 = t27244*t26185;
  t27298 = t26933 + t27046 + t27252 + t27253 + t27296 + t27297;
  t27299 = t26803*t27298;
  t27301 = t27291 + t27295 + t27299;
  t27304 = t27285*t20374;
  t27305 = t26809*t27244;
  t27308 = t27305 + t27306 + t27212;
  t27309 = t27308*t25663;
  t27312 = -1.*t27240*t21056;
  t27313 = -1.*t27244*t25729;
  t27315 = t27054 + t27056 + t27311 + t27312 + t27313 + t27314;
  t27316 = t26803*t27315;
  t27317 = t27304 + t27309 + t27316;
  t27369 = 0.15*t25751*t27368;
  t27373 = 0.15*t23733*t27372;
  t27374 = 0.15*t26189*t27372;
  t27378 = 0.15*t25751*t27377;
  t27379 = t27369 + t27373 + t27374 + t27378;
  t27330 = t27325*t27329;
  t27336 = t27331*t27334;
  t27337 = t27330 + t27336;
  t27356 = t27325*t27355;
  t27360 = t27331*t27359;
  t27361 = t27356 + t27360;
  t27420 = t27341*t27397;
  t27423 = t27257 + t27421 + t27422;
  t27425 = t27391*t27423;
  t27426 = t27420 + t27425;
  t27398 = t27329*t27397;
  t27402 = t26822*t27401;
  t27408 = t27306 + t27402 + t27407;
  t27409 = t27341*t27408;
  t27412 = -1.*t27383*t21597;
  t27413 = -1.*t27401*t25736;
  t27415 = t27311 + t27314 + t27410 + t27411 + t27412 + t27413;
  t27416 = t27391*t27415;
  t27417 = t27398 + t27409 + t27416;
  t27434 = t27341*t27433;
  t27435 = -1.*t26822*t27401;
  t27437 = t27293 + t27435 + t27436;
  t27438 = t27355*t27437;
  t27442 = t27401*t26187;
  t27443 = t27253 + t27296 + t27439 + t27440 + t27441 + t27442;
  t27444 = t27391*t27443;
  t27445 = t27434 + t27438 + t27444;
  t27450 = t27383*t21597;
  t27451 = t27401*t25736;
  t27453 = t27234 + t27249 + t27447 + t27448 + t27450 + t27451;
  t27455 = t27355*t27453;
  t27456 = t27253 + t27439 + t27441;
  t27457 = t27341*t27456;
  t27460 = -1.*t27401*t26187;
  t27461 = t27257 + t27258 + t27421 + t27458 + t27422 + t27460;
  t27462 = t27341*t27461;
  t27465 = -1.*t27383*t26187;
  t27467 = t27262 + t27463 + t27465;
  t27468 = t27329*t27467;
  t27470 = t27455 + t27457 + t27462 + t27468;
  t27472 = t27355*t27433;
  t27475 = t27383*t26187;
  t27477 = t27272 + t27473 + t27475;
  t27478 = t27391*t27477;
  t27479 = t27472 + t27478;
  t27487 = t26824*t27486;
  t27495 = t27490*t27494;
  t27497 = t27407 + t27487 + t27495;
  t27498 = t25751*t27497;
  t27508 = t23733*t27507;
  t27509 = -1.*t27501*t23733;
  t27510 = -1.*t27505*t27334;
  t27511 = -1.*t27486*t25751;
  t27512 = -1.*t27494*t27346;
  t27514 = t27410 + t27411 + t27509 + t27510 + t27511 + t27512;
  t27515 = t26824*t27514;
  t27516 = t27498 + t27508 + t27515;
  t27518 = t25751*t27507;
  t27521 = t27421 + t27519 + t27520;
  t27522 = t26824*t27521;
  t27523 = t27518 + t27522;
  t27526 = -1.*t26824*t27486;
  t27528 = -1.*t27490*t27494;
  t27529 = t27436 + t27526 + t27528;
  t27530 = t26189*t27529;
  t27535 = t25751*t27533;
  t27540 = t27486*t26189;
  t27542 = t27494*t27359;
  t27543 = t27439 + t27440 + t27537 + t27539 + t27540 + t27542;
  t27545 = t26824*t27543;
  t27547 = t27530 + t27535 + t27545;
  t27549 = t27501*t23733;
  t27550 = t27505*t27334;
  t27551 = t27486*t25751;
  t27552 = t27494*t27346;
  t27554 = t27447 + t27448 + t27549 + t27550 + t27551 + t27552;
  t27555 = t26189*t27554;
  t27556 = t27439 + t27537 + t27539;
  t27557 = t25751*t27556;
  t27558 = -1.*t27486*t26189;
  t27562 = -1.*t27494*t27359;
  t27564 = t27421 + t27458 + t27519 + t27520 + t27558 + t27562;
  t27566 = t25751*t27564;
  t27567 = -1.*t27501*t26189;
  t27569 = -1.*t27505*t27359;
  t27570 = t27463 + t27567 + t27569;
  t27571 = t23733*t27570;
  t27573 = t27555 + t27557 + t27566 + t27571;
  t27576 = t26189*t27533;
  t27577 = t27501*t26189;
  t27578 = t27505*t27359;
  t27579 = t27473 + t27577 + t27578;
  t27580 = t26824*t27579;
  t27581 = t27576 + t27580;
  t27741 = t27325*t27391;
  t27743 = t27331*t27490;
  t27744 = t27741 + t27743;
  t27338 = 0.15*t25751*t27337;
  t27350 = 0.15*t23733*t27348;
  t27352 = 0.15*t26189*t27348;
  t27362 = 0.15*t25751*t27361;
  t27364 = t27338 + t27350 + t27352 + t27362;
  t27678 = 0.15*t27368*t27348;
  t27680 = 0.15*t27337*t27372;
  t27681 = 0.15*t27372*t27361;
  t27682 = 0.15*t27348*t27377;
  t27684 = t27678 + t27680 + t27681 + t27682;
  t27802 = 1.e-6*t25751;
  t27860 = -1.*t6918*t24425;
  t27861 = -1.*t574*t24773;
  t27862 = t27860 + t27861;
  t27864 = -0.000099*t25751;
  t27863 = 0.000171*t23733;
  t27865 = t27863 + t27864;
  t27870 = -0.000099*t23733;
  t27871 = 0.000287*t25751;
  t27872 = t27870 + t27871;
  t27877 = 0.000171*t25751;
  t27878 = -0.000099*t26189;
  t27879 = t27877 + t27878;
  t27881 = 1.e-6*t26824;
  t27882 = 0.000287*t26189;
  t27884 = t27881 + t27864 + t27882;
  t27893 = t26189*t27556;
  t27894 = t25751*t27570;
  t27895 = t27893 + t27894;
  t27900 = -1.e-6*t11533*t25751;
  t27901 = t20588*t24988*t27865;
  t27902 = t20588*t26152*t27872;
  t27903 = t20588*t17518*t27879;
  t27904 = t20588*t24988*t27884;
  t27517 = 0.15*t26189*t27516;
  t27525 = 0.15*t25751*t27523;
  t27548 = 0.15*t25751*t27547;
  t27575 = 0.15*t26824*t27573;
  t27582 = 0.15*t23733*t27581;
  t27583 = t27517 + t27525 + t27548 + t27575 + t27582;
  t27789 = 0.15*t27361*t27516;
  t27790 = 0.15*t27348*t27523;
  t27791 = 0.15*t27348*t27547;
  t27792 = 0.15*t27744*t27573;
  t27793 = 0.15*t27337*t27581;
  t27795 = t27789 + t27790 + t27791 + t27792 + t27793;
  t27700 = 0.15*t27377*t27516;
  t27701 = 0.15*t27372*t27523;
  t27702 = 0.15*t27372*t27547;
  t27703 = 0.15*t27640*t27573;
  t27704 = 0.15*t27368*t27581;
  t27706 = t27700 + t27701 + t27702 + t27703 + t27704;
  t28005 = 1.e-6*t27341;
  t27867 = -1.*t574*t26107;
  t27868 = -1.*t6918*t26146;
  t27869 = t27867 + t27868;
  t27874 = -1.*t574*t6566;
  t27875 = -1.*t6918*t8069;
  t27876 = t27874 + t27875;
  t28051 = -0.000099*t27341;
  t27889 = -1.*t26148*t26678;
  t27890 = -1.*t25515*t26774;
  t27891 = 0.049 + t27889 + t27890;
  t27976 = t27355*t27456;
  t27977 = t27341*t27467;
  t27978 = t27976 + t27977;
  t28049 = 0.000171*t27329;
  t28053 = t28049 + t28051;
  t28055 = -0.000099*t27329;
  t28057 = 0.000287*t27341;
  t28058 = t28055 + t28057;
  t28061 = 0.000171*t27341;
  t28062 = -0.000099*t27355;
  t28064 = t28061 + t28062;
  t28067 = 1.e-6*t27391;
  t28070 = 0.000287*t27355;
  t28071 = t28067 + t28051 + t28070;
  t27909 = t20588*t26152*t26947;
  t27910 = t20588*t24988*t26978;
  t27914 = t27909 + t27910;
  t28092 = -1.e-6*t11533*t27341;
  t28093 = t20588*t24988*t28053;
  t28094 = t20588*t26152*t28058;
  t28096 = t20588*t17518*t28064;
  t28097 = t20588*t24988*t28071;
  t27925 = -0.135*t20588*t421;
  t27927 = t20588*t26152*t27118;
  t27928 = t20588*t24988*t27151;
  t27930 = t27925 + t27927 + t27928;
  t27947 = t26180*t27254;
  t27948 = t25663*t27264;
  t27950 = t27947 + t27948;
  t27418 = 0.15*t26189*t27417;
  t27427 = 0.15*t25751*t27426;
  t27446 = 0.15*t25751*t27445;
  t27471 = 0.15*t26824*t27470;
  t27480 = 0.15*t23733*t27479;
  t27481 = t27418 + t27427 + t27446 + t27471 + t27480;
  t27782 = 0.15*t27348*t27426;
  t27783 = 0.15*t27417*t27361;
  t27784 = 0.15*t27348*t27445;
  t27785 = 0.15*t27744*t27470;
  t27786 = 0.15*t27337*t27479;
  t27787 = t27782 + t27783 + t27784 + t27785 + t27786;
  t27692 = 0.15*t27372*t27426;
  t27693 = 0.15*t27417*t27377;
  t27694 = 0.15*t27372*t27445;
  t27695 = 0.15*t27640*t27470;
  t27696 = 0.15*t27368*t27479;
  t27697 = t27692 + t27693 + t27694 + t27695 + t27696;
  t27971 = 0.15*t27426*t27516;
  t27972 = 0.15*t27417*t27523;
  t27974 = 0.15*t27479*t27547;
  t27980 = 0.15*t27978*t27573;
  t27981 = 0.15*t27470*t27895;
  t27982 = 0.15*t27445*t27581;
  t28161 = 1.e-6*t25663;
  t28203 = -0.000099*t25663;
  t28202 = 0.000171*t20374;
  t28204 = t28202 + t28203;
  t28206 = -0.000099*t20374;
  t28207 = 0.000287*t25663;
  t28208 = t28206 + t28207;
  t28210 = 0.000171*t25663;
  t28211 = -0.000099*t26180;
  t28212 = t28210 + t28211;
  t28215 = 1.e-6*t26803;
  t28236 = 0.000287*t26180;
  t28240 = t28215 + t28203 + t28236;
  t28270 = -1.e-6*t11533*t25663;
  t28271 = t20588*t24988*t28204;
  t28273 = t20588*t26152*t28208;
  t28274 = t20588*t17518*t28212;
  t28276 = t20588*t24988*t28240;
  t27267 = 0.15*t27266*t26824;
  t27281 = 0.15*t27280*t23733;
  t27290 = 0.15*t27289*t25751;
  t27303 = 0.15*t27301*t25751;
  t27318 = 0.15*t27317*t26189;
  t27319 = t27267 + t27281 + t27290 + t27303 + t27318;
  t27767 = 0.15*t27266*t27744;
  t27768 = 0.15*t27280*t27337;
  t27769 = 0.15*t27289*t27348;
  t27771 = 0.15*t27301*t27348;
  t27772 = 0.15*t27317*t27361;
  t27773 = t27767 + t27768 + t27769 + t27771 + t27772;
  t27664 = 0.15*t27266*t27640;
  t27668 = 0.15*t27280*t27368;
  t27669 = 0.15*t27289*t27372;
  t27670 = 0.15*t27301*t27372;
  t27672 = 0.15*t27317*t27377;
  t27674 = t27664 + t27668 + t27669 + t27670 + t27672;
  t28123 = 0.15*t27289*t27417;
  t28125 = 0.15*t27317*t27426;
  t28126 = 0.15*t27280*t27445;
  t28128 = 0.15*t27950*t27470;
  t28129 = 0.15*t27266*t27978;
  t28130 = 0.15*t27301*t27479;
  t27943 = 0.15*t27289*t27516;
  t27944 = 0.15*t27317*t27523;
  t27946 = 0.15*t27280*t27547;
  t27951 = 0.15*t27950*t27573;
  t27952 = 0.15*t27266*t27895;
  t27957 = 0.15*t27301*t27581;
  t28330 = 1.e-6*t20588*t24988;
  t28521 = -0.000099*t20588*t24988;
  t28511 = 0.000171*t20588*t17518;
  t28526 = t28511 + t28521;
  t28544 = -0.000099*t20588*t17518;
  t28556 = 0.000287*t20588*t24988;
  t28559 = t28544 + t28556;
  t28563 = 0.000171*t20588*t24988;
  t28567 = -0.000099*t20588*t26152;
  t28571 = t28563 + t28567;
  t28576 = -1.e-6*t11533;
  t28583 = 0.000287*t20588*t26152;
  t28586 = t28576 + t28521 + t28583;
  t28599 = -1.e-6*t20588*t11533*t24988;
  t28600 = t20588*t24988*t28526;
  t28601 = t20588*t26152*t28559;
  t28602 = t20588*t17518*t28571;
  t28604 = t20588*t24988*t28586;
  t28287 = 0.15*t27187*t27317;
  t28288 = 0.15*t27226*t27289;
  t28289 = 0.15*t27167*t27301;
  t28290 = 0.15*t27930*t27266;
  t28291 = 0.15*t27153*t27950;
  t28292 = 0.15*t27205*t27280;
  t27155 = 0.15*t27153*t26824;
  t27168 = 0.15*t27167*t23733;
  t27188 = 0.15*t27187*t25751;
  t27206 = 0.15*t27205*t25751;
  t27227 = 0.15*t27226*t26189;
  t27228 = t27155 + t27168 + t27188 + t27206 + t27227;
  t27760 = 0.15*t27153*t27744;
  t27761 = 0.15*t27167*t27337;
  t27762 = 0.15*t27187*t27348;
  t27763 = 0.15*t27205*t27348;
  t27764 = 0.15*t27226*t27361;
  t27765 = t27760 + t27761 + t27762 + t27763 + t27764;
  t27657 = 0.15*t27153*t27640;
  t27658 = 0.15*t27167*t27368;
  t27659 = 0.15*t27187*t27372;
  t27660 = 0.15*t27205*t27372;
  t27661 = 0.15*t27226*t27377;
  t27662 = t27657 + t27658 + t27659 + t27660 + t27661;
  t28109 = 0.15*t27187*t27417;
  t28111 = 0.15*t27226*t27426;
  t28112 = 0.15*t27167*t27445;
  t28113 = 0.15*t27930*t27470;
  t28114 = 0.15*t27153*t27978;
  t28115 = 0.15*t27205*t27479;
  t27922 = 0.15*t27187*t27516;
  t27923 = 0.15*t27226*t27523;
  t27924 = 0.15*t27167*t27547;
  t27931 = 0.15*t27930*t27573;
  t27933 = 0.15*t27153*t27895;
  t27934 = 0.15*t27205*t27581;
  t28530 = t27862*t28526;
  t28560 = t27869*t28559;
  t28573 = t27876*t28571;
  t28587 = t27862*t28586;
  t28605 = 0.15*t27041*t27226;
  t28606 = 0.15*t27061*t27187;
  t28607 = 0.15*t27031*t27205;
  t28608 = 0.15*t27914*t27153;
  t28609 = 0.15*t27000*t27930;
  t28610 = 0.15*t27050*t27167;
  t28611 = t28599 + t28600 + t28601 + t28602 + t28604 + t28605 + t28606 + t28607 + t28608 + t28609 + t28610;
  t28622 = 1.e-6*t20588*t26803*t24988;
  t28806 = t28571*t20374;
  t28818 = t28526*t25663;
  t28819 = t28586*t25663;
  t28832 = t28559*t26180;
  t28279 = 0.15*t27041*t27317;
  t28280 = 0.15*t27061*t27289;
  t28281 = 0.15*t27031*t27301;
  t28282 = 0.15*t27914*t27266;
  t28283 = 0.15*t27000*t27950;
  t28284 = 0.15*t27050*t27280;
  t27004 = 0.15*t27000*t26824;
  t27032 = 0.15*t27031*t23733;
  t27042 = 0.15*t27041*t25751;
  t27051 = 0.15*t27050*t25751;
  t27062 = 0.15*t27061*t26189;
  t27063 = t27004 + t27032 + t27042 + t27051 + t27062;
  t27753 = 0.15*t27000*t27744;
  t27754 = 0.15*t27031*t27337;
  t27755 = 0.15*t27041*t27348;
  t27756 = 0.15*t27050*t27348;
  t27757 = 0.15*t27061*t27361;
  t27758 = t27753 + t27754 + t27755 + t27756 + t27757;
  t27649 = 0.15*t27000*t27640;
  t27650 = 0.15*t27031*t27368;
  t27651 = 0.15*t27041*t27372;
  t27652 = 0.15*t27050*t27372;
  t27653 = 0.15*t27061*t27377;
  t27655 = t27649 + t27650 + t27651 + t27652 + t27653;
  t28895 = 1.e-6*t20588*t24988*t27391;
  t28903 = t28571*t27329;
  t28906 = t28526*t27341;
  t28955 = t28586*t27341;
  t28972 = t28559*t27355;
  t28099 = 0.15*t27041*t27417;
  t28100 = 0.15*t27061*t27426;
  t28101 = 0.15*t27031*t27445;
  t28102 = 0.15*t27914*t27470;
  t28103 = 0.15*t27000*t27978;
  t28105 = 0.15*t27050*t27479;
  t28988 = 1.e-6*t20588*t24988*t26824;
  t29001 = t28571*t23733;
  t29005 = t28526*t25751;
  t29015 = t28586*t25751;
  t29023 = t28559*t26189;
  t27905 = 0.15*t27041*t27516;
  t27907 = 0.15*t27061*t27523;
  t27908 = 0.15*t27031*t27547;
  t27915 = 0.15*t27914*t27573;
  t27916 = 0.15*t27000*t27895;
  t27917 = 0.15*t27050*t27581;
  t29598 = 1.e-6*t27862;
  t29656 = -0.000099*t27862;
  t29569 = 0.15*t26874*t27061;
  t29571 = 0.15*t26896*t27041;
  t29572 = 0.15*t26855*t27031;
  t29573 = 0.15*t26848*t27050;
  t29574 = 0.15*t27914*t26800;
  t29577 = 0.15*t27000*t27891;
  t29654 = 0.000171*t27876;
  t29657 = t29654 + t29656;
  t29659 = -0.000099*t27876;
  t29660 = 0.000287*t27862;
  t29661 = t29659 + t29660;
  t29664 = 0.000171*t27862;
  t29665 = -0.000099*t27869;
  t29668 = t29664 + t29665;
  t29671 = 0.000287*t27869;
  t29673 = t29656 + t29671;
  t29653 = -1.e-6*t11533*t27862;
  t29658 = t20588*t24988*t29657;
  t29662 = t20588*t26152*t29661;
  t29670 = t20588*t17518*t29668;
  t29676 = t20588*t24988*t29673;
  t28588 = 0.15*t26874*t27226;
  t28590 = 0.15*t26896*t27187;
  t28592 = 0.15*t26848*t27205;
  t28594 = 0.15*t27891*t27153;
  t28595 = 0.15*t26800*t27930;
  t28596 = 0.15*t26855*t27167;
  t28259 = 0.15*t26874*t27317;
  t28261 = 0.15*t26896*t27289;
  t28262 = 0.15*t26848*t27301;
  t28265 = 0.15*t27891*t27266;
  t28266 = 0.15*t26800*t27950;
  t28267 = 0.15*t26855*t27280;
  t26825 = 0.15*t26800*t26824;
  t26849 = 0.15*t26848*t23733;
  t26857 = 0.15*t26855*t25751;
  t26884 = 0.15*t26874*t25751;
  t26898 = 0.15*t26896*t26189;
  t26912 = t26825 + t26849 + t26857 + t26884 + t26898;
  t27745 = 0.15*t26800*t27744;
  t27746 = 0.15*t26848*t27337;
  t27747 = 0.15*t26855*t27348;
  t27748 = 0.15*t26874*t27348;
  t27750 = 0.15*t26896*t27361;
  t27751 = t27745 + t27746 + t27747 + t27748 + t27750;
  t27641 = 0.15*t26800*t27640;
  t27642 = 0.15*t26848*t27368;
  t27644 = 0.15*t26855*t27372;
  t27645 = 0.15*t26874*t27372;
  t27646 = 0.15*t26896*t27377;
  t27647 = t27641 + t27642 + t27644 + t27645 + t27646;
  t28074 = 0.15*t26874*t27417;
  t28076 = 0.15*t26896*t27426;
  t28079 = 0.15*t26848*t27445;
  t28080 = 0.15*t27891*t27470;
  t28082 = 0.15*t26800*t27978;
  t28084 = 0.15*t26855*t27479;
  t27886 = 0.15*t26874*t27516;
  t27887 = 0.15*t26896*t27523;
  t27888 = 0.15*t26848*t27547;
  t27892 = 0.15*t27891*t27573;
  t27896 = 0.15*t26800*t27895;
  t27897 = 0.15*t26855*t27581;
  t29641 = 0.15*t26614*t26896;
  t29642 = 0.15*t26573*t26855;
  t29644 = 0.15*t26640*t26848;
  t29647 = 0.15*t26648*t26874;
  t29648 = t29598 + t29641 + t29642 + t29644 + t29647;
  t29553 = 0.15*t26614*t27061;
  t29554 = 0.15*t26648*t27041;
  t29556 = 0.15*t26640*t27031;
  t29559 = 0.15*t26573*t27050;
  t29560 = t28330 + t29553 + t29554 + t29556 + t29559;
  t28429 = 0.15*t26614*t27226;
  t28430 = 0.15*t26648*t27187;
  t28431 = 0.15*t26573*t27205;
  t28432 = 0.15*t26640*t27167;
  t28494 = t28330 + t28429 + t28430 + t28431 + t28432;
  t28196 = 0.15*t26614*t27317;
  t28197 = 0.15*t26648*t27289;
  t28198 = 0.15*t26573*t27301;
  t28199 = 0.15*t26640*t27280;
  t28200 = t28161 + t28196 + t28197 + t28198 + t28199;
  t26577 = 0.15*t26573*t23733;
  t26627 = 0.15*t26614*t25751;
  t26641 = 0.15*t26640*t25751;
  t26649 = 0.15*t26648*t26189;
  t26650 = t26577 + t26627 + t26641 + t26649;
  t27734 = 0.15*t26573*t27337;
  t27735 = 0.15*t26614*t27348;
  t27736 = 0.15*t26640*t27348;
  t27737 = 0.15*t26648*t27361;
  t27738 = t27734 + t27735 + t27736 + t27737;
  t27624 = 0.15*t26573*t27368;
  t27625 = 0.15*t26614*t27372;
  t27632 = 0.15*t26640*t27372;
  t27633 = 0.15*t26648*t27377;
  t27634 = t27624 + t27625 + t27632 + t27633;
  t28039 = 0.15*t26614*t27417;
  t28041 = 0.15*t26648*t27426;
  t28043 = 0.15*t26573*t27445;
  t28044 = 0.15*t26640*t27479;
  t28047 = t28005 + t28039 + t28041 + t28043 + t28044;
  t27834 = 0.15*t26614*t27516;
  t27835 = 0.15*t26648*t27523;
  t27836 = 0.15*t26573*t27547;
  t27857 = 0.15*t26640*t27581;
  t27858 = t27802 + t27834 + t27835 + t27836 + t27857;
  t30031 = 0.15*t26430*t26648;
  t30036 = 0.15*t26450*t26614;
  t30042 = 0.15*t26424*t26640;
  t30052 = 0.15*t26444*t26573;
  t30073 = t30031 + t30036 + t30042 + t30052;
  t29629 = 0.15*t26430*t26896;
  t29633 = 0.15*t26424*t26855;
  t29635 = 0.15*t26444*t26848;
  t29637 = 0.15*t26450*t26874;
  t29638 = t29598 + t29629 + t29633 + t29635 + t29637;
  t29172 = 0.15*t26430*t27061;
  t29177 = 0.15*t26450*t27041;
  t29190 = 0.15*t26444*t27031;
  t29195 = 0.15*t26424*t27050;
  t29551 = t28330 + t29172 + t29177 + t29190 + t29195;
  t28367 = 0.15*t26430*t27226;
  t28379 = 0.15*t26450*t27187;
  t28395 = 0.15*t26424*t27205;
  t28402 = 0.15*t26444*t27167;
  t28424 = t28330 + t28367 + t28379 + t28395 + t28402;
  t28190 = 0.15*t26430*t27317;
  t28191 = 0.15*t26450*t27289;
  t28192 = 0.15*t26424*t27301;
  t28193 = 0.15*t26444*t27280;
  t28194 = t28161 + t28190 + t28191 + t28192 + t28193;
  t26425 = 0.15*t26424*t23733;
  t26431 = 0.15*t26430*t25751;
  t26445 = 0.15*t26444*t25751;
  t26453 = 0.15*t26450*t26189;
  t26454 = t26425 + t26431 + t26445 + t26453;
  t27728 = 0.15*t26424*t27337;
  t27729 = 0.15*t26430*t27348;
  t27730 = 0.15*t26444*t27348;
  t27731 = 0.15*t26450*t27361;
  t27732 = t27728 + t27729 + t27730 + t27731;
  t27617 = 0.15*t26424*t27368;
  t27618 = 0.15*t26430*t27372;
  t27619 = 0.15*t26444*t27372;
  t27620 = 0.15*t26450*t27377;
  t27622 = t27617 + t27618 + t27619 + t27620;
  t28029 = 0.15*t26430*t27417;
  t28030 = 0.15*t26450*t27426;
  t28033 = 0.15*t26424*t27445;
  t28034 = 0.15*t26444*t27479;
  t28036 = t28005 + t28029 + t28030 + t28033 + t28034;
  t27826 = 0.15*t26430*t27516;
  t27828 = 0.15*t26450*t27523;
  t27829 = 0.15*t26424*t27547;
  t27830 = 0.15*t26444*t27581;
  t27832 = t27802 + t27826 + t27828 + t27829 + t27830;
  t30169 = 0.15*t26251*t26450;
  t30179 = 0.15*t26390*t26430;
  t30181 = 0.15*t26245*t26444;
  t30183 = 0.15*t26328*t26424;
  t30185 = t30169 + t30179 + t30181 + t30183;
  t29991 = 0.15*t26251*t26648;
  t29993 = 0.15*t26390*t26614;
  t29996 = 0.15*t26245*t26640;
  t30014 = 0.15*t26328*t26573;
  t30015 = t29991 + t29993 + t29996 + t30014;
  t29618 = 0.15*t26251*t26896;
  t29620 = 0.15*t26245*t26855;
  t29621 = 0.15*t26328*t26848;
  t29622 = 0.15*t26390*t26874;
  t29627 = t29598 + t29618 + t29620 + t29621 + t29622;
  t29108 = 0.15*t26251*t27061;
  t29133 = 0.15*t26390*t27041;
  t29138 = 0.15*t26328*t27031;
  t29143 = 0.15*t26245*t27050;
  t29153 = t28330 + t29108 + t29133 + t29138 + t29143;
  t28343 = 0.15*t26251*t27226;
  t28344 = 0.15*t26390*t27187;
  t28345 = 0.15*t26245*t27205;
  t28346 = 0.15*t26328*t27167;
  t28351 = t28330 + t28343 + t28344 + t28345 + t28346;
  t28177 = 0.15*t26251*t27317;
  t28180 = 0.15*t26390*t27289;
  t28185 = 0.15*t26245*t27301;
  t28187 = 0.15*t26328*t27280;
  t28188 = t28161 + t28177 + t28180 + t28185 + t28187;
  t26246 = 0.15*t26245*t23733;
  t26256 = 0.15*t26251*t25751;
  t26332 = 0.15*t26328*t25751;
  t26391 = 0.15*t26390*t26189;
  t26392 = t26246 + t26256 + t26332 + t26391;
  t27722 = 0.15*t26245*t27337;
  t27723 = 0.15*t26251*t27348;
  t27724 = 0.15*t26328*t27348;
  t27725 = 0.15*t26390*t27361;
  t27726 = t27722 + t27723 + t27724 + t27725;
  t27610 = 0.15*t26245*t27368;
  t27612 = 0.15*t26251*t27372;
  t27613 = 0.15*t26328*t27372;
  t27614 = 0.15*t26390*t27377;
  t27615 = t27610 + t27612 + t27613 + t27614;
  t28021 = 0.15*t26251*t27417;
  t28022 = 0.15*t26390*t27426;
  t28023 = 0.15*t26245*t27445;
  t28025 = 0.15*t26328*t27479;
  t28026 = t28005 + t28021 + t28022 + t28023 + t28025;
  t27819 = 0.15*t26251*t27516;
  t27820 = 0.15*t26390*t27523;
  t27822 = 0.15*t26245*t27547;
  t27823 = 0.15*t26328*t27581;
  t27824 = t27802 + t27819 + t27820 + t27822 + t27823;
  t30263 = 0.15*t25928*t26390;
  t30267 = 0.15*t26029*t26251;
  t30279 = 0.15*t25911*t26328;
  t30281 = 0.15*t26004*t26245;
  t30282 = t30263 + t30267 + t30279 + t30281;
  t30133 = 0.15*t25928*t26450;
  t30146 = 0.15*t26029*t26430;
  t30147 = 0.15*t25911*t26444;
  t30151 = 0.15*t26004*t26424;
  t30163 = t30133 + t30146 + t30147 + t30151;
  t29944 = 0.15*t25928*t26648;
  t29945 = 0.15*t26029*t26614;
  t29952 = 0.15*t25911*t26640;
  t29959 = 0.15*t26004*t26573;
  t29964 = t29944 + t29945 + t29952 + t29959;
  t29609 = 0.15*t25928*t26896;
  t29610 = 0.15*t25911*t26855;
  t29611 = 0.15*t26004*t26848;
  t29613 = 0.15*t26029*t26874;
  t29615 = t29598 + t29609 + t29610 + t29611 + t29613;
  t29076 = 0.15*t25928*t27061;
  t29077 = 0.15*t26029*t27041;
  t29088 = 0.15*t26004*t27031;
  t29089 = 0.15*t25911*t27050;
  t29090 = t28330 + t29076 + t29077 + t29088 + t29089;
  t28337 = 0.15*t25928*t27226;
  t28338 = 0.15*t26029*t27187;
  t28339 = 0.15*t25911*t27205;
  t28340 = 0.15*t26004*t27167;
  t28341 = t28330 + t28337 + t28338 + t28339 + t28340;
  t28166 = 0.15*t25928*t27317;
  t28167 = 0.15*t26029*t27289;
  t28168 = 0.15*t25911*t27301;
  t28169 = 0.15*t26004*t27280;
  t28170 = t28161 + t28166 + t28167 + t28168 + t28169;
  t25923 = 0.15*t25911*t23733;
  t25929 = 0.15*t25928*t25751;
  t26013 = 0.15*t26004*t25751;
  t26190 = 0.15*t26029*t26189;
  t26191 = t25923 + t25929 + t26013 + t26190;
  t27715 = 0.15*t25911*t27337;
  t27716 = 0.15*t25928*t27348;
  t27717 = 0.15*t26004*t27348;
  t27718 = 0.15*t26029*t27361;
  t27720 = t27715 + t27716 + t27717 + t27718;
  t27604 = 0.15*t25911*t27368;
  t27605 = 0.15*t25928*t27372;
  t27606 = 0.15*t26004*t27372;
  t27607 = 0.15*t26029*t27377;
  t27608 = t27604 + t27605 + t27606 + t27607;
  t28011 = 0.15*t25928*t27417;
  t28013 = 0.15*t26029*t27426;
  t28014 = 0.15*t25911*t27445;
  t28016 = 0.15*t26004*t27479;
  t28018 = t28005 + t28011 + t28013 + t28014 + t28016;
  t27812 = 0.15*t25928*t27516;
  t27813 = 0.15*t26029*t27523;
  t27815 = 0.15*t25911*t27547;
  t27816 = 0.15*t26004*t27581;
  t27817 = t27802 + t27812 + t27813 + t27815 + t27816;
  t30383 = -0.004125*t26029;
  t30385 = 0.000705*t26004;
  t30390 = t30383 + t30385;
  t30250 = -0.004125*t26390;
  t30253 = 0.000705*t26328;
  t30255 = t30250 + t30253;
  t30125 = -0.004125*t26450;
  t30127 = 0.000705*t26444;
  t30129 = t30125 + t30127;
  t29890 = -0.004125*t26648;
  t29904 = 0.000705*t26640;
  t29919 = t29890 + t29904;
  t29599 = -0.004125*t26896;
  t29604 = 0.000705*t26855;
  t29605 = t29598 + t29599 + t29604;
  t29056 = -0.004125*t27061;
  t29063 = 0.000705*t27050;
  t29070 = t28330 + t29056 + t29063;
  t28332 = -0.004125*t27226;
  t28333 = 0.000705*t27205;
  t28334 = t28330 + t28332 + t28333;
  t28162 = -0.004125*t27317;
  t28163 = 0.000705*t27301;
  t28164 = t28161 + t28162 + t28163;
  t24004 = 0.000705*t23733;
  t25753 = -0.004125*t25751;
  t25756 = t24004 + t25753;
  t27710 = 0.000705*t27337;
  t27711 = -0.004125*t27348;
  t27713 = t27710 + t27711;
  t27587 = 0.000705*t27368;
  t27601 = -0.004125*t27372;
  t27602 = t27587 + t27601;
  t28006 = -0.004125*t27417;
  t28007 = 0.000705*t27445;
  t28008 = t28005 + t28006 + t28007;
  t27807 = -0.004125*t27516;
  t27808 = 0.000705*t27547;
  t27809 = t27802 + t27807 + t27808;
  p_output1[0]=var2[21]*(-0.5*(0.3*t23733*t25751 + 0.3*t25751*t26189)*var2[0] - 0.5*t27379*var2[1] - 0.5*t27364*var2[2] - 0.5*t27583*var2[3] - 0.5*t27481*var2[4] - 0.5*t27319*var2[5] - 0.5*t27228*var2[14] - 0.5*t27063*var2[15] - 0.5*t26912*var2[16] - 0.5*t26650*var2[17] - 0.5*t26454*var2[18] - 0.5*t26392*var2[19] - 0.5*t26191*var2[20] - 0.5*t25756*var2[21]);
  p_output1[1]=var2[21]*(-0.5*t27379*var2[0] - 0.5*(0.3*t27368*t27372 + 0.3*t27372*t27377)*var2[1] - 0.5*t27684*var2[2] - 0.5*t27706*var2[3] - 0.5*t27697*var2[4] - 0.5*t27674*var2[5] - 0.5*t27662*var2[14] - 0.5*t27655*var2[15] - 0.5*t27647*var2[16] - 0.5*t27634*var2[17] - 0.5*t27622*var2[18] - 0.5*t27615*var2[19] - 0.5*t27608*var2[20] - 0.5*t27602*var2[21]);
  p_output1[2]=var2[21]*(-0.5*t27364*var2[0] - 0.5*t27684*var2[1] - 0.5*(0.3*t27337*t27348 + 0.3*t27348*t27361)*var2[2] - 0.5*t27795*var2[3] - 0.5*t27787*var2[4] - 0.5*t27773*var2[5] - 0.5*t27765*var2[14] - 0.5*t27758*var2[15] - 0.5*t27751*var2[16] - 0.5*t27738*var2[17] - 0.5*t27732*var2[18] - 0.5*t27726*var2[19] - 0.5*t27720*var2[20] - 0.5*t27713*var2[21]);
  p_output1[3]=var2[21]*(-0.5*t27583*var2[0] - 0.5*t27706*var2[1] - 0.5*t27795*var2[2] - 0.5*(1.e-6*t25751*t26824 + 0.3*t27516*t27523 + 0.3*t27547*t27581 + t25751*t27865 + t26189*t27872 + t23733*t27879 + t25751*t27884 + 0.3*t27573*t27895)*var2[3] - 0.5*(1.e-6*t25751*t27391 + t27341*t27865 + t27355*t27872 + t27329*t27879 + t27341*t27884 + t27971 + t27972 + t27974 + t27980 + t27981 + t27982)*var2[4] - 0.5*(1.e-6*t25751*t26803 + t25663*t27865 + t26180*t27872 + t20374*t27879 + t25663*t27884 + t27943 + t27944 + t27946 + t27951 + t27952 + t27957)*var2[5] - 0.5*(t27900 + t27901 + t27902 + t27903 + t27904 + t27922 + t27923 + t27924 + t27931 + t27933 + t27934)*var2[14] - 0.5*(t27900 + t27901 + t27902 + t27903 + t27904 + t27905 + t27907 + t27908 + t27915 + t27916 + t27917)*var2[15] - 0.5*(t27862*t27865 + t27869*t27872 + t27876*t27879 + t27862*t27884 + t27886 + t27887 + t27888 + t27892 + t27896 + t27897)*var2[16] - 0.5*t27858*var2[17] - 0.5*t27832*var2[18] - 0.5*t27824*var2[19] - 0.5*t27817*var2[20] - 0.5*t27809*var2[21]);
  p_output1[4]=var2[21]*(-0.5*t27481*var2[0] - 0.5*t27697*var2[1] - 0.5*t27787*var2[2] - 0.5*(1.e-6*t26824*t27341 + t27971 + t27972 + t27974 + t27980 + t27981 + t27982 + t25751*t28053 + t26189*t28058 + t23733*t28064 + t25751*t28071)*var2[3] - 0.5*(1.e-6*t27341*t27391 + 0.3*t27417*t27426 + 0.3*t27445*t27479 + 0.3*t27470*t27978 + t27341*t28053 + t27355*t28058 + t27329*t28064 + t27341*t28071)*var2[4] - 0.5*(1.e-6*t26803*t27341 + t25663*t28053 + t26180*t28058 + t20374*t28064 + t25663*t28071 + t28123 + t28125 + t28126 + t28128 + t28129 + t28130)*var2[5] - 0.5*(t28092 + t28093 + t28094 + t28096 + t28097 + t28109 + t28111 + t28112 + t28113 + t28114 + t28115)*var2[14] - 0.5*(t28092 + t28093 + t28094 + t28096 + t28097 + t28099 + t28100 + t28101 + t28102 + t28103 + t28105)*var2[15] - 0.5*(t27862*t28053 + t27869*t28058 + t27876*t28064 + t27862*t28071 + t28074 + t28076 + t28079 + t28080 + t28082 + t28084)*var2[16] - 0.5*t28047*var2[17] - 0.5*t28036*var2[18] - 0.5*t28026*var2[19] - 0.5*t28018*var2[20] - 0.5*t28008*var2[21]);
  p_output1[5]=var2[21]*(-0.5*t27319*var2[0] - 0.5*t27674*var2[1] - 0.5*t27773*var2[2] - 0.5*(1.e-6*t25663*t26824 + t27943 + t27944 + t27946 + t27951 + t27952 + t27957 + t25751*t28204 + t26189*t28208 + t23733*t28212 + t25751*t28240)*var2[3] - 0.5*(1.e-6*t25663*t27391 + t28123 + t28125 + t28126 + t28128 + t28129 + t28130 + t27341*t28204 + t27355*t28208 + t27329*t28212 + t27341*t28240)*var2[4] - 0.5*(1.e-6*t25663*t26803 + 0.3*t27280*t27301 + 0.3*t27289*t27317 + 0.3*t27266*t27950 + t25663*t28204 + t26180*t28208 + t20374*t28212 + t25663*t28240)*var2[5] - 0.5*(t28270 + t28271 + t28273 + t28274 + t28276 + t28287 + t28288 + t28289 + t28290 + t28291 + t28292)*var2[14] - 0.5*(t28270 + t28271 + t28273 + t28274 + t28276 + t28279 + t28280 + t28281 + t28282 + t28283 + t28284)*var2[15] - 0.5*(t27862*t28204 + t27869*t28208 + t27876*t28212 + t27862*t28240 + t28259 + t28261 + t28262 + t28265 + t28266 + t28267)*var2[16] - 0.5*t28200*var2[17] - 0.5*t28194*var2[18] - 0.5*t28188*var2[19] - 0.5*t28170*var2[20] - 0.5*t28164*var2[21]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=var2[21]*(-0.5*t27228*var2[0] - 0.5*t27662*var2[1] - 0.5*t27765*var2[2] - 0.5*(t27922 + t27923 + t27924 + t27931 + t27933 + t27934 + t28988 + t29001 + t29005 + t29015 + t29023)*var2[3] - 0.5*(t28109 + t28111 + t28112 + t28113 + t28114 + t28115 + t28895 + t28903 + t28906 + t28955 + t28972)*var2[4] - 0.5*(t28287 + t28288 + t28289 + t28290 + t28291 + t28292 + t28622 + t28806 + t28818 + t28819 + t28832)*var2[5] - 0.5*(0.3*t27167*t27205 + 0.3*t27187*t27226 + 0.3*t27153*t27930 + t28599 + t28600 + t28601 + t28602 + t28604)*var2[14] - 0.5*t28611*var2[15] - 0.5*(t28530 + t28560 + t28573 + t28587 + t28588 + t28590 + t28592 + t28594 + t28595 + t28596)*var2[16] - 0.5*t28494*var2[17] - 0.5*t28424*var2[18] - 0.5*t28351*var2[19] - 0.5*t28341*var2[20] - 0.5*t28334*var2[21]);
  p_output1[15]=var2[21]*(-0.5*t27063*var2[0] - 0.5*t27655*var2[1] - 0.5*t27758*var2[2] - 0.5*(t27905 + t27907 + t27908 + t27915 + t27916 + t27917 + t28988 + t29001 + t29005 + t29015 + t29023)*var2[3] - 0.5*(t28099 + t28100 + t28101 + t28102 + t28103 + t28105 + t28895 + t28903 + t28906 + t28955 + t28972)*var2[4] - 0.5*(t28279 + t28280 + t28281 + t28282 + t28283 + t28284 + t28622 + t28806 + t28818 + t28819 + t28832)*var2[5] - 0.5*t28611*var2[14] - 0.5*(0.3*t27031*t27050 + 0.3*t27041*t27061 + 0.3*t27000*t27914 + t28599 + t28600 + t28601 + t28602 + t28604)*var2[15] - 0.5*(t28530 + t28560 + t28573 + t28587 + t29569 + t29571 + t29572 + t29573 + t29574 + t29577)*var2[16] - 0.5*t29560*var2[17] - 0.5*t29551*var2[18] - 0.5*t29153*var2[19] - 0.5*t29090*var2[20] - 0.5*t29070*var2[21]);
  p_output1[16]=var2[21]*(-0.5*t26912*var2[0] - 0.5*t27647*var2[1] - 0.5*t27751*var2[2] - 0.5*(1.e-6*t26824*t27862 + t27886 + t27887 + t27888 + t27892 + t27896 + t27897 + t25751*t29657 + t26189*t29661 + t23733*t29668 + t25751*t29673)*var2[3] - 0.5*(1.e-6*t27391*t27862 + t28074 + t28076 + t28079 + t28080 + t28082 + t28084 + t27341*t29657 + t27355*t29661 + t27329*t29668 + t27341*t29673)*var2[4] - 0.5*(1.e-6*t26803*t27862 + t28259 + t28261 + t28262 + t28265 + t28266 + t28267 + t25663*t29657 + t26180*t29661 + t20374*t29668 + t25663*t29673)*var2[5] - 0.5*(t28588 + t28590 + t28592 + t28594 + t28595 + t28596 + t29653 + t29658 + t29662 + t29670 + t29676)*var2[14] - 0.5*(t29569 + t29571 + t29572 + t29573 + t29574 + t29577 + t29653 + t29658 + t29662 + t29670 + t29676)*var2[15] - 0.5*(0.3*t26848*t26855 + 0.3*t26874*t26896 + 0.3*t26800*t27891 + t27862*t29657 + t27869*t29661 + t27876*t29668 + t27862*t29673)*var2[16] - 0.5*t29648*var2[17] - 0.5*t29638*var2[18] - 0.5*t29627*var2[19] - 0.5*t29615*var2[20] - 0.5*t29605*var2[21]);
  p_output1[17]=var2[21]*(-0.5*t26650*var2[0] - 0.5*t27634*var2[1] - 0.5*t27738*var2[2] - 0.5*t27858*var2[3] - 0.5*t28047*var2[4] - 0.5*t28200*var2[5] - 0.5*t28494*var2[14] - 0.5*t29560*var2[15] - 0.5*t29648*var2[16] - 0.5*(0.3*t26573*t26640 + 0.3*t26614*t26648)*var2[17] - 0.5*t30073*var2[18] - 0.5*t30015*var2[19] - 0.5*t29964*var2[20] - 0.5*t29919*var2[21]);
  p_output1[18]=var2[21]*(-0.5*t26454*var2[0] - 0.5*t27622*var2[1] - 0.5*t27732*var2[2] - 0.5*t27832*var2[3] - 0.5*t28036*var2[4] - 0.5*t28194*var2[5] - 0.5*t28424*var2[14] - 0.5*t29551*var2[15] - 0.5*t29638*var2[16] - 0.5*t30073*var2[17] - 0.5*(0.3*t26424*t26444 + 0.3*t26430*t26450)*var2[18] - 0.5*t30185*var2[19] - 0.5*t30163*var2[20] - 0.5*t30129*var2[21]);
  p_output1[19]=var2[21]*(-0.5*t26392*var2[0] - 0.5*t27615*var2[1] - 0.5*t27726*var2[2] - 0.5*t27824*var2[3] - 0.5*t28026*var2[4] - 0.5*t28188*var2[5] - 0.5*t28351*var2[14] - 0.5*t29153*var2[15] - 0.5*t29627*var2[16] - 0.5*t30015*var2[17] - 0.5*t30185*var2[18] - 0.5*(0.3*t26245*t26328 + 0.3*t26251*t26390)*var2[19] - 0.5*t30282*var2[20] - 0.5*t30255*var2[21]);
  p_output1[20]=var2[21]*(-0.5*t26191*var2[0] - 0.5*t27608*var2[1] - 0.5*t27720*var2[2] - 0.5*t27817*var2[3] - 0.5*t28018*var2[4] - 0.5*t28170*var2[5] - 0.5*t28341*var2[14] - 0.5*t29090*var2[15] - 0.5*t29615*var2[16] - 0.5*t29964*var2[17] - 0.5*t30163*var2[18] - 0.5*t30282*var2[19] - 0.5*(0.3*t25911*t26004 + 0.3*t25928*t26029)*var2[20] - 0.5*t30390*var2[21]);
  p_output1[21]=(-0.5*t25756*var2[0] - 0.5*t27602*var2[1] - 0.5*t27713*var2[2] - 0.5*t27809*var2[3] - 0.5*t28008*var2[4] - 0.5*t28164*var2[5] - 0.5*t28334*var2[14] - 0.5*t29070*var2[15] - 0.5*t29605*var2[16] - 0.5*t29919*var2[17] - 0.5*t30129*var2[18] - 0.5*t30255*var2[19] - 0.5*t30390*var2[20])*var2[21];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 22, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec22_cassie.hh"

namespace Times[2, step, Pattern[Cassie, Blank[]]]
{

void Ce2_vec22_cassie_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
