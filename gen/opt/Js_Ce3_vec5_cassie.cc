/*
 * Automatically Generated from Mathematica.
 * Mon 12 Jun 2017 21:36:21 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double _NotUsed;
  NULL;
  p_output1[0]=4;
  p_output1[1]=4;
  p_output1[2]=4;
  p_output1[3]=4;
  p_output1[4]=4;
  p_output1[5]=4;
  p_output1[6]=4;
  p_output1[7]=4;
  p_output1[8]=4;
  p_output1[9]=4;
  p_output1[10]=4;
  p_output1[11]=4;
  p_output1[12]=4;
  p_output1[13]=4;
  p_output1[14]=4;
  p_output1[15]=4;
  p_output1[16]=4;
  p_output1[17]=4;
  p_output1[18]=4;
  p_output1[19]=4;
  p_output1[20]=4;
  p_output1[21]=4;
  p_output1[22]=5;
  p_output1[23]=5;
  p_output1[24]=5;
  p_output1[25]=5;
  p_output1[26]=5;
  p_output1[27]=5;
  p_output1[28]=5;
  p_output1[29]=5;
  p_output1[30]=5;
  p_output1[31]=5;
  p_output1[32]=5;
  p_output1[33]=5;
  p_output1[34]=5;
  p_output1[35]=5;
  p_output1[36]=5;
  p_output1[37]=5;
  p_output1[38]=5;
  p_output1[39]=5;
  p_output1[40]=5;
  p_output1[41]=5;
  p_output1[42]=5;
  p_output1[43]=5;
  p_output1[44]=5;
  p_output1[45]=5;
  p_output1[46]=6;
  p_output1[47]=6;
  p_output1[48]=6;
  p_output1[49]=6;
  p_output1[50]=6;
  p_output1[51]=6;
  p_output1[52]=6;
  p_output1[53]=6;
  p_output1[54]=6;
  p_output1[55]=6;
  p_output1[56]=6;
  p_output1[57]=6;
  p_output1[58]=6;
  p_output1[59]=6;
  p_output1[60]=6;
  p_output1[61]=6;
  p_output1[62]=6;
  p_output1[63]=6;
  p_output1[64]=6;
  p_output1[65]=6;
  p_output1[66]=6;
  p_output1[67]=6;
  p_output1[68]=6;
  p_output1[69]=6;
  p_output1[70]=6;
  p_output1[71]=6;
  p_output1[72]=6;
  p_output1[73]=6;
  p_output1[74]=6;
  p_output1[75]=6;
  p_output1[76]=6;
  p_output1[77]=6;
  p_output1[78]=6;
  p_output1[79]=6;
  p_output1[80]=6;
  p_output1[81]=6;
  p_output1[82]=6;
  p_output1[83]=6;
  p_output1[84]=6;
  p_output1[85]=6;
  p_output1[86]=6;
  p_output1[87]=7;
  p_output1[88]=7;
  p_output1[89]=7;
  p_output1[90]=7;
  p_output1[91]=7;
  p_output1[92]=7;
  p_output1[93]=7;
  p_output1[94]=7;
  p_output1[95]=7;
  p_output1[96]=7;
  p_output1[97]=7;
  p_output1[98]=7;
  p_output1[99]=7;
  p_output1[100]=7;
  p_output1[101]=7;
  p_output1[102]=7;
  p_output1[103]=7;
  p_output1[104]=7;
  p_output1[105]=7;
  p_output1[106]=7;
  p_output1[107]=7;
  p_output1[108]=7;
  p_output1[109]=7;
  p_output1[110]=7;
  p_output1[111]=7;
  p_output1[112]=8;
  p_output1[113]=8;
  p_output1[114]=8;
  p_output1[115]=8;
  p_output1[116]=8;
  p_output1[117]=8;
  p_output1[118]=8;
  p_output1[119]=8;
  p_output1[120]=8;
  p_output1[121]=8;
  p_output1[122]=8;
  p_output1[123]=8;
  p_output1[124]=8;
  p_output1[125]=8;
  p_output1[126]=8;
  p_output1[127]=8;
  p_output1[128]=8;
  p_output1[129]=8;
  p_output1[130]=8;
  p_output1[131]=8;
  p_output1[132]=8;
  p_output1[133]=8;
  p_output1[134]=8;
  p_output1[135]=8;
  p_output1[136]=8;
  p_output1[137]=9;
  p_output1[138]=9;
  p_output1[139]=9;
  p_output1[140]=9;
  p_output1[141]=9;
  p_output1[142]=9;
  p_output1[143]=9;
  p_output1[144]=9;
  p_output1[145]=9;
  p_output1[146]=9;
  p_output1[147]=9;
  p_output1[148]=9;
  p_output1[149]=9;
  p_output1[150]=9;
  p_output1[151]=9;
  p_output1[152]=9;
  p_output1[153]=9;
  p_output1[154]=9;
  p_output1[155]=9;
  p_output1[156]=9;
  p_output1[157]=9;
  p_output1[158]=9;
  p_output1[159]=9;
  p_output1[160]=9;
  p_output1[161]=9;
  p_output1[162]=10;
  p_output1[163]=10;
  p_output1[164]=10;
  p_output1[165]=10;
  p_output1[166]=10;
  p_output1[167]=10;
  p_output1[168]=10;
  p_output1[169]=10;
  p_output1[170]=10;
  p_output1[171]=10;
  p_output1[172]=10;
  p_output1[173]=10;
  p_output1[174]=10;
  p_output1[175]=10;
  p_output1[176]=10;
  p_output1[177]=10;
  p_output1[178]=10;
  p_output1[179]=10;
  p_output1[180]=10;
  p_output1[181]=10;
  p_output1[182]=10;
  p_output1[183]=10;
  p_output1[184]=10;
  p_output1[185]=10;
  p_output1[186]=10;
  p_output1[187]=11;
  p_output1[188]=11;
  p_output1[189]=11;
  p_output1[190]=11;
  p_output1[191]=11;
  p_output1[192]=11;
  p_output1[193]=11;
  p_output1[194]=11;
  p_output1[195]=11;
  p_output1[196]=11;
  p_output1[197]=11;
  p_output1[198]=11;
  p_output1[199]=11;
  p_output1[200]=11;
  p_output1[201]=11;
  p_output1[202]=11;
  p_output1[203]=11;
  p_output1[204]=11;
  p_output1[205]=11;
  p_output1[206]=11;
  p_output1[207]=11;
  p_output1[208]=11;
  p_output1[209]=11;
  p_output1[210]=11;
  p_output1[211]=11;
  p_output1[212]=12;
  p_output1[213]=12;
  p_output1[214]=12;
  p_output1[215]=12;
  p_output1[216]=12;
  p_output1[217]=12;
  p_output1[218]=12;
  p_output1[219]=12;
  p_output1[220]=12;
  p_output1[221]=12;
  p_output1[222]=12;
  p_output1[223]=12;
  p_output1[224]=12;
  p_output1[225]=12;
  p_output1[226]=12;
  p_output1[227]=12;
  p_output1[228]=12;
  p_output1[229]=12;
  p_output1[230]=12;
  p_output1[231]=12;
  p_output1[232]=12;
  p_output1[233]=12;
  p_output1[234]=12;
  p_output1[235]=12;
  p_output1[236]=12;
  p_output1[237]=13;
  p_output1[238]=13;
  p_output1[239]=13;
  p_output1[240]=13;
  p_output1[241]=13;
  p_output1[242]=13;
  p_output1[243]=13;
  p_output1[244]=13;
  p_output1[245]=13;
  p_output1[246]=13;
  p_output1[247]=13;
  p_output1[248]=13;
  p_output1[249]=13;
  p_output1[250]=13;
  p_output1[251]=13;
  p_output1[252]=13;
  p_output1[253]=13;
  p_output1[254]=13;
  p_output1[255]=13;
  p_output1[256]=13;
  p_output1[257]=13;
  p_output1[258]=13;
  p_output1[259]=13;
  p_output1[260]=13;
  p_output1[261]=13;
  p_output1[262]=14;
  p_output1[263]=14;
  p_output1[264]=14;
  p_output1[265]=14;
  p_output1[266]=14;
  p_output1[267]=14;
  p_output1[268]=14;
  p_output1[269]=14;
  p_output1[270]=14;
  p_output1[271]=14;
  p_output1[272]=14;
  p_output1[273]=14;
  p_output1[274]=14;
  p_output1[275]=14;
  p_output1[276]=14;
  p_output1[277]=14;
  p_output1[278]=14;
  p_output1[279]=14;
  p_output1[280]=14;
  p_output1[281]=14;
  p_output1[282]=14;
  p_output1[283]=14;
  p_output1[284]=14;
  p_output1[285]=14;
  p_output1[286]=14;
  p_output1[287]=15;
  p_output1[288]=15;
  p_output1[289]=15;
  p_output1[290]=15;
  p_output1[291]=15;
  p_output1[292]=15;
  p_output1[293]=15;
  p_output1[294]=15;
  p_output1[295]=15;
  p_output1[296]=15;
  p_output1[297]=15;
  p_output1[298]=15;
  p_output1[299]=15;
  p_output1[300]=15;
  p_output1[301]=15;
  p_output1[302]=15;
  p_output1[303]=15;
  p_output1[304]=15;
  p_output1[305]=15;
  p_output1[306]=15;
  p_output1[307]=15;
  p_output1[308]=15;
  p_output1[309]=15;
  p_output1[310]=15;
  p_output1[311]=15;
  p_output1[312]=16;
  p_output1[313]=16;
  p_output1[314]=16;
  p_output1[315]=16;
  p_output1[316]=16;
  p_output1[317]=16;
  p_output1[318]=16;
  p_output1[319]=16;
  p_output1[320]=16;
  p_output1[321]=16;
  p_output1[322]=16;
  p_output1[323]=16;
  p_output1[324]=16;
  p_output1[325]=16;
  p_output1[326]=16;
  p_output1[327]=16;
  p_output1[328]=16;
  p_output1[329]=16;
  p_output1[330]=16;
  p_output1[331]=16;
  p_output1[332]=16;
  p_output1[333]=16;
  p_output1[334]=16;
  p_output1[335]=16;
  p_output1[336]=16;
  p_output1[337]=17;
  p_output1[338]=17;
  p_output1[339]=17;
  p_output1[340]=17;
  p_output1[341]=17;
  p_output1[342]=17;
  p_output1[343]=17;
  p_output1[344]=17;
  p_output1[345]=17;
  p_output1[346]=17;
  p_output1[347]=17;
  p_output1[348]=17;
  p_output1[349]=17;
  p_output1[350]=17;
  p_output1[351]=17;
  p_output1[352]=17;
  p_output1[353]=17;
  p_output1[354]=17;
  p_output1[355]=17;
  p_output1[356]=17;
  p_output1[357]=17;
  p_output1[358]=17;
  p_output1[359]=17;
  p_output1[360]=17;
  p_output1[361]=17;
  p_output1[362]=18;
  p_output1[363]=18;
  p_output1[364]=18;
  p_output1[365]=18;
  p_output1[366]=18;
  p_output1[367]=18;
  p_output1[368]=18;
  p_output1[369]=18;
  p_output1[370]=18;
  p_output1[371]=18;
  p_output1[372]=18;
  p_output1[373]=18;
  p_output1[374]=18;
  p_output1[375]=18;
  p_output1[376]=18;
  p_output1[377]=18;
  p_output1[378]=18;
  p_output1[379]=18;
  p_output1[380]=18;
  p_output1[381]=18;
  p_output1[382]=18;
  p_output1[383]=18;
  p_output1[384]=18;
  p_output1[385]=18;
  p_output1[386]=18;
  p_output1[387]=19;
  p_output1[388]=19;
  p_output1[389]=19;
  p_output1[390]=19;
  p_output1[391]=19;
  p_output1[392]=19;
  p_output1[393]=19;
  p_output1[394]=19;
  p_output1[395]=19;
  p_output1[396]=19;
  p_output1[397]=19;
  p_output1[398]=19;
  p_output1[399]=19;
  p_output1[400]=19;
  p_output1[401]=19;
  p_output1[402]=19;
  p_output1[403]=19;
  p_output1[404]=19;
  p_output1[405]=19;
  p_output1[406]=19;
  p_output1[407]=19;
  p_output1[408]=19;
  p_output1[409]=19;
  p_output1[410]=19;
  p_output1[411]=19;
  p_output1[412]=20;
  p_output1[413]=20;
  p_output1[414]=20;
  p_output1[415]=20;
  p_output1[416]=20;
  p_output1[417]=20;
  p_output1[418]=20;
  p_output1[419]=20;
  p_output1[420]=20;
  p_output1[421]=20;
  p_output1[422]=20;
  p_output1[423]=20;
  p_output1[424]=20;
  p_output1[425]=20;
  p_output1[426]=20;
  p_output1[427]=20;
  p_output1[428]=20;
  p_output1[429]=20;
  p_output1[430]=20;
  p_output1[431]=20;
  p_output1[432]=20;
  p_output1[433]=20;
  p_output1[434]=20;
  p_output1[435]=20;
  p_output1[436]=20;
  p_output1[437]=21;
  p_output1[438]=21;
  p_output1[439]=21;
  p_output1[440]=21;
  p_output1[441]=21;
  p_output1[442]=21;
  p_output1[443]=21;
  p_output1[444]=21;
  p_output1[445]=21;
  p_output1[446]=21;
  p_output1[447]=21;
  p_output1[448]=21;
  p_output1[449]=21;
  p_output1[450]=21;
  p_output1[451]=21;
  p_output1[452]=21;
  p_output1[453]=21;
  p_output1[454]=21;
  p_output1[455]=21;
  p_output1[456]=21;
  p_output1[457]=21;
  p_output1[458]=21;
  p_output1[459]=21;
  p_output1[460]=21;
  p_output1[461]=21;
  p_output1[462]=22;
  p_output1[463]=22;
  p_output1[464]=22;
  p_output1[465]=22;
  p_output1[466]=22;
  p_output1[467]=22;
  p_output1[468]=22;
  p_output1[469]=22;
  p_output1[470]=22;
  p_output1[471]=22;
  p_output1[472]=22;
  p_output1[473]=22;
  p_output1[474]=22;
  p_output1[475]=22;
  p_output1[476]=22;
  p_output1[477]=22;
  p_output1[478]=22;
  p_output1[479]=22;
  p_output1[480]=22;
  p_output1[481]=22;
  p_output1[482]=22;
  p_output1[483]=22;
  p_output1[484]=22;
  p_output1[485]=22;
  p_output1[486]=22;
  p_output1[487]=4;
  p_output1[488]=5;
  p_output1[489]=6;
  p_output1[490]=7;
  p_output1[491]=8;
  p_output1[492]=9;
  p_output1[493]=10;
  p_output1[494]=11;
  p_output1[495]=12;
  p_output1[496]=13;
  p_output1[497]=14;
  p_output1[498]=15;
  p_output1[499]=16;
  p_output1[500]=17;
  p_output1[501]=18;
  p_output1[502]=19;
  p_output1[503]=20;
  p_output1[504]=21;
  p_output1[505]=22;
  p_output1[506]=24;
  p_output1[507]=25;
  p_output1[508]=27;
  p_output1[509]=4;
  p_output1[510]=5;
  p_output1[511]=6;
  p_output1[512]=7;
  p_output1[513]=8;
  p_output1[514]=9;
  p_output1[515]=10;
  p_output1[516]=11;
  p_output1[517]=12;
  p_output1[518]=13;
  p_output1[519]=14;
  p_output1[520]=15;
  p_output1[521]=16;
  p_output1[522]=17;
  p_output1[523]=18;
  p_output1[524]=19;
  p_output1[525]=20;
  p_output1[526]=21;
  p_output1[527]=22;
  p_output1[528]=23;
  p_output1[529]=24;
  p_output1[530]=25;
  p_output1[531]=26;
  p_output1[532]=27;
  p_output1[533]=4;
  p_output1[534]=5;
  p_output1[535]=6;
  p_output1[536]=7;
  p_output1[537]=8;
  p_output1[538]=9;
  p_output1[539]=10;
  p_output1[540]=11;
  p_output1[541]=12;
  p_output1[542]=13;
  p_output1[543]=14;
  p_output1[544]=15;
  p_output1[545]=16;
  p_output1[546]=17;
  p_output1[547]=18;
  p_output1[548]=19;
  p_output1[549]=20;
  p_output1[550]=21;
  p_output1[551]=22;
  p_output1[552]=23;
  p_output1[553]=24;
  p_output1[554]=25;
  p_output1[555]=26;
  p_output1[556]=27;
  p_output1[557]=28;
  p_output1[558]=29;
  p_output1[559]=30;
  p_output1[560]=31;
  p_output1[561]=32;
  p_output1[562]=33;
  p_output1[563]=34;
  p_output1[564]=35;
  p_output1[565]=36;
  p_output1[566]=37;
  p_output1[567]=38;
  p_output1[568]=39;
  p_output1[569]=40;
  p_output1[570]=41;
  p_output1[571]=42;
  p_output1[572]=43;
  p_output1[573]=44;
  p_output1[574]=4;
  p_output1[575]=5;
  p_output1[576]=6;
  p_output1[577]=7;
  p_output1[578]=8;
  p_output1[579]=9;
  p_output1[580]=10;
  p_output1[581]=11;
  p_output1[582]=12;
  p_output1[583]=13;
  p_output1[584]=14;
  p_output1[585]=23;
  p_output1[586]=24;
  p_output1[587]=25;
  p_output1[588]=26;
  p_output1[589]=27;
  p_output1[590]=28;
  p_output1[591]=29;
  p_output1[592]=30;
  p_output1[593]=31;
  p_output1[594]=32;
  p_output1[595]=33;
  p_output1[596]=34;
  p_output1[597]=35;
  p_output1[598]=36;
  p_output1[599]=4;
  p_output1[600]=5;
  p_output1[601]=6;
  p_output1[602]=7;
  p_output1[603]=8;
  p_output1[604]=9;
  p_output1[605]=10;
  p_output1[606]=11;
  p_output1[607]=12;
  p_output1[608]=13;
  p_output1[609]=14;
  p_output1[610]=23;
  p_output1[611]=24;
  p_output1[612]=25;
  p_output1[613]=26;
  p_output1[614]=27;
  p_output1[615]=28;
  p_output1[616]=29;
  p_output1[617]=30;
  p_output1[618]=31;
  p_output1[619]=32;
  p_output1[620]=33;
  p_output1[621]=34;
  p_output1[622]=35;
  p_output1[623]=36;
  p_output1[624]=4;
  p_output1[625]=5;
  p_output1[626]=6;
  p_output1[627]=7;
  p_output1[628]=8;
  p_output1[629]=9;
  p_output1[630]=10;
  p_output1[631]=11;
  p_output1[632]=12;
  p_output1[633]=13;
  p_output1[634]=14;
  p_output1[635]=23;
  p_output1[636]=24;
  p_output1[637]=25;
  p_output1[638]=26;
  p_output1[639]=27;
  p_output1[640]=28;
  p_output1[641]=29;
  p_output1[642]=30;
  p_output1[643]=31;
  p_output1[644]=32;
  p_output1[645]=33;
  p_output1[646]=34;
  p_output1[647]=35;
  p_output1[648]=36;
  p_output1[649]=4;
  p_output1[650]=5;
  p_output1[651]=6;
  p_output1[652]=7;
  p_output1[653]=8;
  p_output1[654]=9;
  p_output1[655]=10;
  p_output1[656]=11;
  p_output1[657]=12;
  p_output1[658]=13;
  p_output1[659]=14;
  p_output1[660]=23;
  p_output1[661]=24;
  p_output1[662]=25;
  p_output1[663]=26;
  p_output1[664]=27;
  p_output1[665]=28;
  p_output1[666]=29;
  p_output1[667]=30;
  p_output1[668]=31;
  p_output1[669]=32;
  p_output1[670]=33;
  p_output1[671]=34;
  p_output1[672]=35;
  p_output1[673]=36;
  p_output1[674]=4;
  p_output1[675]=5;
  p_output1[676]=6;
  p_output1[677]=7;
  p_output1[678]=8;
  p_output1[679]=9;
  p_output1[680]=10;
  p_output1[681]=11;
  p_output1[682]=12;
  p_output1[683]=13;
  p_output1[684]=14;
  p_output1[685]=23;
  p_output1[686]=24;
  p_output1[687]=25;
  p_output1[688]=26;
  p_output1[689]=27;
  p_output1[690]=28;
  p_output1[691]=29;
  p_output1[692]=30;
  p_output1[693]=31;
  p_output1[694]=32;
  p_output1[695]=33;
  p_output1[696]=34;
  p_output1[697]=35;
  p_output1[698]=36;
  p_output1[699]=4;
  p_output1[700]=5;
  p_output1[701]=6;
  p_output1[702]=7;
  p_output1[703]=8;
  p_output1[704]=9;
  p_output1[705]=10;
  p_output1[706]=11;
  p_output1[707]=12;
  p_output1[708]=13;
  p_output1[709]=14;
  p_output1[710]=23;
  p_output1[711]=24;
  p_output1[712]=25;
  p_output1[713]=26;
  p_output1[714]=27;
  p_output1[715]=28;
  p_output1[716]=29;
  p_output1[717]=30;
  p_output1[718]=31;
  p_output1[719]=32;
  p_output1[720]=33;
  p_output1[721]=34;
  p_output1[722]=35;
  p_output1[723]=36;
  p_output1[724]=4;
  p_output1[725]=5;
  p_output1[726]=6;
  p_output1[727]=7;
  p_output1[728]=8;
  p_output1[729]=9;
  p_output1[730]=10;
  p_output1[731]=11;
  p_output1[732]=12;
  p_output1[733]=13;
  p_output1[734]=14;
  p_output1[735]=23;
  p_output1[736]=24;
  p_output1[737]=25;
  p_output1[738]=26;
  p_output1[739]=27;
  p_output1[740]=28;
  p_output1[741]=29;
  p_output1[742]=30;
  p_output1[743]=31;
  p_output1[744]=32;
  p_output1[745]=33;
  p_output1[746]=34;
  p_output1[747]=35;
  p_output1[748]=36;
  p_output1[749]=4;
  p_output1[750]=5;
  p_output1[751]=6;
  p_output1[752]=7;
  p_output1[753]=8;
  p_output1[754]=9;
  p_output1[755]=10;
  p_output1[756]=11;
  p_output1[757]=12;
  p_output1[758]=13;
  p_output1[759]=14;
  p_output1[760]=23;
  p_output1[761]=24;
  p_output1[762]=25;
  p_output1[763]=26;
  p_output1[764]=27;
  p_output1[765]=28;
  p_output1[766]=29;
  p_output1[767]=30;
  p_output1[768]=31;
  p_output1[769]=32;
  p_output1[770]=33;
  p_output1[771]=34;
  p_output1[772]=35;
  p_output1[773]=36;
  p_output1[774]=4;
  p_output1[775]=5;
  p_output1[776]=6;
  p_output1[777]=15;
  p_output1[778]=16;
  p_output1[779]=17;
  p_output1[780]=18;
  p_output1[781]=19;
  p_output1[782]=20;
  p_output1[783]=21;
  p_output1[784]=22;
  p_output1[785]=23;
  p_output1[786]=24;
  p_output1[787]=25;
  p_output1[788]=26;
  p_output1[789]=27;
  p_output1[790]=28;
  p_output1[791]=37;
  p_output1[792]=38;
  p_output1[793]=39;
  p_output1[794]=40;
  p_output1[795]=41;
  p_output1[796]=42;
  p_output1[797]=43;
  p_output1[798]=44;
  p_output1[799]=4;
  p_output1[800]=5;
  p_output1[801]=6;
  p_output1[802]=15;
  p_output1[803]=16;
  p_output1[804]=17;
  p_output1[805]=18;
  p_output1[806]=19;
  p_output1[807]=20;
  p_output1[808]=21;
  p_output1[809]=22;
  p_output1[810]=23;
  p_output1[811]=24;
  p_output1[812]=25;
  p_output1[813]=26;
  p_output1[814]=27;
  p_output1[815]=28;
  p_output1[816]=37;
  p_output1[817]=38;
  p_output1[818]=39;
  p_output1[819]=40;
  p_output1[820]=41;
  p_output1[821]=42;
  p_output1[822]=43;
  p_output1[823]=44;
  p_output1[824]=4;
  p_output1[825]=5;
  p_output1[826]=6;
  p_output1[827]=15;
  p_output1[828]=16;
  p_output1[829]=17;
  p_output1[830]=18;
  p_output1[831]=19;
  p_output1[832]=20;
  p_output1[833]=21;
  p_output1[834]=22;
  p_output1[835]=23;
  p_output1[836]=24;
  p_output1[837]=25;
  p_output1[838]=26;
  p_output1[839]=27;
  p_output1[840]=28;
  p_output1[841]=37;
  p_output1[842]=38;
  p_output1[843]=39;
  p_output1[844]=40;
  p_output1[845]=41;
  p_output1[846]=42;
  p_output1[847]=43;
  p_output1[848]=44;
  p_output1[849]=4;
  p_output1[850]=5;
  p_output1[851]=6;
  p_output1[852]=15;
  p_output1[853]=16;
  p_output1[854]=17;
  p_output1[855]=18;
  p_output1[856]=19;
  p_output1[857]=20;
  p_output1[858]=21;
  p_output1[859]=22;
  p_output1[860]=23;
  p_output1[861]=24;
  p_output1[862]=25;
  p_output1[863]=26;
  p_output1[864]=27;
  p_output1[865]=28;
  p_output1[866]=37;
  p_output1[867]=38;
  p_output1[868]=39;
  p_output1[869]=40;
  p_output1[870]=41;
  p_output1[871]=42;
  p_output1[872]=43;
  p_output1[873]=44;
  p_output1[874]=4;
  p_output1[875]=5;
  p_output1[876]=6;
  p_output1[877]=15;
  p_output1[878]=16;
  p_output1[879]=17;
  p_output1[880]=18;
  p_output1[881]=19;
  p_output1[882]=20;
  p_output1[883]=21;
  p_output1[884]=22;
  p_output1[885]=23;
  p_output1[886]=24;
  p_output1[887]=25;
  p_output1[888]=26;
  p_output1[889]=27;
  p_output1[890]=28;
  p_output1[891]=37;
  p_output1[892]=38;
  p_output1[893]=39;
  p_output1[894]=40;
  p_output1[895]=41;
  p_output1[896]=42;
  p_output1[897]=43;
  p_output1[898]=44;
  p_output1[899]=4;
  p_output1[900]=5;
  p_output1[901]=6;
  p_output1[902]=15;
  p_output1[903]=16;
  p_output1[904]=17;
  p_output1[905]=18;
  p_output1[906]=19;
  p_output1[907]=20;
  p_output1[908]=21;
  p_output1[909]=22;
  p_output1[910]=23;
  p_output1[911]=24;
  p_output1[912]=25;
  p_output1[913]=26;
  p_output1[914]=27;
  p_output1[915]=28;
  p_output1[916]=37;
  p_output1[917]=38;
  p_output1[918]=39;
  p_output1[919]=40;
  p_output1[920]=41;
  p_output1[921]=42;
  p_output1[922]=43;
  p_output1[923]=44;
  p_output1[924]=4;
  p_output1[925]=5;
  p_output1[926]=6;
  p_output1[927]=15;
  p_output1[928]=16;
  p_output1[929]=17;
  p_output1[930]=18;
  p_output1[931]=19;
  p_output1[932]=20;
  p_output1[933]=21;
  p_output1[934]=22;
  p_output1[935]=23;
  p_output1[936]=24;
  p_output1[937]=25;
  p_output1[938]=26;
  p_output1[939]=27;
  p_output1[940]=28;
  p_output1[941]=37;
  p_output1[942]=38;
  p_output1[943]=39;
  p_output1[944]=40;
  p_output1[945]=41;
  p_output1[946]=42;
  p_output1[947]=43;
  p_output1[948]=44;
  p_output1[949]=4;
  p_output1[950]=5;
  p_output1[951]=6;
  p_output1[952]=15;
  p_output1[953]=16;
  p_output1[954]=17;
  p_output1[955]=18;
  p_output1[956]=19;
  p_output1[957]=20;
  p_output1[958]=21;
  p_output1[959]=22;
  p_output1[960]=23;
  p_output1[961]=24;
  p_output1[962]=25;
  p_output1[963]=26;
  p_output1[964]=27;
  p_output1[965]=28;
  p_output1[966]=37;
  p_output1[967]=38;
  p_output1[968]=39;
  p_output1[969]=40;
  p_output1[970]=41;
  p_output1[971]=42;
  p_output1[972]=43;
  p_output1[973]=44;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 1 && ncols == 1) && 
      !(mrows == 1 && ncols == 1))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 487, (mwSize) 2, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Js_Ce3_vec5_cassie.hh"

namespace Times[2, step, Pattern[Cassie, Blank[]]]
{

void Js_Ce3_vec5_cassie_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
